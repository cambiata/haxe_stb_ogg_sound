// Generated by Haxe 3.4.0 (git build development @ 75c0f05)
#include <hxcpp.h>

#ifndef INCLUDED_95f339a1d026d52c
#define INCLUDED_95f339a1d026d52c
#include "hxMath.h"
#endif
#ifndef INCLUDED_Lambda
#include <Lambda.h>
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_Type
#include <Type.h>
#endif
#ifndef INCLUDED_haxe_io_Input
#include <haxe/io/Input.h>
#endif
#ifndef INCLUDED_haxe_io_Output
#include <haxe/io/Output.h>
#endif
#ifndef INCLUDED_stb_format_vorbis_VorbisDecodeState
#include <stb/format/vorbis/VorbisDecodeState.h>
#endif
#ifndef INCLUDED_stb_format_vorbis_VorbisDecoder
#include <stb/format/vorbis/VorbisDecoder.h>
#endif
#ifndef INCLUDED_stb_format_vorbis_VorbisTools
#include <stb/format/vorbis/VorbisTools.h>
#endif
#ifndef INCLUDED_stb_format_vorbis__VorbisDecodeState_FindPageResult
#include <stb/format/vorbis/_VorbisDecodeState/FindPageResult.h>
#endif
#ifndef INCLUDED_stb_format_vorbis_data_Codebook
#include <stb/format/vorbis/data/Codebook.h>
#endif
#ifndef INCLUDED_stb_format_vorbis_data_Floor
#include <stb/format/vorbis/data/Floor.h>
#endif
#ifndef INCLUDED_stb_format_vorbis_data_Floor1
#include <stb/format/vorbis/data/Floor1.h>
#endif
#ifndef INCLUDED_stb_format_vorbis_data_Header
#include <stb/format/vorbis/data/Header.h>
#endif
#ifndef INCLUDED_stb_format_vorbis_data_Mapping
#include <stb/format/vorbis/data/Mapping.h>
#endif
#ifndef INCLUDED_stb_format_vorbis_data_MappingChannel
#include <stb/format/vorbis/data/MappingChannel.h>
#endif
#ifndef INCLUDED_stb_format_vorbis_data_Mode
#include <stb/format/vorbis/data/Mode.h>
#endif
#ifndef INCLUDED_stb_format_vorbis_data_ProbedPage
#include <stb/format/vorbis/data/ProbedPage.h>
#endif
#ifndef INCLUDED_stb_format_vorbis_data_ReaderError
#include <stb/format/vorbis/data/ReaderError.h>
#endif
#ifndef INCLUDED_stb_format_vorbis_data_ReaderErrorType
#include <stb/format/vorbis/data/ReaderErrorType.h>
#endif
#ifndef INCLUDED_stb_format_vorbis_data_Residue
#include <stb/format/vorbis/data/Residue.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_79a4005a31909e64_44_new,"stb.format.vorbis.VorbisDecoder","new",0x4cfbe032,"stb.format.vorbis.VorbisDecoder.new","stb/format/vorbis/VorbisDecoder.hx",44,0xa94a4f5f)
HX_DEFINE_STACK_FRAME(_hx_pos_79a4005a31909e64_147_skipSamples,"stb.format.vorbis.VorbisDecoder","skipSamples",0x8312661c,"stb.format.vorbis.VorbisDecoder.skipSamples","stb/format/vorbis/VorbisDecoder.hx",147,0xa94a4f5f)
HX_DEFINE_STACK_FRAME(_hx_pos_79a4005a31909e64_167_setupSampleNumber,"stb.format.vorbis.VorbisDecoder","setupSampleNumber",0x2e607402,"stb.format.vorbis.VorbisDecoder.setupSampleNumber","stb/format/vorbis/VorbisDecoder.hx",167,0xa94a4f5f)
HX_DEFINE_STACK_FRAME(_hx_pos_79a4005a31909e64_173_seek,"stb.format.vorbis.VorbisDecoder","seek",0x12b64d66,"stb.format.vorbis.VorbisDecoder.seek","stb/format/vorbis/VorbisDecoder.hx",173,0xa94a4f5f)
HX_DEFINE_STACK_FRAME(_hx_pos_79a4005a31909e64_275_seekFrameFromPage,"stb.format.vorbis.VorbisDecoder","seekFrameFromPage",0x6f976ce0,"stb.format.vorbis.VorbisDecoder.seekFrameFromPage","stb/format/vorbis/VorbisDecoder.hx",275,0xa94a4f5f)
HX_DEFINE_STACK_FRAME(_hx_pos_79a4005a31909e64_338_clone,"stb.format.vorbis.VorbisDecoder","clone",0x1b0c3baf,"stb.format.vorbis.VorbisDecoder.clone","stb/format/vorbis/VorbisDecoder.hx",338,0xa94a4f5f)
HX_DEFINE_STACK_FRAME(_hx_pos_79a4005a31909e64_371_ensurePosition,"stb.format.vorbis.VorbisDecoder","ensurePosition",0xff9d7df5,"stb.format.vorbis.VorbisDecoder.ensurePosition","stb/format/vorbis/VorbisDecoder.hx",371,0xa94a4f5f)
HX_DEFINE_STACK_FRAME(_hx_pos_79a4005a31909e64_374_getFrameFloat,"stb.format.vorbis.VorbisDecoder","getFrameFloat",0xaf9420b7,"stb.format.vorbis.VorbisDecoder.getFrameFloat","stb/format/vorbis/VorbisDecoder.hx",374,0xa94a4f5f)
HX_DEFINE_STACK_FRAME(_hx_pos_79a4005a31909e64_390_pumpFirstFrame,"stb.format.vorbis.VorbisDecoder","pumpFirstFrame",0xf27d7213,"stb.format.vorbis.VorbisDecoder.pumpFirstFrame","stb/format/vorbis/VorbisDecoder.hx",390,0xa94a4f5f)
HX_DEFINE_STACK_FRAME(_hx_pos_79a4005a31909e64_393_finishFrame,"stb.format.vorbis.VorbisDecoder","finishFrame",0x915fccac,"stb.format.vorbis.VorbisDecoder.finishFrame","stb/format/vorbis/VorbisDecoder.hx",393,0xa94a4f5f)
HX_DEFINE_STACK_FRAME(_hx_pos_79a4005a31909e64_454_getWindow,"stb.format.vorbis.VorbisDecoder","getWindow",0xe81bd678,"stb.format.vorbis.VorbisDecoder.getWindow","stb/format/vorbis/VorbisDecoder.hx",454,0xa94a4f5f)
HX_DEFINE_STACK_FRAME(_hx_pos_79a4005a31909e64_467_initBlocksize,"stb.format.vorbis.VorbisDecoder","initBlocksize",0x4f6dcdb0,"stb.format.vorbis.VorbisDecoder.initBlocksize","stb/format/vorbis/VorbisDecoder.hx",467,0xa94a4f5f)
HX_DEFINE_STACK_FRAME(_hx_pos_79a4005a31909e64_480_inverseMdct,"stb.format.vorbis.VorbisDecoder","inverseMdct",0x8581bb6a,"stb.format.vorbis.VorbisDecoder.inverseMdct","stb/format/vorbis/VorbisDecoder.hx",480,0xa94a4f5f)
static const int _hx_array_data_42df9f40_51[] = {
	(int)0,(int)1,(int)2,(int)2,(int)3,(int)3,(int)3,(int)3,(int)4,(int)4,(int)4,(int)4,(int)4,(int)4,(int)4,(int)4,
};
HX_DEFINE_STACK_FRAME(_hx_pos_79a4005a31909e64_486_decodePacket,"stb.format.vorbis.VorbisDecoder","decodePacket",0x2a4da544,"stb.format.vorbis.VorbisDecoder.decodePacket","stb/format/vorbis/VorbisDecoder.hx",486,0xa94a4f5f)
HX_DEFINE_STACK_FRAME(_hx_pos_79a4005a31909e64_496_decodeInitial,"stb.format.vorbis.VorbisDecoder","decodeInitial",0x638dc748,"stb.format.vorbis.VorbisDecoder.decodeInitial","stb/format/vorbis/VorbisDecoder.hx",496,0xa94a4f5f)
static const int _hx_array_data_42df9f40_60[] = {
	(int)0,(int)1,(int)2,(int)2,(int)3,(int)3,(int)3,(int)3,(int)4,(int)4,(int)4,(int)4,(int)4,(int)4,(int)4,(int)4,
};
HX_DEFINE_STACK_FRAME(_hx_pos_79a4005a31909e64_553_decodePacketRest,"stb.format.vorbis.VorbisDecoder","decodePacketRest",0x50441e78,"stb.format.vorbis.VorbisDecoder.decodePacketRest","stb/format/vorbis/VorbisDecoder.hx",553,0xa94a4f5f)
static const int _hx_array_data_42df9f40_80[] = {
	(int)256,(int)128,(int)86,(int)64,
};
static const int _hx_array_data_42df9f40_81[] = {
	(int)0,(int)1,(int)2,(int)2,(int)3,(int)3,(int)3,(int)3,(int)4,(int)4,(int)4,(int)4,(int)4,(int)4,(int)4,(int)4,
};
static const int _hx_array_data_42df9f40_82[] = {
	(int)0,(int)1,(int)2,(int)2,(int)3,(int)3,(int)3,(int)3,(int)4,(int)4,(int)4,(int)4,(int)4,(int)4,(int)4,(int)4,
};
HX_DEFINE_STACK_FRAME(_hx_pos_79a4005a31909e64_72_start,"stb.format.vorbis.VorbisDecoder","start",0x56b49cb4,"stb.format.vorbis.VorbisDecoder.start","stb/format/vorbis/VorbisDecoder.hx",72,0xa94a4f5f)
namespace stb{
namespace format{
namespace vorbis{

void VorbisDecoder_obj::__construct( ::stb::format::vorbis::data::Header header, ::stb::format::vorbis::VorbisDecodeState decodeState){
            	HX_STACKFRAME(&_hx_pos_79a4005a31909e64_44_new)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(header,"header")
            	HX_STACK_ARG(decodeState,"decodeState")
HXLINE(  45)		this->header = header;
HXLINE(  46)		this->decodeState = decodeState;
HXLINE(  47)		this->totalSample = null();
HXLINE(  48)		this->currentSample = (int)0;
HXLINE(  51)		this->previousLength = (int)0;
HXLINE(  53)		this->channelBuffers = ::Array_obj< ::Dynamic>::__new(header->channel);
HXLINE(  54)		this->previousWindow = ::Array_obj< ::Dynamic>::__new(header->channel);
HXLINE(  55)		this->finalY = ::Array_obj< ::Dynamic>::__new(header->channel);
HXLINE(  57)		{
HXLINE(  57)			HX_VARI( int,_g1) = (int)0;
HXDLIN(  57)			HX_VARI( int,_g) = header->channel;
HXDLIN(  57)			while((_g1 < _g)){
HXLINE(  57)				_g1 = (_g1 + (int)1);
HXDLIN(  57)				HX_VARI( int,i) = (_g1 - (int)1);
HXLINE(  58)				{
HXLINE(  58)					::Array< ::Dynamic> this1 = this->channelBuffers;
HXDLIN(  58)					HX_VARI_NAME( ::Array< Float >,this2,"this") = ::Array_obj< Float >::__new(header->blocksize1);
HXDLIN(  58)					this1->__unsafe_set(i,this2);
            				}
HXLINE(  59)				{
HXLINE(  59)					::Array< ::Dynamic> this3 = this->previousWindow;
HXDLIN(  59)					HX_VARI_NAME( ::Array< Float >,this4,"this") = ::Array_obj< Float >::__new(::Std_obj::_hx_int(((Float)header->blocksize1 / (Float)(int)2)));
HXDLIN(  59)					this3->__unsafe_set(i,this4);
            				}
HXLINE(  60)				{
HXLINE(  60)					::Array< ::Dynamic> this5 = this->finalY;
HXDLIN(  60)					::Array< int > val = ::Array_obj< int >::__new();
HXDLIN(  60)					this5->__unsafe_set(i,val);
            				}
            			}
            		}
HXLINE(  63)		this->a = ::Array_obj< ::Dynamic>::__new((int)2);
HXLINE(  64)		this->b = ::Array_obj< ::Dynamic>::__new((int)2);
HXLINE(  65)		this->c = ::Array_obj< ::Dynamic>::__new((int)2);
HXLINE(  66)		this->window = ::Array_obj< ::Dynamic>::__new((int)2);
HXLINE(  67)		this->bitReverseData = ::Array_obj< ::Dynamic>::__new((int)2);
HXLINE(  68)		this->initBlocksize((int)0,header->blocksize0);
HXLINE(  69)		this->initBlocksize((int)1,header->blocksize1);
            	}

Dynamic VorbisDecoder_obj::__CreateEmpty() { return new VorbisDecoder_obj; }

void *VorbisDecoder_obj::_hx_vtable = 0;

Dynamic VorbisDecoder_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< VorbisDecoder_obj > _hx_result = new VorbisDecoder_obj();
	_hx_result->__construct(inArgs[0],inArgs[1]);
	return _hx_result;
}

bool VorbisDecoder_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x29b27daa;
}

int VorbisDecoder_obj::read( ::haxe::io::Output output,int samples,int channels,int sampleRate,bool useFloat){
	Float a;
	if ((sampleRate < (int)0)) {
		a = (((Float)4294967296.0) + sampleRate);
	}
	else {
		a = (sampleRate + ((Float)0.0));
	}
	int _hx_int = this->header->sampleRate;
	Float a1;
	if ((_hx_int < (int)0)) {
		a1 = (((Float)4294967296.0) + _hx_int);
	}
	else {
		a1 = (_hx_int + ((Float)0.0));
	}
	if ((::Std_obj::_hx_int(hx::Mod(a,a1)) != (int)0)) {
		int this1 = this->header->sampleRate;
		Float _hx_tmp;
		if ((this1 < (int)0)) {
			_hx_tmp = (((Float)4294967296.0) + this1);
		}
		else {
			_hx_tmp = (this1 + ((Float)0.0));
		}
		HX_STACK_DO_THROW((((HX_("Unsupported sampleRate : can't convert ",a1,80,14,2c) + ::Std_obj::string(_hx_tmp)) + HX_(" to ",25,3a,7f,15)) + sampleRate));
	}
	if ((hx::Mod(channels,this->header->channel) != (int)0)) {
		HX_STACK_DO_THROW((((HX_("Unsupported channels : can't convert ",7b,f0,64,21) + this->header->channel) + HX_(" to ",25,3a,7f,15)) + channels));
	}
	Float sampleRepeat;
	if ((sampleRate < (int)0)) {
		sampleRepeat = (((Float)4294967296.0) + sampleRate);
	}
	else {
		sampleRepeat = (sampleRate + ((Float)0.0));
	}
	int int1 = this->header->sampleRate;
	Float sampleRepeat1;
	if ((int1 < (int)0)) {
		sampleRepeat1 = (((Float)4294967296.0) + int1);
	}
	else {
		sampleRepeat1 = (int1 + ((Float)0.0));
	}
	int sampleRepeat2 = ::Std_obj::_hx_int(((Float)sampleRepeat / (Float)sampleRepeat1));
	int channelRepeat = ::Std_obj::_hx_int(((Float)channels / (Float)this->header->channel));
	int n = (int)0;
	int len = ::Math_obj::floor(((Float)samples / (Float)sampleRepeat2));
	bool _hx_tmp1;
	if (hx::IsNotNull( this->totalSample )) {
		_hx_tmp1 = (len > (this->totalSample - this->currentSample));
	}
	else {
		_hx_tmp1 = false;
	}
	if (_hx_tmp1) {
		len = (this->totalSample - this->currentSample);
	}
	while((n < len)){
		int k = (this->channelBufferEnd - this->channelBufferStart);
		if ((k >= (len - n))) {
			k = (len - n);
		}
		{
			int _g1 = this->channelBufferStart;
			int _g = (this->channelBufferStart + k);
			while((_g1 < _g)){
				_g1 = (_g1 + (int)1);
				int j = (_g1 - (int)1);
				{
					int _g3 = (int)0;
					while((_g3 < sampleRepeat2)){
						_g3 = (_g3 + (int)1);
						{
							int _g5 = (int)0;
							int _g4 = this->header->channel;
							while((_g5 < _g4)){
								_g5 = (_g5 + (int)1);
								int i = (_g5 - (int)1);
								{
									int _g7 = (int)0;
									while((_g7 < channelRepeat)){
										_g7 = (_g7 + (int)1);
										Float value = ( (Float)(_hx_array_unsafe_get(( (::Array< Float >)(_hx_array_unsafe_get(this->channelBuffers,i)) ),j)) );
										if ((value > (int)1)) {
											value = (int)1;
										}
										else {
											if ((value < (int)-1)) {
												value = (int)-1;
											}
										}
										if (useFloat) {
											output->writeFloat(value);
										}
										else {
											output->writeInt16(::Math_obj::floor((value * (int)32767)));
										}
									}
								}
							}
						}
					}
				}
			}
		}
		n = (n + k);
		 ::stb::format::vorbis::VorbisDecoder _hx_tmp2 = hx::ObjectPtr<OBJ_>(this);
		_hx_tmp2->channelBufferStart = (_hx_tmp2->channelBufferStart + k);
		bool _hx_tmp3;
		if ((n != len)) {
			_hx_tmp3 = (this->getFrameFloat() == (int)0);
		}
		else {
			_hx_tmp3 = true;
		}
		if (_hx_tmp3) {
			goto _hx_goto_2;
		}
	}
	_hx_goto_2:;
	{
		int _g11 = n;
		int _g2 = len;
		while((_g11 < _g2)){
			_g11 = (_g11 + (int)1);
			{
				int _g31 = (int)0;
				while((_g31 < sampleRepeat2)){
					_g31 = (_g31 + (int)1);
					{
						int _g51 = (int)0;
						int _g41 = this->header->channel;
						while((_g51 < _g41)){
							_g51 = (_g51 + (int)1);
							{
								int _g71 = (int)0;
								while((_g71 < channelRepeat)){
									_g71 = (_g71 + (int)1);
									if (useFloat) {
										output->writeFloat((int)0);
									}
									else {
										output->writeInt16((int)0);
									}
								}
							}
						}
					}
				}
			}
		}
	}
	 ::stb::format::vorbis::VorbisDecoder _hx_tmp4 = hx::ObjectPtr<OBJ_>(this);
	_hx_tmp4->currentSample = (_hx_tmp4->currentSample + len);
	return (len * sampleRepeat2);
}


HX_DEFINE_DYNAMIC_FUNC5(VorbisDecoder_obj,read,return )

int VorbisDecoder_obj::skipSamples(int len){
            	HX_STACKFRAME(&_hx_pos_79a4005a31909e64_147_skipSamples)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(len,"len")
HXLINE( 148)		HX_VARI( int,n) = (int)0;
HXLINE( 149)		bool _hx_tmp;
HXDLIN( 149)		if (hx::IsNotNull( this->totalSample )) {
HXLINE( 149)			_hx_tmp = (len > (this->totalSample - this->currentSample));
            		}
            		else {
HXLINE( 149)			_hx_tmp = false;
            		}
HXDLIN( 149)		if (_hx_tmp) {
HXLINE( 150)			len = (this->totalSample - this->currentSample);
            		}
HXLINE( 152)		while((n < len)){
HXLINE( 153)			HX_VARI( int,k) = (this->channelBufferEnd - this->channelBufferStart);
HXLINE( 154)			if ((k >= (len - n))) {
HXLINE( 154)				k = (len - n);
            			}
HXLINE( 155)			n = (n + k);
HXLINE( 156)			 ::stb::format::vorbis::VorbisDecoder _hx_tmp1 = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 156)			_hx_tmp1->channelBufferStart = (_hx_tmp1->channelBufferStart + k);
HXLINE( 157)			bool _hx_tmp2;
HXDLIN( 157)			if ((n != len)) {
HXLINE( 157)				_hx_tmp2 = (this->getFrameFloat() == (int)0);
            			}
            			else {
HXLINE( 157)				_hx_tmp2 = true;
            			}
HXDLIN( 157)			if (_hx_tmp2) {
HXLINE( 158)				goto _hx_goto_11;
            			}
            		}
            		_hx_goto_11:;
HXLINE( 162)		 ::stb::format::vorbis::VorbisDecoder _hx_tmp3 = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 162)		_hx_tmp3->currentSample = (_hx_tmp3->currentSample + len);
HXLINE( 163)		return len;
            	}


HX_DEFINE_DYNAMIC_FUNC1(VorbisDecoder_obj,skipSamples,return )

void VorbisDecoder_obj::setupSampleNumber( ::Dynamic seekFunc,int inputLength){
            	HX_STACKFRAME(&_hx_pos_79a4005a31909e64_167_setupSampleNumber)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(seekFunc,"seekFunc")
            	HX_STACK_ARG(inputLength,"inputLength")
HXLINE( 167)		if (hx::IsNull( this->totalSample )) {
HXLINE( 168)			this->totalSample = this->decodeState->getSampleNumber(seekFunc,inputLength);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC2(VorbisDecoder_obj,setupSampleNumber,(void))

void VorbisDecoder_obj::seek( ::Dynamic seekFunc,int inputLength,int sampleNumber){
            	HX_GC_STACKFRAME(&_hx_pos_79a4005a31909e64_173_seek)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(seekFunc,"seekFunc")
            	HX_STACK_ARG(inputLength,"inputLength")
            	HX_STACK_ARG(sampleNumber,"sampleNumber")
HXLINE( 174)		if ((this->currentSample == sampleNumber)) {
HXLINE( 175)			return;
            		}
HXLINE( 179)		if (hx::IsNull( this->totalSample )) {
HXLINE( 180)			this->setupSampleNumber(seekFunc,inputLength);
HXLINE( 181)			if (hx::IsEq( this->totalSample,(int)0 )) {
HXLINE( 182)				HX_STACK_DO_THROW( ::stb::format::vorbis::data::ReaderError_obj::__alloc( HX_CTX ,::stb::format::vorbis::data::ReaderErrorType_obj::CANT_FIND_LAST_PAGE_dyn(),null(),hx::SourceInfo(HX_("VorbisDecoder.hx",0d,8b,92,a5),182,HX_("stb.format.vorbis.VorbisDecoder",40,9f,df,42),HX_("seek",78,85,50,4c))));
            			}
            		}
HXLINE( 186)		if ((sampleNumber < (int)0)) {
HXLINE( 187)			sampleNumber = (int)0;
            		}
HXLINE( 190)		HX_VARI(  ::stb::format::vorbis::data::ProbedPage,p0) = this->decodeState->pFirst;
HXLINE( 191)		HX_VARI(  ::stb::format::vorbis::data::ProbedPage,p1) = this->decodeState->pLast;
HXLINE( 193)		if (hx::IsGreaterEq( sampleNumber,p1->lastDecodedSample )) {
HXLINE( 194)			sampleNumber = (p1->lastDecodedSample - (int)1);
            		}
HXLINE( 197)		if (hx::IsLess( sampleNumber,p0->lastDecodedSample )) {
HXLINE( 198)			this->seekFrameFromPage(seekFunc,p0->pageStart,(int)0,sampleNumber);
            		}
            		else {
HXLINE( 200)			HX_VARI( int,attempts) = (int)0;
HXLINE( 202)			while((p0->pageEnd < p1->pageStart)){
HXLINE( 207)				HX_VARI( int,startOffset) = p0->pageEnd;
HXLINE( 208)				HX_VARI( int,endOffset) = p1->afterPreviousPageStart;
HXLINE( 209)				HX_VARI(  ::Dynamic,startSample) = p0->lastDecodedSample;
HXLINE( 210)				HX_VARI(  ::Dynamic,endSample) = p1->lastDecodedSample;
HXLINE( 213)				bool _hx_tmp;
HXDLIN( 213)				if (hx::IsNotNull( startSample )) {
HXLINE( 213)					_hx_tmp = hx::IsNull( endSample );
            				}
            				else {
HXLINE( 213)					_hx_tmp = true;
            				}
HXDLIN( 213)				if (_hx_tmp) {
HXLINE( 214)					HX_STACK_DO_THROW( ::stb::format::vorbis::data::ReaderError_obj::__alloc( HX_CTX ,::stb::format::vorbis::data::ReaderErrorType_obj::SEEK_FAILED_dyn(),null(),hx::SourceInfo(HX_("VorbisDecoder.hx",0d,8b,92,a5),214,HX_("stb.format.vorbis.VorbisDecoder",40,9f,df,42),HX_("seek",78,85,50,4c))));
            				}
HXLINE( 220)				HX_VARI( int,a) = (startOffset + (int)4000);
HXDLIN( 220)				HX_VARI( bool,aNeg) = (endOffset < (int)0);
HXDLIN( 220)				bool _hx_tmp1;
HXDLIN( 220)				if ((aNeg != (a < (int)0))) {
HXLINE( 220)					_hx_tmp1 = aNeg;
            				}
            				else {
HXLINE( 220)					_hx_tmp1 = (endOffset > a);
            				}
HXDLIN( 220)				if (_hx_tmp1) {
HXLINE( 221)					endOffset = (endOffset - (int)4000);
            				}
HXLINE( 225)				HX_VARI_NAME( int,_hx_int,"int") = (endOffset - startOffset);
HXDLIN( 225)				Float b;
HXDLIN( 225)				if ((_hx_int < (int)0)) {
HXLINE( 225)					b = (((Float)4294967296.0) + _hx_int);
            				}
            				else {
HXLINE( 225)					b = (_hx_int + ((Float)0.0));
            				}
HXDLIN( 225)				HX_VARI_NAME( int,int1,"int") = (endSample - startSample);
HXDLIN( 225)				Float b1;
HXDLIN( 225)				if ((int1 < (int)0)) {
HXLINE( 225)					b1 = (((Float)4294967296.0) + int1);
            				}
            				else {
HXLINE( 225)					b1 = (int1 + ((Float)0.0));
            				}
HXDLIN( 225)				HX_VARI( int,probe) = (startOffset + ::Math_obj::floor((((Float)b / (Float)b1) * (sampleNumber - startSample))));
HXLINE( 229)				if ((attempts >= (int)4)) {
HXLINE( 230)					HX_VARI( int,probe2) = (startOffset + hx::UShr((endOffset - startOffset),(int)1));
HXLINE( 231)					if ((attempts >= (int)8)) {
HXLINE( 232)						probe = probe2;
            					}
            					else {
HXLINE( 233)						HX_VARI_NAME( bool,aNeg1,"aNeg") = (probe2 < (int)0);
HXDLIN( 233)						bool probe1;
HXDLIN( 233)						if ((aNeg1 != (probe < (int)0))) {
HXLINE( 233)							probe1 = aNeg1;
            						}
            						else {
HXLINE( 233)							probe1 = (probe2 > probe);
            						}
HXDLIN( 233)						if (probe1) {
HXLINE( 234)							probe = (probe + hx::UShr((probe2 - probe),(int)1));
            						}
            						else {
HXLINE( 236)							probe = (probe2 + hx::UShr((probe - probe2),(int)1));
            						}
            					}
            				}
HXLINE( 239)				attempts = (attempts + (int)1);
HXLINE( 240)				seekFunc((this->decodeState->inputPosition = probe));
HXLINE( 242)				switch((int)(_hx_getEnumValueIndex(this->decodeState->findPage(seekFunc,inputLength)))){
            					case (int)0: {
            					}
            					break;
            					case (int)1: {
HXLINE( 244)						HX_STACK_DO_THROW( ::stb::format::vorbis::data::ReaderError_obj::__alloc( HX_CTX ,::stb::format::vorbis::data::ReaderErrorType_obj::SEEK_FAILED_dyn(),null(),hx::SourceInfo(HX_("VorbisDecoder.hx",0d,8b,92,a5),244,HX_("stb.format.vorbis.VorbisDecoder",40,9f,df,42),HX_("seek",78,85,50,4c))));
            					}
            					break;
            				}
HXLINE( 248)				HX_VARI(  ::stb::format::vorbis::data::ProbedPage,q) = this->decodeState->analyzePage(seekFunc,this->header);
HXLINE( 249)				if (hx::IsNull( q )) {
HXLINE( 250)					HX_STACK_DO_THROW( ::stb::format::vorbis::data::ReaderError_obj::__alloc( HX_CTX ,::stb::format::vorbis::data::ReaderErrorType_obj::SEEK_FAILED_dyn(),null(),hx::SourceInfo(HX_("VorbisDecoder.hx",0d,8b,92,a5),250,HX_("stb.format.vorbis.VorbisDecoder",40,9f,df,42),HX_("seek",78,85,50,4c))));
            				}
HXLINE( 252)				q->afterPreviousPageStart = probe;
HXLINE( 255)				if ((q->pageStart == p1->pageStart)) {
HXLINE( 256)					p1 = q;
HXLINE( 257)					continue;
            				}
HXLINE( 260)				if (hx::IsLess( sampleNumber,q->lastDecodedSample )) {
HXLINE( 261)					p1 = q;
            				}
            				else {
HXLINE( 263)					p0 = q;
            				}
            			}
HXLINE( 267)			bool _hx_tmp2;
HXDLIN( 267)			if (hx::IsLessEq( p0->lastDecodedSample,sampleNumber )) {
HXLINE( 267)				_hx_tmp2 = hx::IsLess( sampleNumber,p1->lastDecodedSample );
            			}
            			else {
HXLINE( 267)				_hx_tmp2 = false;
            			}
HXDLIN( 267)			if (_hx_tmp2) {
HXLINE( 268)				this->seekFrameFromPage(seekFunc,p1->pageStart,p0->lastDecodedSample,sampleNumber);
            			}
            			else {
HXLINE( 270)				HX_STACK_DO_THROW( ::stb::format::vorbis::data::ReaderError_obj::__alloc( HX_CTX ,::stb::format::vorbis::data::ReaderErrorType_obj::SEEK_FAILED_dyn(),null(),hx::SourceInfo(HX_("VorbisDecoder.hx",0d,8b,92,a5),270,HX_("stb.format.vorbis.VorbisDecoder",40,9f,df,42),HX_("seek",78,85,50,4c))));
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC3(VorbisDecoder_obj,seek,(void))

void VorbisDecoder_obj::seekFrameFromPage( ::Dynamic seekFunc,int pageStart,int firstSample,int targetSample){
            	HX_STACKFRAME(&_hx_pos_79a4005a31909e64_275_seekFrameFromPage)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(seekFunc,"seekFunc")
            	HX_STACK_ARG(pageStart,"pageStart")
            	HX_STACK_ARG(firstSample,"firstSample")
            	HX_STACK_ARG(targetSample,"targetSample")
HXLINE( 276)		HX_VARI( int,frame) = (int)0;
HXLINE( 277)		HX_VARI( int,frameStart) = firstSample;
HXLINE( 282)		seekFunc((this->decodeState->inputPosition = pageStart));
HXLINE( 283)		this->decodeState->nextSeg = (int)-1;
HXLINE( 292)		HX_VARI( int,leftEnd) = (int)0;
HXLINE( 293)		HX_VARI( int,leftStart) = (int)0;
HXLINE( 295)		HX_VARI(  ::stb::format::vorbis::VorbisDecodeState,prevState) = null();
HXLINE( 296)		HX_VARI(  ::stb::format::vorbis::VorbisDecodeState,lastState) = null();
HXLINE( 298)		while(true){
HXLINE( 299)			prevState = lastState;
HXLINE( 300)			lastState = this->decodeState->clone(seekFunc);
HXLINE( 302)			HX_VARI(  ::Dynamic,initialResult) = this->decodeInitial();
HXLINE( 303)			if (hx::IsNull( initialResult )) {
HXLINE( 304)				lastState = prevState;
HXLINE( 305)				goto _hx_goto_16;
            			}
HXLINE( 308)			leftStart = ( (int)( ::Dynamic(initialResult->__Field(HX_("left",07,08,b0,47),hx::paccDynamic))->__Field(HX_("start",62,74,0b,84),hx::paccDynamic)) );
HXLINE( 309)			leftEnd = ( (int)( ::Dynamic(initialResult->__Field(HX_("left",07,08,b0,47),hx::paccDynamic))->__Field(HX_("end",db,03,4d,00),hx::paccDynamic)) );
HXLINE( 311)			HX_VAR( int,start);
HXDLIN( 311)			if ((frame == (int)0)) {
HXLINE( 311)				start = leftEnd;
            			}
            			else {
HXLINE( 311)				start = leftStart;
            			}
HXLINE( 319)			if ((targetSample < ((frameStart + ( (int)( ::Dynamic(initialResult->__Field(HX_("right",dc,0b,64,e9),hx::paccDynamic))->__Field(HX_("start",62,74,0b,84),hx::paccDynamic)) )) - start))) {
HXLINE( 320)				goto _hx_goto_16;
            			}
HXLINE( 323)			{
HXLINE( 323)				HX_VARI(  ::stb::format::vorbis::VorbisDecodeState,_this) = this->decodeState;
HXDLIN( 323)				while(true){
HXLINE( 323)					bool _hx_tmp;
HXDLIN( 323)					if ((_this->bytesInSeg == (int)0)) {
HXLINE( 323)						if (!(_this->lastSeg)) {
HXLINE( 323)							_hx_tmp = (_this->next() != (int)0);
            						}
            						else {
HXLINE( 323)							_hx_tmp = false;
            						}
            					}
            					else {
HXLINE( 323)						_hx_tmp = true;
            					}
HXDLIN( 323)					if (!(_hx_tmp)) {
HXLINE( 323)						goto _hx_goto_17;
            					}
HXDLIN( 323)					_this->bytesInSeg--;
HXDLIN( 323)					{
HXLINE( 323)						_this->inputPosition = (_this->inputPosition + (int)1);
HXDLIN( 323)						_this->input->readByte();
            					}
            				}
            				_hx_goto_17:;
            			}
HXLINE( 324)			frameStart = (frameStart + (( (int)( ::Dynamic(initialResult->__Field(HX_("right",dc,0b,64,e9),hx::paccDynamic))->__Field(HX_("start",62,74,0b,84),hx::paccDynamic)) ) - start));
HXLINE( 325)			frame = (frame + (int)1);
            		}
            		_hx_goto_16:;
HXLINE( 328)		this->decodeState = lastState;
HXLINE( 329)		seekFunc(this->decodeState->inputPosition);
HXLINE( 331)		this->previousLength = (int)0;
HXLINE( 332)		this->pumpFirstFrame();
HXLINE( 334)		this->currentSample = frameStart;
HXLINE( 335)		this->skipSamples((targetSample - frameStart));
            	}


HX_DEFINE_DYNAMIC_FUNC4(VorbisDecoder_obj,seekFrameFromPage,(void))

 ::stb::format::vorbis::VorbisDecoder VorbisDecoder_obj::clone( ::Dynamic seekFunc){
            	HX_STACKFRAME(&_hx_pos_79a4005a31909e64_338_clone)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(seekFunc,"seekFunc")
HXLINE( 339)		HX_VARI(  ::stb::format::vorbis::VorbisDecoder,decoder) = ( ( ::stb::format::vorbis::VorbisDecoder)(::Type_obj::createEmptyInstance(hx::ClassOf< ::stb::format::vorbis::VorbisDecoder >())) );
HXLINE( 341)		decoder->currentSample = this->currentSample;
HXLINE( 342)		decoder->totalSample = this->totalSample;
HXLINE( 343)		decoder->previousLength = this->previousLength;
HXLINE( 344)		decoder->channelBufferStart = this->channelBufferStart;
HXLINE( 345)		decoder->channelBufferEnd = this->channelBufferEnd;
HXLINE( 348)		decoder->a = this->a;
HXLINE( 349)		decoder->b = this->b;
HXLINE( 350)		decoder->c = this->c;
HXLINE( 351)		decoder->window = this->window;
HXLINE( 352)		decoder->bitReverseData = this->bitReverseData;
HXLINE( 353)		decoder->header = this->header;
HXLINE( 356)		decoder->decodeState = this->decodeState->clone(seekFunc);
HXLINE( 357)		decoder->channelBuffers = ::Array_obj< ::Dynamic>::__new(this->header->channel);
HXLINE( 358)		decoder->previousWindow = ::Array_obj< ::Dynamic>::__new(this->header->channel);
HXLINE( 359)		decoder->finalY = ::Array_obj< ::Dynamic>::__new(this->header->channel);
HXLINE( 361)		{
HXLINE( 361)			HX_VARI( int,_g1) = (int)0;
HXDLIN( 361)			HX_VARI( int,_g) = this->header->channel;
HXDLIN( 361)			while((_g1 < _g)){
HXLINE( 361)				_g1 = (_g1 + (int)1);
HXDLIN( 361)				HX_VARI( int,i) = (_g1 - (int)1);
HXLINE( 362)				{
HXLINE( 362)					::Array< ::Dynamic> this1 = decoder->channelBuffers;
HXDLIN( 362)					::Array< Float > val = ::stb::format::vorbis::VorbisTools_obj::copyVector(( (::Array< Float >)(_hx_array_unsafe_get(this->channelBuffers,i)) ));
HXDLIN( 362)					this1->__unsafe_set(i,val);
            				}
HXLINE( 363)				{
HXLINE( 363)					::Array< ::Dynamic> this2 = decoder->previousWindow;
HXDLIN( 363)					::Array< Float > val1 = ::stb::format::vorbis::VorbisTools_obj::copyVector(( (::Array< Float >)(_hx_array_unsafe_get(this->previousWindow,i)) ));
HXDLIN( 363)					this2->__unsafe_set(i,val1);
            				}
HXLINE( 364)				{
HXLINE( 364)					::Array< ::Dynamic> this3 = decoder->finalY;
HXDLIN( 364)					::Array< int > val2 = ::Lambda_obj::array(_hx_array_unsafe_get(this->finalY,i));
HXDLIN( 364)					this3->__unsafe_set(i,val2);
            				}
            			}
            		}
HXLINE( 367)		return decoder;
            	}


HX_DEFINE_DYNAMIC_FUNC1(VorbisDecoder_obj,clone,return )

void VorbisDecoder_obj::ensurePosition( ::Dynamic seekFunc){
            	HX_STACKFRAME(&_hx_pos_79a4005a31909e64_371_ensurePosition)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(seekFunc,"seekFunc")
HXLINE( 371)		seekFunc(this->decodeState->inputPosition);
            	}


HX_DEFINE_DYNAMIC_FUNC1(VorbisDecoder_obj,ensurePosition,(void))

int VorbisDecoder_obj::getFrameFloat(){
            	HX_STACKFRAME(&_hx_pos_79a4005a31909e64_374_getFrameFloat)
            	HX_STACK_THIS(this)
HXLINE( 375)		HX_VARI(  ::Dynamic,result) = this->decodePacket();
HXLINE( 376)		if (hx::IsNull( result )) {
HXLINE( 377)			this->channelBufferStart = (this->channelBufferEnd = (int)0);
HXLINE( 378)			return (int)0;
            		}
HXLINE( 381)		HX_VARI( int,len) = this->finishFrame(result);
HXLINE( 383)		this->channelBufferStart = ( (int)(result->__Field(HX_("left",07,08,b0,47),hx::paccDynamic)) );
HXLINE( 384)		this->channelBufferEnd = (( (int)(result->__Field(HX_("left",07,08,b0,47),hx::paccDynamic)) ) + len);
HXLINE( 386)		return len;
            	}


HX_DEFINE_DYNAMIC_FUNC0(VorbisDecoder_obj,getFrameFloat,return )

void VorbisDecoder_obj::pumpFirstFrame(){
            	HX_STACKFRAME(&_hx_pos_79a4005a31909e64_390_pumpFirstFrame)
            	HX_STACK_THIS(this)
HXLINE( 390)		this->finishFrame(this->decodePacket());
            	}


HX_DEFINE_DYNAMIC_FUNC0(VorbisDecoder_obj,pumpFirstFrame,(void))

int VorbisDecoder_obj::finishFrame( ::Dynamic r){
            	HX_STACKFRAME(&_hx_pos_79a4005a31909e64_393_finishFrame)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(r,"r")
HXLINE( 394)		HX_VARI( int,len) = ( (int)(r->__Field(HX_("len",d5,4b,52,00),hx::paccDynamic)) );
HXLINE( 395)		HX_VARI( int,right) = ( (int)(r->__Field(HX_("right",dc,0b,64,e9),hx::paccDynamic)) );
HXLINE( 396)		HX_VARI( int,left) = ( (int)(r->__Field(HX_("left",07,08,b0,47),hx::paccDynamic)) );
HXLINE( 407)		if ((this->previousLength != (int)0)) {
HXLINE( 408)			HX_VARI( int,n) = this->previousLength;
HXLINE( 409)			HX_VARI( ::Array< Float >,w) = this->getWindow(n);
HXLINE( 410)			{
HXLINE( 410)				HX_VARI( int,_g1) = (int)0;
HXDLIN( 410)				HX_VARI( int,_g) = this->header->channel;
HXDLIN( 410)				while((_g1 < _g)){
HXLINE( 410)					_g1 = (_g1 + (int)1);
HXDLIN( 410)					HX_VARI( int,i) = (_g1 - (int)1);
HXLINE( 411)					HX_VARI( ::Array< Float >,cb) = ( (::Array< Float >)(_hx_array_unsafe_get(this->channelBuffers,i)) );
HXLINE( 412)					HX_VARI( ::Array< Float >,pw) = ( (::Array< Float >)(_hx_array_unsafe_get(this->previousWindow,i)) );
HXLINE( 413)					{
HXLINE( 413)						HX_VARI( int,_g3) = (int)0;
HXDLIN( 413)						while((_g3 < n)){
HXLINE( 413)							_g3 = (_g3 + (int)1);
HXDLIN( 413)							HX_VARI( int,j) = (_g3 - (int)1);
HXLINE( 414)							{
HXLINE( 414)								HX_VARI( Float,val) = ( (Float)(_hx_array_unsafe_get(cb,(left + j))) );
HXDLIN( 414)								HX_VARI_NAME( Float,val1,"val") = (val * ( (Float)(_hx_array_unsafe_get(w,j)) ));
HXDLIN( 414)								HX_VARI_NAME( Float,val2,"val") = ( (Float)(_hx_array_unsafe_get(pw,j)) );
HXDLIN( 414)								Float val3 = (val1 + (val2 * ( (Float)(_hx_array_unsafe_get(w,((n - (int)1) - j))) )));
HXDLIN( 414)								cb->__unsafe_set((left + j),val3);
            							}
            						}
            					}
            				}
            			}
            		}
HXLINE( 419)		HX_VARI( int,prev) = this->previousLength;
HXLINE( 422)		this->previousLength = (len - right);
HXLINE( 430)		{
HXLINE( 430)			HX_VARI_NAME( int,_g11,"_g1") = (int)0;
HXDLIN( 430)			HX_VARI_NAME( int,_g2,"_g") = this->header->channel;
HXDLIN( 430)			while((_g11 < _g2)){
HXLINE( 430)				_g11 = (_g11 + (int)1);
HXDLIN( 430)				HX_VARI_NAME( int,i1,"i") = (_g11 - (int)1);
HXLINE( 431)				HX_VARI_NAME( ::Array< Float >,pw1,"pw") = ( (::Array< Float >)(_hx_array_unsafe_get(this->previousWindow,i1)) );
HXLINE( 432)				HX_VARI_NAME( ::Array< Float >,cb1,"cb") = ( (::Array< Float >)(_hx_array_unsafe_get(this->channelBuffers,i1)) );
HXLINE( 433)				{
HXLINE( 433)					HX_VARI_NAME( int,_g31,"_g3") = (int)0;
HXDLIN( 433)					HX_VARI_NAME( int,_g21,"_g2") = (len - right);
HXDLIN( 433)					while((_g31 < _g21)){
HXLINE( 433)						_g31 = (_g31 + (int)1);
HXDLIN( 433)						HX_VARI_NAME( int,j1,"j") = (_g31 - (int)1);
HXLINE( 434)						{
HXLINE( 434)							Float val4 = ( (Float)(_hx_array_unsafe_get(cb1,(right + j1))) );
HXDLIN( 434)							pw1->__unsafe_set(j1,val4);
            						}
            					}
            				}
            			}
            		}
HXLINE( 438)		if ((prev == (int)0)) {
HXLINE( 442)			return (int)0;
            		}
HXLINE( 446)		if ((len < right)) {
HXLINE( 447)			right = len;
            		}
HXLINE( 450)		return (right - left);
            	}


HX_DEFINE_DYNAMIC_FUNC1(VorbisDecoder_obj,finishFrame,return )

::Array< Float > VorbisDecoder_obj::getWindow(int len){
            	HX_STACKFRAME(&_hx_pos_79a4005a31909e64_454_getWindow)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(len,"len")
HXLINE( 455)		len = ((int)len << (int)(int)1);
HXLINE( 456)		if ((len == this->header->blocksize0)) {
HXLINE( 456)			return _hx_array_unsafe_get(this->window,(int)0);
            		}
            		else {
HXLINE( 458)			if ((len == this->header->blocksize1)) {
HXLINE( 456)				return _hx_array_unsafe_get(this->window,(int)1);
            			}
            			else {
HXLINE( 456)				return null();
            			}
            		}
HXDLIN( 456)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(VorbisDecoder_obj,getWindow,return )

void VorbisDecoder_obj::initBlocksize(int bs,int n){
            	HX_STACKFRAME(&_hx_pos_79a4005a31909e64_467_initBlocksize)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(bs,"bs")
            	HX_STACK_ARG(n,"n")
HXLINE( 468)		HX_VARI( int,n2) = ((int)n >> (int)(int)1);
HXLINE( 469)		{
HXLINE( 469)			::Array< ::Dynamic> this1 = this->a;
HXDLIN( 469)			HX_VARI_NAME( ::Array< Float >,this2,"this") = ::Array_obj< Float >::__new(n2);
HXDLIN( 469)			this1->__unsafe_set(bs,this2);
            		}
HXLINE( 470)		{
HXLINE( 470)			::Array< ::Dynamic> this3 = this->b;
HXDLIN( 470)			HX_VARI_NAME( ::Array< Float >,this4,"this") = ::Array_obj< Float >::__new(n2);
HXDLIN( 470)			this3->__unsafe_set(bs,this4);
            		}
HXLINE( 471)		{
HXLINE( 471)			::Array< ::Dynamic> this5 = this->c;
HXDLIN( 471)			HX_VARI_NAME( ::Array< Float >,this6,"this") = ::Array_obj< Float >::__new(((int)n >> (int)(int)2));
HXDLIN( 471)			this5->__unsafe_set(bs,this6);
            		}
HXLINE( 472)		{
HXLINE( 472)			::Array< ::Dynamic> this7 = this->window;
HXDLIN( 472)			HX_VARI_NAME( ::Array< Float >,this8,"this") = ::Array_obj< Float >::__new(n2);
HXDLIN( 472)			this7->__unsafe_set(bs,this8);
            		}
HXLINE( 473)		{
HXLINE( 473)			::Array< ::Dynamic> this9 = this->bitReverseData;
HXDLIN( 473)			HX_VARI_NAME( ::Array< int >,this10,"this") = ::Array_obj< int >::__new(((int)n >> (int)(int)3));
HXDLIN( 473)			this9->__unsafe_set(bs,this10);
            		}
HXLINE( 475)		::Array< Float > _hx_tmp = ( (::Array< Float >)(_hx_array_unsafe_get(this->a,bs)) );
HXDLIN( 475)		::Array< Float > _hx_tmp1 = ( (::Array< Float >)(_hx_array_unsafe_get(this->b,bs)) );
HXDLIN( 475)		::stb::format::vorbis::VorbisTools_obj::computeTwiddleFactors(n,_hx_tmp,_hx_tmp1,( (::Array< Float >)(_hx_array_unsafe_get(this->c,bs)) ));
HXLINE( 476)		::stb::format::vorbis::VorbisTools_obj::computeWindow(n,( (::Array< Float >)(_hx_array_unsafe_get(this->window,bs)) ));
HXLINE( 477)		::stb::format::vorbis::VorbisTools_obj::computeBitReverse(n,( (::Array< int >)(_hx_array_unsafe_get(this->bitReverseData,bs)) ));
            	}


HX_DEFINE_DYNAMIC_FUNC2(VorbisDecoder_obj,initBlocksize,(void))

void VorbisDecoder_obj::inverseMdct(::Array< Float > buffer,int n,bool blocktype){
            	HX_STACKFRAME(&_hx_pos_79a4005a31909e64_480_inverseMdct)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(buffer,"buffer")
            	HX_STACK_ARG(n,"n")
            	HX_STACK_ARG(blocktype,"blocktype")
HXLINE( 481)		HX_VAR( int,bt);
HXDLIN( 481)		if (blocktype) {
HXLINE( 481)			bt = (int)1;
            		}
            		else {
HXLINE( 481)			bt = (int)0;
            		}
HXLINE( 482)		{
HXLINE( 482)			HX_VARI( ::Array< Float >,a) = ( (::Array< Float >)(_hx_array_unsafe_get(this->a,bt)) );
HXDLIN( 482)			HX_VARI( ::Array< Float >,b) = ( (::Array< Float >)(_hx_array_unsafe_get(this->b,bt)) );
HXDLIN( 482)			HX_VARI( ::Array< Float >,c) = ( (::Array< Float >)(_hx_array_unsafe_get(this->c,bt)) );
HXDLIN( 482)			HX_VARI( ::Array< int >,bitReverse) = ( (::Array< int >)(_hx_array_unsafe_get(this->bitReverseData,bt)) );
HXDLIN( 482)			HX_VARI( int,n2) = ((int)n >> (int)(int)1);
HXDLIN( 482)			HX_VARI( int,n4) = ((int)n >> (int)(int)2);
HXDLIN( 482)			HX_VARI( int,n8) = ((int)n >> (int)(int)3);
HXDLIN( 482)			HX_VARI( ::Array< Float >,buf2) = ::Array_obj< Float >::__new(n2);
HXDLIN( 482)			{
HXLINE( 482)				HX_VARI( int,dOffset) = (n2 - (int)2);
HXDLIN( 482)				HX_VARI( int,aaOffset) = (int)0;
HXDLIN( 482)				HX_VARI( int,eOffset) = (int)0;
HXDLIN( 482)				while((eOffset != n2)){
HXLINE( 482)					{
HXLINE( 482)						HX_VARI( Float,val) = ( (Float)(_hx_array_unsafe_get(buffer,eOffset)) );
HXDLIN( 482)						HX_VARI_NAME( Float,val1,"val") = (val * ( (Float)(_hx_array_unsafe_get(a,aaOffset)) ));
HXDLIN( 482)						HX_VARI_NAME( Float,val2,"val") = ( (Float)(_hx_array_unsafe_get(buffer,(eOffset + (int)2))) );
HXDLIN( 482)						Float val3 = (val1 - (val2 * ( (Float)(_hx_array_unsafe_get(a,(aaOffset + (int)1))) )));
HXDLIN( 482)						buf2->__unsafe_set((dOffset + (int)1),val3);
            					}
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( Float,val4,"val") = ( (Float)(_hx_array_unsafe_get(buffer,eOffset)) );
HXDLIN( 482)						HX_VARI_NAME( Float,val5,"val") = (val4 * ( (Float)(_hx_array_unsafe_get(a,(aaOffset + (int)1))) ));
HXDLIN( 482)						HX_VARI_NAME( Float,val6,"val") = ( (Float)(_hx_array_unsafe_get(buffer,(eOffset + (int)2))) );
HXDLIN( 482)						Float val7 = (val5 + (val6 * ( (Float)(_hx_array_unsafe_get(a,aaOffset)) )));
HXDLIN( 482)						buf2->__unsafe_set(dOffset,val7);
            					}
HXDLIN( 482)					dOffset = (dOffset - (int)2);
HXDLIN( 482)					aaOffset = (aaOffset + (int)2);
HXDLIN( 482)					eOffset = (eOffset + (int)4);
            				}
HXDLIN( 482)				eOffset = (n2 - (int)3);
HXDLIN( 482)				while((dOffset >= (int)0)){
HXLINE( 482)					{
HXLINE( 482)						HX_VARI_NAME( Float,val8,"val") = -(( (Float)(_hx_array_unsafe_get(buffer,(eOffset + (int)2))) ));
HXDLIN( 482)						HX_VARI_NAME( Float,val9,"val") = (val8 * ( (Float)(_hx_array_unsafe_get(a,aaOffset)) ));
HXDLIN( 482)						HX_VARI_NAME( Float,val10,"val") = -(( (Float)(_hx_array_unsafe_get(buffer,eOffset)) ));
HXDLIN( 482)						Float val11 = (val9 - (val10 * ( (Float)(_hx_array_unsafe_get(a,(aaOffset + (int)1))) )));
HXDLIN( 482)						buf2->__unsafe_set((dOffset + (int)1),val11);
            					}
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( Float,val12,"val") = -(( (Float)(_hx_array_unsafe_get(buffer,(eOffset + (int)2))) ));
HXDLIN( 482)						HX_VARI_NAME( Float,val13,"val") = (val12 * ( (Float)(_hx_array_unsafe_get(a,(aaOffset + (int)1))) ));
HXDLIN( 482)						HX_VARI_NAME( Float,val14,"val") = -(( (Float)(_hx_array_unsafe_get(buffer,eOffset)) ));
HXDLIN( 482)						Float val15 = (val13 + (val14 * ( (Float)(_hx_array_unsafe_get(a,aaOffset)) )));
HXDLIN( 482)						buf2->__unsafe_set(dOffset,val15);
            					}
HXDLIN( 482)					dOffset = (dOffset - (int)2);
HXDLIN( 482)					aaOffset = (aaOffset + (int)2);
HXDLIN( 482)					eOffset = (eOffset - (int)4);
            				}
            			}
HXDLIN( 482)			{
HXLINE( 482)				HX_VARI_NAME( int,aaOffset1,"aaOffset") = (n2 - (int)8);
HXDLIN( 482)				HX_VARI( int,eOffset0) = n4;
HXDLIN( 482)				HX_VARI( int,eOffset1) = (int)0;
HXDLIN( 482)				HX_VARI( int,dOffset0) = n4;
HXDLIN( 482)				HX_VARI( int,dOffset1) = (int)0;
HXDLIN( 482)				while((aaOffset1 >= (int)0)){
HXLINE( 482)					HX_VARI( Float,v41_21) = ( (Float)(_hx_array_unsafe_get(buf2,(eOffset0 + (int)1))) );
HXDLIN( 482)					HX_VARI_NAME( Float,v41_211,"v41_21") = (v41_21 - ( (Float)(_hx_array_unsafe_get(buf2,(eOffset1 + (int)1))) ));
HXDLIN( 482)					HX_VARI( Float,v40_20) = ( (Float)(_hx_array_unsafe_get(buf2,eOffset0)) );
HXDLIN( 482)					HX_VARI_NAME( Float,v40_201,"v40_20") = (v40_20 - ( (Float)(_hx_array_unsafe_get(buf2,eOffset1)) ));
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( Float,val16,"val") = ( (Float)(_hx_array_unsafe_get(buf2,(eOffset0 + (int)1))) );
HXDLIN( 482)						Float val17 = (val16 + ( (Float)(_hx_array_unsafe_get(buf2,(eOffset1 + (int)1))) ));
HXDLIN( 482)						buffer->__unsafe_set((dOffset0 + (int)1),val17);
            					}
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( Float,val18,"val") = ( (Float)(_hx_array_unsafe_get(buf2,eOffset0)) );
HXDLIN( 482)						Float val19 = (val18 + ( (Float)(_hx_array_unsafe_get(buf2,eOffset1)) ));
HXDLIN( 482)						buffer->__unsafe_set(dOffset0,val19);
            					}
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( Float,val20,"val") = (v41_211 * ( (Float)(_hx_array_unsafe_get(a,(aaOffset1 + (int)4))) ));
HXDLIN( 482)						Float val21 = (val20 - (v40_201 * ( (Float)(_hx_array_unsafe_get(a,(aaOffset1 + (int)5))) )));
HXDLIN( 482)						buffer->__unsafe_set((dOffset1 + (int)1),val21);
            					}
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( Float,val22,"val") = (v40_201 * ( (Float)(_hx_array_unsafe_get(a,(aaOffset1 + (int)4))) ));
HXDLIN( 482)						Float val23 = (val22 + (v41_211 * ( (Float)(_hx_array_unsafe_get(a,(aaOffset1 + (int)5))) )));
HXDLIN( 482)						buffer->__unsafe_set(dOffset1,val23);
            					}
HXDLIN( 482)					HX_VARI_NAME( Float,v41_212,"v41_21") = ( (Float)(_hx_array_unsafe_get(buf2,(eOffset0 + (int)3))) );
HXDLIN( 482)					v41_211 = (v41_212 - ( (Float)(_hx_array_unsafe_get(buf2,(eOffset1 + (int)3))) ));
HXDLIN( 482)					HX_VARI_NAME( Float,v40_202,"v40_20") = ( (Float)(_hx_array_unsafe_get(buf2,(eOffset0 + (int)2))) );
HXDLIN( 482)					v40_201 = (v40_202 - ( (Float)(_hx_array_unsafe_get(buf2,(eOffset1 + (int)2))) ));
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( Float,val24,"val") = ( (Float)(_hx_array_unsafe_get(buf2,(eOffset0 + (int)3))) );
HXDLIN( 482)						Float val25 = (val24 + ( (Float)(_hx_array_unsafe_get(buf2,(eOffset1 + (int)3))) ));
HXDLIN( 482)						buffer->__unsafe_set((dOffset0 + (int)3),val25);
            					}
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( Float,val26,"val") = ( (Float)(_hx_array_unsafe_get(buf2,(eOffset0 + (int)2))) );
HXDLIN( 482)						Float val27 = (val26 + ( (Float)(_hx_array_unsafe_get(buf2,(eOffset1 + (int)2))) ));
HXDLIN( 482)						buffer->__unsafe_set((dOffset0 + (int)2),val27);
            					}
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( Float,val28,"val") = (v41_211 * ( (Float)(_hx_array_unsafe_get(a,aaOffset1)) ));
HXDLIN( 482)						Float val29 = (val28 - (v40_201 * ( (Float)(_hx_array_unsafe_get(a,(aaOffset1 + (int)1))) )));
HXDLIN( 482)						buffer->__unsafe_set((dOffset1 + (int)3),val29);
            					}
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( Float,val30,"val") = (v40_201 * ( (Float)(_hx_array_unsafe_get(a,aaOffset1)) ));
HXDLIN( 482)						Float val31 = (val30 + (v41_211 * ( (Float)(_hx_array_unsafe_get(a,(aaOffset1 + (int)1))) )));
HXDLIN( 482)						buffer->__unsafe_set((dOffset1 + (int)2),val31);
            					}
HXDLIN( 482)					aaOffset1 = (aaOffset1 - (int)8);
HXDLIN( 482)					dOffset0 = (dOffset0 + (int)4);
HXDLIN( 482)					dOffset1 = (dOffset1 + (int)4);
HXDLIN( 482)					eOffset0 = (eOffset0 + (int)4);
HXDLIN( 482)					eOffset1 = (eOffset1 + (int)4);
            				}
            			}
HXDLIN( 482)			HX_VARI( ::Array< int >,log2_4) = ::Array_obj< int >::fromData( _hx_array_data_42df9f40_51,16);
HXDLIN( 482)			int ld;
HXDLIN( 482)			if ((n < (int)16384)) {
HXLINE( 482)				if ((n < (int)16)) {
HXLINE( 482)					ld = log2_4->__get(n);
            				}
            				else {
HXLINE( 482)					if ((n < (int)512)) {
HXLINE( 482)						ld = ((int)5 + log2_4->__get(((int)n >> (int)(int)5)));
            					}
            					else {
HXLINE( 482)						ld = ((int)10 + log2_4->__get(((int)n >> (int)(int)10)));
            					}
            				}
            			}
            			else {
HXLINE( 482)				if ((n < (int)16777216)) {
HXLINE( 482)					if ((n < (int)524288)) {
HXLINE( 482)						ld = ((int)15 + log2_4->__get(((int)n >> (int)(int)15)));
            					}
            					else {
HXLINE( 482)						ld = ((int)20 + log2_4->__get(((int)n >> (int)(int)20)));
            					}
            				}
            				else {
HXLINE( 482)					if ((n < (int)536870912)) {
HXLINE( 482)						ld = ((int)25 + log2_4->__get(((int)n >> (int)(int)25)));
            					}
            					else {
HXLINE( 482)						if ((n < (int)-2147483648)) {
HXLINE( 482)							ld = ((int)30 + log2_4->__get(((int)n >> (int)(int)30)));
            						}
            						else {
HXLINE( 482)							ld = (int)0;
            						}
            					}
            				}
            			}
HXDLIN( 482)			HX_VARI_NAME( int,ld1,"ld") = (ld - (int)1);
HXDLIN( 482)			{
HXLINE( 482)				HX_VARI( int,i_off) = ((n2 - (int)1) - (n4 * (int)0));
HXDLIN( 482)				HX_VARI( int,eeOffset0) = i_off;
HXDLIN( 482)				HX_VARI( int,eeOffset2) = (i_off + -(((int)n >> (int)(int)3)));
HXDLIN( 482)				HX_VARI( int,aOffset) = (int)0;
HXDLIN( 482)				HX_VARI( int,i) = (((int)((int)n >> (int)(int)4) >> (int)(int)2) + (int)1);
HXDLIN( 482)				while(true){
HXLINE( 482)					i = (i - (int)1);
HXDLIN( 482)					if (!((i > (int)0))) {
HXLINE( 482)						goto _hx_goto_34;
            					}
HXDLIN( 482)					HX_VARI( Float,k00_20) = ( (Float)(_hx_array_unsafe_get(buffer,eeOffset0)) );
HXDLIN( 482)					HX_VARI_NAME( Float,k00_201,"k00_20") = (k00_20 - ( (Float)(_hx_array_unsafe_get(buffer,eeOffset2)) ));
HXDLIN( 482)					HX_VARI( Float,k01_21) = ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset0 + (int)-1))) );
HXDLIN( 482)					HX_VARI_NAME( Float,k01_211,"k01_21") = (k01_21 - ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset2 + (int)-1))) ));
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI( int,_g) = eeOffset0;
HXDLIN( 482)						{
HXLINE( 482)							HX_VARI_NAME( Float,val32,"val") = ( (Float)(_hx_array_unsafe_get(buffer,_g)) );
HXDLIN( 482)							Float val33 = (val32 + ( (Float)(_hx_array_unsafe_get(buffer,eeOffset2)) ));
HXDLIN( 482)							buffer->__unsafe_set(_g,val33);
            						}
            					}
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( int,_g1,"_g") = (eeOffset0 + (int)-1);
HXDLIN( 482)						{
HXLINE( 482)							HX_VARI_NAME( Float,val34,"val") = ( (Float)(_hx_array_unsafe_get(buffer,_g1)) );
HXDLIN( 482)							Float val35 = (val34 + ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset2 + (int)-1))) ));
HXDLIN( 482)							buffer->__unsafe_set(_g1,val35);
            						}
            					}
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( Float,val36,"val") = (k00_201 * ( (Float)(_hx_array_unsafe_get(a,aOffset)) ));
HXDLIN( 482)						Float val37 = (val36 - (k01_211 * ( (Float)(_hx_array_unsafe_get(a,(aOffset + (int)1))) )));
HXDLIN( 482)						buffer->__unsafe_set(eeOffset2,val37);
            					}
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( Float,val38,"val") = (k01_211 * ( (Float)(_hx_array_unsafe_get(a,aOffset)) ));
HXDLIN( 482)						Float val39 = (val38 + (k00_201 * ( (Float)(_hx_array_unsafe_get(a,(aOffset + (int)1))) )));
HXDLIN( 482)						buffer->__unsafe_set((eeOffset2 + (int)-1),val39);
            					}
HXDLIN( 482)					aOffset = (aOffset + (int)8);
HXDLIN( 482)					HX_VARI_NAME( Float,k00_202,"k00_20") = ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset0 + (int)-2))) );
HXDLIN( 482)					k00_201 = (k00_202 - ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset2 + (int)-2))) ));
HXDLIN( 482)					HX_VARI_NAME( Float,k01_212,"k01_21") = ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset0 + (int)-3))) );
HXDLIN( 482)					k01_211 = (k01_212 - ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset2 + (int)-3))) ));
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( int,_g2,"_g") = (eeOffset0 + (int)-2);
HXDLIN( 482)						{
HXLINE( 482)							HX_VARI_NAME( Float,val40,"val") = ( (Float)(_hx_array_unsafe_get(buffer,_g2)) );
HXDLIN( 482)							Float val41 = (val40 + ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset2 + (int)-2))) ));
HXDLIN( 482)							buffer->__unsafe_set(_g2,val41);
            						}
            					}
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( int,_g3,"_g") = (eeOffset0 + (int)-3);
HXDLIN( 482)						{
HXLINE( 482)							HX_VARI_NAME( Float,val42,"val") = ( (Float)(_hx_array_unsafe_get(buffer,_g3)) );
HXDLIN( 482)							Float val43 = (val42 + ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset2 + (int)-3))) ));
HXDLIN( 482)							buffer->__unsafe_set(_g3,val43);
            						}
            					}
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( Float,val44,"val") = (k00_201 * ( (Float)(_hx_array_unsafe_get(a,aOffset)) ));
HXDLIN( 482)						Float val45 = (val44 - (k01_211 * ( (Float)(_hx_array_unsafe_get(a,(aOffset + (int)1))) )));
HXDLIN( 482)						buffer->__unsafe_set((eeOffset2 + (int)-2),val45);
            					}
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( Float,val46,"val") = (k01_211 * ( (Float)(_hx_array_unsafe_get(a,aOffset)) ));
HXDLIN( 482)						Float val47 = (val46 + (k00_201 * ( (Float)(_hx_array_unsafe_get(a,(aOffset + (int)1))) )));
HXDLIN( 482)						buffer->__unsafe_set((eeOffset2 + (int)-3),val47);
            					}
HXDLIN( 482)					aOffset = (aOffset + (int)8);
HXDLIN( 482)					HX_VARI_NAME( Float,k00_203,"k00_20") = ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset0 + (int)-4))) );
HXDLIN( 482)					k00_201 = (k00_203 - ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset2 + (int)-4))) ));
HXDLIN( 482)					HX_VARI_NAME( Float,k01_213,"k01_21") = ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset0 + (int)-5))) );
HXDLIN( 482)					k01_211 = (k01_213 - ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset2 + (int)-5))) ));
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( int,_g4,"_g") = (eeOffset0 + (int)-4);
HXDLIN( 482)						{
HXLINE( 482)							HX_VARI_NAME( Float,val48,"val") = ( (Float)(_hx_array_unsafe_get(buffer,_g4)) );
HXDLIN( 482)							Float val49 = (val48 + ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset2 + (int)-4))) ));
HXDLIN( 482)							buffer->__unsafe_set(_g4,val49);
            						}
            					}
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( int,_g5,"_g") = (eeOffset0 + (int)-5);
HXDLIN( 482)						{
HXLINE( 482)							HX_VARI_NAME( Float,val50,"val") = ( (Float)(_hx_array_unsafe_get(buffer,_g5)) );
HXDLIN( 482)							Float val51 = (val50 + ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset2 + (int)-5))) ));
HXDLIN( 482)							buffer->__unsafe_set(_g5,val51);
            						}
            					}
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( Float,val52,"val") = (k00_201 * ( (Float)(_hx_array_unsafe_get(a,aOffset)) ));
HXDLIN( 482)						Float val53 = (val52 - (k01_211 * ( (Float)(_hx_array_unsafe_get(a,(aOffset + (int)1))) )));
HXDLIN( 482)						buffer->__unsafe_set((eeOffset2 + (int)-4),val53);
            					}
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( Float,val54,"val") = (k01_211 * ( (Float)(_hx_array_unsafe_get(a,aOffset)) ));
HXDLIN( 482)						Float val55 = (val54 + (k00_201 * ( (Float)(_hx_array_unsafe_get(a,(aOffset + (int)1))) )));
HXDLIN( 482)						buffer->__unsafe_set((eeOffset2 + (int)-5),val55);
            					}
HXDLIN( 482)					aOffset = (aOffset + (int)8);
HXDLIN( 482)					HX_VARI_NAME( Float,k00_204,"k00_20") = ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset0 + (int)-6))) );
HXDLIN( 482)					k00_201 = (k00_204 - ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset2 + (int)-6))) ));
HXDLIN( 482)					HX_VARI_NAME( Float,k01_214,"k01_21") = ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset0 + (int)-7))) );
HXDLIN( 482)					k01_211 = (k01_214 - ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset2 + (int)-7))) ));
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( int,_g6,"_g") = (eeOffset0 + (int)-6);
HXDLIN( 482)						{
HXLINE( 482)							HX_VARI_NAME( Float,val56,"val") = ( (Float)(_hx_array_unsafe_get(buffer,_g6)) );
HXDLIN( 482)							Float val57 = (val56 + ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset2 + (int)-6))) ));
HXDLIN( 482)							buffer->__unsafe_set(_g6,val57);
            						}
            					}
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( int,_g7,"_g") = (eeOffset0 + (int)-7);
HXDLIN( 482)						{
HXLINE( 482)							HX_VARI_NAME( Float,val58,"val") = ( (Float)(_hx_array_unsafe_get(buffer,_g7)) );
HXDLIN( 482)							Float val59 = (val58 + ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset2 + (int)-7))) ));
HXDLIN( 482)							buffer->__unsafe_set(_g7,val59);
            						}
            					}
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( Float,val60,"val") = (k00_201 * ( (Float)(_hx_array_unsafe_get(a,aOffset)) ));
HXDLIN( 482)						Float val61 = (val60 - (k01_211 * ( (Float)(_hx_array_unsafe_get(a,(aOffset + (int)1))) )));
HXDLIN( 482)						buffer->__unsafe_set((eeOffset2 + (int)-6),val61);
            					}
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( Float,val62,"val") = (k01_211 * ( (Float)(_hx_array_unsafe_get(a,aOffset)) ));
HXDLIN( 482)						Float val63 = (val62 + (k00_201 * ( (Float)(_hx_array_unsafe_get(a,(aOffset + (int)1))) )));
HXDLIN( 482)						buffer->__unsafe_set((eeOffset2 + (int)-7),val63);
            					}
HXDLIN( 482)					aOffset = (aOffset + (int)8);
HXDLIN( 482)					eeOffset0 = (eeOffset0 - (int)8);
HXDLIN( 482)					eeOffset2 = (eeOffset2 - (int)8);
            				}
            				_hx_goto_34:;
            			}
HXDLIN( 482)			{
HXLINE( 482)				HX_VARI_NAME( int,i_off1,"i_off") = ((n2 - (int)1) - n4);
HXDLIN( 482)				HX_VARI_NAME( int,eeOffset01,"eeOffset0") = i_off1;
HXDLIN( 482)				HX_VARI_NAME( int,eeOffset21,"eeOffset2") = (i_off1 + -(((int)n >> (int)(int)3)));
HXDLIN( 482)				HX_VARI_NAME( int,aOffset1,"aOffset") = (int)0;
HXDLIN( 482)				HX_VARI_NAME( int,i1,"i") = (((int)((int)n >> (int)(int)4) >> (int)(int)2) + (int)1);
HXDLIN( 482)				while(true){
HXLINE( 482)					i1 = (i1 - (int)1);
HXDLIN( 482)					if (!((i1 > (int)0))) {
HXLINE( 482)						goto _hx_goto_35;
            					}
HXDLIN( 482)					HX_VARI_NAME( Float,k00_205,"k00_20") = ( (Float)(_hx_array_unsafe_get(buffer,eeOffset01)) );
HXDLIN( 482)					HX_VARI_NAME( Float,k00_206,"k00_20") = (k00_205 - ( (Float)(_hx_array_unsafe_get(buffer,eeOffset21)) ));
HXDLIN( 482)					HX_VARI_NAME( Float,k01_215,"k01_21") = ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset01 + (int)-1))) );
HXDLIN( 482)					HX_VARI_NAME( Float,k01_216,"k01_21") = (k01_215 - ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset21 + (int)-1))) ));
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( int,_g8,"_g") = eeOffset01;
HXDLIN( 482)						{
HXLINE( 482)							HX_VARI_NAME( Float,val64,"val") = ( (Float)(_hx_array_unsafe_get(buffer,_g8)) );
HXDLIN( 482)							Float val65 = (val64 + ( (Float)(_hx_array_unsafe_get(buffer,eeOffset21)) ));
HXDLIN( 482)							buffer->__unsafe_set(_g8,val65);
            						}
            					}
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( int,_g9,"_g") = (eeOffset01 + (int)-1);
HXDLIN( 482)						{
HXLINE( 482)							HX_VARI_NAME( Float,val66,"val") = ( (Float)(_hx_array_unsafe_get(buffer,_g9)) );
HXDLIN( 482)							Float val67 = (val66 + ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset21 + (int)-1))) ));
HXDLIN( 482)							buffer->__unsafe_set(_g9,val67);
            						}
            					}
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( Float,val68,"val") = (k00_206 * ( (Float)(_hx_array_unsafe_get(a,aOffset1)) ));
HXDLIN( 482)						Float val69 = (val68 - (k01_216 * ( (Float)(_hx_array_unsafe_get(a,(aOffset1 + (int)1))) )));
HXDLIN( 482)						buffer->__unsafe_set(eeOffset21,val69);
            					}
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( Float,val70,"val") = (k01_216 * ( (Float)(_hx_array_unsafe_get(a,aOffset1)) ));
HXDLIN( 482)						Float val71 = (val70 + (k00_206 * ( (Float)(_hx_array_unsafe_get(a,(aOffset1 + (int)1))) )));
HXDLIN( 482)						buffer->__unsafe_set((eeOffset21 + (int)-1),val71);
            					}
HXDLIN( 482)					aOffset1 = (aOffset1 + (int)8);
HXDLIN( 482)					HX_VARI_NAME( Float,k00_207,"k00_20") = ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset01 + (int)-2))) );
HXDLIN( 482)					k00_206 = (k00_207 - ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset21 + (int)-2))) ));
HXDLIN( 482)					HX_VARI_NAME( Float,k01_217,"k01_21") = ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset01 + (int)-3))) );
HXDLIN( 482)					k01_216 = (k01_217 - ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset21 + (int)-3))) ));
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( int,_g10,"_g") = (eeOffset01 + (int)-2);
HXDLIN( 482)						{
HXLINE( 482)							HX_VARI_NAME( Float,val72,"val") = ( (Float)(_hx_array_unsafe_get(buffer,_g10)) );
HXDLIN( 482)							Float val73 = (val72 + ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset21 + (int)-2))) ));
HXDLIN( 482)							buffer->__unsafe_set(_g10,val73);
            						}
            					}
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( int,_g11,"_g") = (eeOffset01 + (int)-3);
HXDLIN( 482)						{
HXLINE( 482)							HX_VARI_NAME( Float,val74,"val") = ( (Float)(_hx_array_unsafe_get(buffer,_g11)) );
HXDLIN( 482)							Float val75 = (val74 + ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset21 + (int)-3))) ));
HXDLIN( 482)							buffer->__unsafe_set(_g11,val75);
            						}
            					}
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( Float,val76,"val") = (k00_206 * ( (Float)(_hx_array_unsafe_get(a,aOffset1)) ));
HXDLIN( 482)						Float val77 = (val76 - (k01_216 * ( (Float)(_hx_array_unsafe_get(a,(aOffset1 + (int)1))) )));
HXDLIN( 482)						buffer->__unsafe_set((eeOffset21 + (int)-2),val77);
            					}
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( Float,val78,"val") = (k01_216 * ( (Float)(_hx_array_unsafe_get(a,aOffset1)) ));
HXDLIN( 482)						Float val79 = (val78 + (k00_206 * ( (Float)(_hx_array_unsafe_get(a,(aOffset1 + (int)1))) )));
HXDLIN( 482)						buffer->__unsafe_set((eeOffset21 + (int)-3),val79);
            					}
HXDLIN( 482)					aOffset1 = (aOffset1 + (int)8);
HXDLIN( 482)					HX_VARI_NAME( Float,k00_208,"k00_20") = ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset01 + (int)-4))) );
HXDLIN( 482)					k00_206 = (k00_208 - ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset21 + (int)-4))) ));
HXDLIN( 482)					HX_VARI_NAME( Float,k01_218,"k01_21") = ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset01 + (int)-5))) );
HXDLIN( 482)					k01_216 = (k01_218 - ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset21 + (int)-5))) ));
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( int,_g12,"_g") = (eeOffset01 + (int)-4);
HXDLIN( 482)						{
HXLINE( 482)							HX_VARI_NAME( Float,val80,"val") = ( (Float)(_hx_array_unsafe_get(buffer,_g12)) );
HXDLIN( 482)							Float val81 = (val80 + ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset21 + (int)-4))) ));
HXDLIN( 482)							buffer->__unsafe_set(_g12,val81);
            						}
            					}
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( int,_g13,"_g") = (eeOffset01 + (int)-5);
HXDLIN( 482)						{
HXLINE( 482)							HX_VARI_NAME( Float,val82,"val") = ( (Float)(_hx_array_unsafe_get(buffer,_g13)) );
HXDLIN( 482)							Float val83 = (val82 + ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset21 + (int)-5))) ));
HXDLIN( 482)							buffer->__unsafe_set(_g13,val83);
            						}
            					}
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( Float,val84,"val") = (k00_206 * ( (Float)(_hx_array_unsafe_get(a,aOffset1)) ));
HXDLIN( 482)						Float val85 = (val84 - (k01_216 * ( (Float)(_hx_array_unsafe_get(a,(aOffset1 + (int)1))) )));
HXDLIN( 482)						buffer->__unsafe_set((eeOffset21 + (int)-4),val85);
            					}
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( Float,val86,"val") = (k01_216 * ( (Float)(_hx_array_unsafe_get(a,aOffset1)) ));
HXDLIN( 482)						Float val87 = (val86 + (k00_206 * ( (Float)(_hx_array_unsafe_get(a,(aOffset1 + (int)1))) )));
HXDLIN( 482)						buffer->__unsafe_set((eeOffset21 + (int)-5),val87);
            					}
HXDLIN( 482)					aOffset1 = (aOffset1 + (int)8);
HXDLIN( 482)					HX_VARI_NAME( Float,k00_209,"k00_20") = ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset01 + (int)-6))) );
HXDLIN( 482)					k00_206 = (k00_209 - ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset21 + (int)-6))) ));
HXDLIN( 482)					HX_VARI_NAME( Float,k01_219,"k01_21") = ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset01 + (int)-7))) );
HXDLIN( 482)					k01_216 = (k01_219 - ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset21 + (int)-7))) ));
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( int,_g14,"_g") = (eeOffset01 + (int)-6);
HXDLIN( 482)						{
HXLINE( 482)							HX_VARI_NAME( Float,val88,"val") = ( (Float)(_hx_array_unsafe_get(buffer,_g14)) );
HXDLIN( 482)							Float val89 = (val88 + ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset21 + (int)-6))) ));
HXDLIN( 482)							buffer->__unsafe_set(_g14,val89);
            						}
            					}
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( int,_g15,"_g") = (eeOffset01 + (int)-7);
HXDLIN( 482)						{
HXLINE( 482)							HX_VARI_NAME( Float,val90,"val") = ( (Float)(_hx_array_unsafe_get(buffer,_g15)) );
HXDLIN( 482)							Float val91 = (val90 + ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset21 + (int)-7))) ));
HXDLIN( 482)							buffer->__unsafe_set(_g15,val91);
            						}
            					}
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( Float,val92,"val") = (k00_206 * ( (Float)(_hx_array_unsafe_get(a,aOffset1)) ));
HXDLIN( 482)						Float val93 = (val92 - (k01_216 * ( (Float)(_hx_array_unsafe_get(a,(aOffset1 + (int)1))) )));
HXDLIN( 482)						buffer->__unsafe_set((eeOffset21 + (int)-6),val93);
            					}
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( Float,val94,"val") = (k01_216 * ( (Float)(_hx_array_unsafe_get(a,aOffset1)) ));
HXDLIN( 482)						Float val95 = (val94 + (k00_206 * ( (Float)(_hx_array_unsafe_get(a,(aOffset1 + (int)1))) )));
HXDLIN( 482)						buffer->__unsafe_set((eeOffset21 + (int)-7),val95);
            					}
HXDLIN( 482)					aOffset1 = (aOffset1 + (int)8);
HXDLIN( 482)					eeOffset01 = (eeOffset01 - (int)8);
HXDLIN( 482)					eeOffset21 = (eeOffset21 - (int)8);
            				}
            				_hx_goto_35:;
            			}
HXDLIN( 482)			{
HXLINE( 482)				HX_VARI( int,d0) = ((n2 - (int)1) - (n8 * (int)0));
HXDLIN( 482)				HX_VARI_NAME( int,aOffset2,"aOffset") = (int)0;
HXDLIN( 482)				HX_VARI_NAME( int,eOffset01,"eOffset0") = d0;
HXDLIN( 482)				HX_VARI( int,eOffset2) = (d0 + -(((int)n >> (int)(int)4)));
HXDLIN( 482)				HX_VARI_NAME( int,i2,"i") = (((int)((int)n >> (int)(int)5) >> (int)(int)2) + (int)1);
HXDLIN( 482)				while(true){
HXLINE( 482)					i2 = (i2 - (int)1);
HXDLIN( 482)					if (!((i2 > (int)0))) {
HXLINE( 482)						goto _hx_goto_36;
            					}
HXDLIN( 482)					HX_VARI_NAME( Float,k00_2010,"k00_20") = ( (Float)(_hx_array_unsafe_get(buffer,eOffset01)) );
HXDLIN( 482)					HX_VARI_NAME( Float,k00_2011,"k00_20") = (k00_2010 - ( (Float)(_hx_array_unsafe_get(buffer,eOffset2)) ));
HXDLIN( 482)					HX_VARI_NAME( Float,k01_2110,"k01_21") = ( (Float)(_hx_array_unsafe_get(buffer,(eOffset01 + (int)-1))) );
HXDLIN( 482)					HX_VARI_NAME( Float,k01_2111,"k01_21") = (k01_2110 - ( (Float)(_hx_array_unsafe_get(buffer,(eOffset2 + (int)-1))) ));
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( int,_g16,"_g") = eOffset01;
HXDLIN( 482)						{
HXLINE( 482)							HX_VARI_NAME( Float,val96,"val") = ( (Float)(_hx_array_unsafe_get(buffer,_g16)) );
HXDLIN( 482)							Float val97 = (val96 + ( (Float)(_hx_array_unsafe_get(buffer,eOffset2)) ));
HXDLIN( 482)							buffer->__unsafe_set(_g16,val97);
            						}
            					}
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( int,_g17,"_g") = (eOffset01 + (int)-1);
HXDLIN( 482)						{
HXLINE( 482)							HX_VARI_NAME( Float,val98,"val") = ( (Float)(_hx_array_unsafe_get(buffer,_g17)) );
HXDLIN( 482)							Float val99 = (val98 + ( (Float)(_hx_array_unsafe_get(buffer,(eOffset2 + (int)-1))) ));
HXDLIN( 482)							buffer->__unsafe_set(_g17,val99);
            						}
            					}
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( Float,val100,"val") = (k00_2011 * ( (Float)(_hx_array_unsafe_get(a,aOffset2)) ));
HXDLIN( 482)						Float val101 = (val100 - (k01_2111 * ( (Float)(_hx_array_unsafe_get(a,(aOffset2 + (int)1))) )));
HXDLIN( 482)						buffer->__unsafe_set(eOffset2,val101);
            					}
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( Float,val102,"val") = (k01_2111 * ( (Float)(_hx_array_unsafe_get(a,aOffset2)) ));
HXDLIN( 482)						Float val103 = (val102 + (k00_2011 * ( (Float)(_hx_array_unsafe_get(a,(aOffset2 + (int)1))) )));
HXDLIN( 482)						buffer->__unsafe_set((eOffset2 + (int)-1),val103);
            					}
HXDLIN( 482)					aOffset2 = (aOffset2 + (int)16);
HXDLIN( 482)					HX_VARI_NAME( Float,k00_2012,"k00_20") = ( (Float)(_hx_array_unsafe_get(buffer,(eOffset01 + (int)-2))) );
HXDLIN( 482)					k00_2011 = (k00_2012 - ( (Float)(_hx_array_unsafe_get(buffer,(eOffset2 + (int)-2))) ));
HXDLIN( 482)					HX_VARI_NAME( Float,k01_2112,"k01_21") = ( (Float)(_hx_array_unsafe_get(buffer,(eOffset01 + (int)-3))) );
HXDLIN( 482)					k01_2111 = (k01_2112 - ( (Float)(_hx_array_unsafe_get(buffer,(eOffset2 + (int)-3))) ));
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( int,_g18,"_g") = (eOffset01 + (int)-2);
HXDLIN( 482)						{
HXLINE( 482)							HX_VARI_NAME( Float,val104,"val") = ( (Float)(_hx_array_unsafe_get(buffer,_g18)) );
HXDLIN( 482)							Float val105 = (val104 + ( (Float)(_hx_array_unsafe_get(buffer,(eOffset2 + (int)-2))) ));
HXDLIN( 482)							buffer->__unsafe_set(_g18,val105);
            						}
            					}
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( int,_g19,"_g") = (eOffset01 + (int)-3);
HXDLIN( 482)						{
HXLINE( 482)							HX_VARI_NAME( Float,val106,"val") = ( (Float)(_hx_array_unsafe_get(buffer,_g19)) );
HXDLIN( 482)							Float val107 = (val106 + ( (Float)(_hx_array_unsafe_get(buffer,(eOffset2 + (int)-3))) ));
HXDLIN( 482)							buffer->__unsafe_set(_g19,val107);
            						}
            					}
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( Float,val108,"val") = (k00_2011 * ( (Float)(_hx_array_unsafe_get(a,aOffset2)) ));
HXDLIN( 482)						Float val109 = (val108 - (k01_2111 * ( (Float)(_hx_array_unsafe_get(a,(aOffset2 + (int)1))) )));
HXDLIN( 482)						buffer->__unsafe_set((eOffset2 + (int)-2),val109);
            					}
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( Float,val110,"val") = (k01_2111 * ( (Float)(_hx_array_unsafe_get(a,aOffset2)) ));
HXDLIN( 482)						Float val111 = (val110 + (k00_2011 * ( (Float)(_hx_array_unsafe_get(a,(aOffset2 + (int)1))) )));
HXDLIN( 482)						buffer->__unsafe_set((eOffset2 + (int)-3),val111);
            					}
HXDLIN( 482)					aOffset2 = (aOffset2 + (int)16);
HXDLIN( 482)					HX_VARI_NAME( Float,k00_2013,"k00_20") = ( (Float)(_hx_array_unsafe_get(buffer,(eOffset01 + (int)-4))) );
HXDLIN( 482)					k00_2011 = (k00_2013 - ( (Float)(_hx_array_unsafe_get(buffer,(eOffset2 + (int)-4))) ));
HXDLIN( 482)					HX_VARI_NAME( Float,k01_2113,"k01_21") = ( (Float)(_hx_array_unsafe_get(buffer,(eOffset01 + (int)-5))) );
HXDLIN( 482)					k01_2111 = (k01_2113 - ( (Float)(_hx_array_unsafe_get(buffer,(eOffset2 + (int)-5))) ));
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( int,_g20,"_g") = (eOffset01 + (int)-4);
HXDLIN( 482)						{
HXLINE( 482)							HX_VARI_NAME( Float,val112,"val") = ( (Float)(_hx_array_unsafe_get(buffer,_g20)) );
HXDLIN( 482)							Float val113 = (val112 + ( (Float)(_hx_array_unsafe_get(buffer,(eOffset2 + (int)-4))) ));
HXDLIN( 482)							buffer->__unsafe_set(_g20,val113);
            						}
            					}
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( int,_g21,"_g") = (eOffset01 + (int)-5);
HXDLIN( 482)						{
HXLINE( 482)							HX_VARI_NAME( Float,val114,"val") = ( (Float)(_hx_array_unsafe_get(buffer,_g21)) );
HXDLIN( 482)							Float val115 = (val114 + ( (Float)(_hx_array_unsafe_get(buffer,(eOffset2 + (int)-5))) ));
HXDLIN( 482)							buffer->__unsafe_set(_g21,val115);
            						}
            					}
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( Float,val116,"val") = (k00_2011 * ( (Float)(_hx_array_unsafe_get(a,aOffset2)) ));
HXDLIN( 482)						Float val117 = (val116 - (k01_2111 * ( (Float)(_hx_array_unsafe_get(a,(aOffset2 + (int)1))) )));
HXDLIN( 482)						buffer->__unsafe_set((eOffset2 + (int)-4),val117);
            					}
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( Float,val118,"val") = (k01_2111 * ( (Float)(_hx_array_unsafe_get(a,aOffset2)) ));
HXDLIN( 482)						Float val119 = (val118 + (k00_2011 * ( (Float)(_hx_array_unsafe_get(a,(aOffset2 + (int)1))) )));
HXDLIN( 482)						buffer->__unsafe_set((eOffset2 + (int)-5),val119);
            					}
HXDLIN( 482)					aOffset2 = (aOffset2 + (int)16);
HXDLIN( 482)					HX_VARI_NAME( Float,k00_2014,"k00_20") = ( (Float)(_hx_array_unsafe_get(buffer,(eOffset01 + (int)-6))) );
HXDLIN( 482)					k00_2011 = (k00_2014 - ( (Float)(_hx_array_unsafe_get(buffer,(eOffset2 + (int)-6))) ));
HXDLIN( 482)					HX_VARI_NAME( Float,k01_2114,"k01_21") = ( (Float)(_hx_array_unsafe_get(buffer,(eOffset01 + (int)-7))) );
HXDLIN( 482)					k01_2111 = (k01_2114 - ( (Float)(_hx_array_unsafe_get(buffer,(eOffset2 + (int)-7))) ));
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( int,_g22,"_g") = (eOffset01 + (int)-6);
HXDLIN( 482)						{
HXLINE( 482)							HX_VARI_NAME( Float,val120,"val") = ( (Float)(_hx_array_unsafe_get(buffer,_g22)) );
HXDLIN( 482)							Float val121 = (val120 + ( (Float)(_hx_array_unsafe_get(buffer,(eOffset2 + (int)-6))) ));
HXDLIN( 482)							buffer->__unsafe_set(_g22,val121);
            						}
            					}
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( int,_g23,"_g") = (eOffset01 + (int)-7);
HXDLIN( 482)						{
HXLINE( 482)							HX_VARI_NAME( Float,val122,"val") = ( (Float)(_hx_array_unsafe_get(buffer,_g23)) );
HXDLIN( 482)							Float val123 = (val122 + ( (Float)(_hx_array_unsafe_get(buffer,(eOffset2 + (int)-7))) ));
HXDLIN( 482)							buffer->__unsafe_set(_g23,val123);
            						}
            					}
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( Float,val124,"val") = (k00_2011 * ( (Float)(_hx_array_unsafe_get(a,aOffset2)) ));
HXDLIN( 482)						Float val125 = (val124 - (k01_2111 * ( (Float)(_hx_array_unsafe_get(a,(aOffset2 + (int)1))) )));
HXDLIN( 482)						buffer->__unsafe_set((eOffset2 + (int)-6),val125);
            					}
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( Float,val126,"val") = (k01_2111 * ( (Float)(_hx_array_unsafe_get(a,aOffset2)) ));
HXDLIN( 482)						Float val127 = (val126 + (k00_2011 * ( (Float)(_hx_array_unsafe_get(a,(aOffset2 + (int)1))) )));
HXDLIN( 482)						buffer->__unsafe_set((eOffset2 + (int)-7),val127);
            					}
HXDLIN( 482)					eOffset01 = (eOffset01 - (int)8);
HXDLIN( 482)					eOffset2 = (eOffset2 - (int)8);
HXDLIN( 482)					aOffset2 = (aOffset2 + (int)16);
            				}
            				_hx_goto_36:;
            			}
HXDLIN( 482)			{
HXLINE( 482)				HX_VARI_NAME( int,d01,"d0") = ((n2 - (int)1) - n8);
HXDLIN( 482)				HX_VARI_NAME( int,aOffset3,"aOffset") = (int)0;
HXDLIN( 482)				HX_VARI_NAME( int,eOffset02,"eOffset0") = d01;
HXDLIN( 482)				HX_VARI_NAME( int,eOffset21,"eOffset2") = (d01 + -(((int)n >> (int)(int)4)));
HXDLIN( 482)				HX_VARI_NAME( int,i3,"i") = (((int)((int)n >> (int)(int)5) >> (int)(int)2) + (int)1);
HXDLIN( 482)				while(true){
HXLINE( 482)					i3 = (i3 - (int)1);
HXDLIN( 482)					if (!((i3 > (int)0))) {
HXLINE( 482)						goto _hx_goto_37;
            					}
HXDLIN( 482)					HX_VARI_NAME( Float,k00_2015,"k00_20") = ( (Float)(_hx_array_unsafe_get(buffer,eOffset02)) );
HXDLIN( 482)					HX_VARI_NAME( Float,k00_2016,"k00_20") = (k00_2015 - ( (Float)(_hx_array_unsafe_get(buffer,eOffset21)) ));
HXDLIN( 482)					HX_VARI_NAME( Float,k01_2115,"k01_21") = ( (Float)(_hx_array_unsafe_get(buffer,(eOffset02 + (int)-1))) );
HXDLIN( 482)					HX_VARI_NAME( Float,k01_2116,"k01_21") = (k01_2115 - ( (Float)(_hx_array_unsafe_get(buffer,(eOffset21 + (int)-1))) ));
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( int,_g24,"_g") = eOffset02;
HXDLIN( 482)						{
HXLINE( 482)							HX_VARI_NAME( Float,val128,"val") = ( (Float)(_hx_array_unsafe_get(buffer,_g24)) );
HXDLIN( 482)							Float val129 = (val128 + ( (Float)(_hx_array_unsafe_get(buffer,eOffset21)) ));
HXDLIN( 482)							buffer->__unsafe_set(_g24,val129);
            						}
            					}
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( int,_g25,"_g") = (eOffset02 + (int)-1);
HXDLIN( 482)						{
HXLINE( 482)							HX_VARI_NAME( Float,val130,"val") = ( (Float)(_hx_array_unsafe_get(buffer,_g25)) );
HXDLIN( 482)							Float val131 = (val130 + ( (Float)(_hx_array_unsafe_get(buffer,(eOffset21 + (int)-1))) ));
HXDLIN( 482)							buffer->__unsafe_set(_g25,val131);
            						}
            					}
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( Float,val132,"val") = (k00_2016 * ( (Float)(_hx_array_unsafe_get(a,aOffset3)) ));
HXDLIN( 482)						Float val133 = (val132 - (k01_2116 * ( (Float)(_hx_array_unsafe_get(a,(aOffset3 + (int)1))) )));
HXDLIN( 482)						buffer->__unsafe_set(eOffset21,val133);
            					}
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( Float,val134,"val") = (k01_2116 * ( (Float)(_hx_array_unsafe_get(a,aOffset3)) ));
HXDLIN( 482)						Float val135 = (val134 + (k00_2016 * ( (Float)(_hx_array_unsafe_get(a,(aOffset3 + (int)1))) )));
HXDLIN( 482)						buffer->__unsafe_set((eOffset21 + (int)-1),val135);
            					}
HXDLIN( 482)					aOffset3 = (aOffset3 + (int)16);
HXDLIN( 482)					HX_VARI_NAME( Float,k00_2017,"k00_20") = ( (Float)(_hx_array_unsafe_get(buffer,(eOffset02 + (int)-2))) );
HXDLIN( 482)					k00_2016 = (k00_2017 - ( (Float)(_hx_array_unsafe_get(buffer,(eOffset21 + (int)-2))) ));
HXDLIN( 482)					HX_VARI_NAME( Float,k01_2117,"k01_21") = ( (Float)(_hx_array_unsafe_get(buffer,(eOffset02 + (int)-3))) );
HXDLIN( 482)					k01_2116 = (k01_2117 - ( (Float)(_hx_array_unsafe_get(buffer,(eOffset21 + (int)-3))) ));
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( int,_g26,"_g") = (eOffset02 + (int)-2);
HXDLIN( 482)						{
HXLINE( 482)							HX_VARI_NAME( Float,val136,"val") = ( (Float)(_hx_array_unsafe_get(buffer,_g26)) );
HXDLIN( 482)							Float val137 = (val136 + ( (Float)(_hx_array_unsafe_get(buffer,(eOffset21 + (int)-2))) ));
HXDLIN( 482)							buffer->__unsafe_set(_g26,val137);
            						}
            					}
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( int,_g27,"_g") = (eOffset02 + (int)-3);
HXDLIN( 482)						{
HXLINE( 482)							HX_VARI_NAME( Float,val138,"val") = ( (Float)(_hx_array_unsafe_get(buffer,_g27)) );
HXDLIN( 482)							Float val139 = (val138 + ( (Float)(_hx_array_unsafe_get(buffer,(eOffset21 + (int)-3))) ));
HXDLIN( 482)							buffer->__unsafe_set(_g27,val139);
            						}
            					}
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( Float,val140,"val") = (k00_2016 * ( (Float)(_hx_array_unsafe_get(a,aOffset3)) ));
HXDLIN( 482)						Float val141 = (val140 - (k01_2116 * ( (Float)(_hx_array_unsafe_get(a,(aOffset3 + (int)1))) )));
HXDLIN( 482)						buffer->__unsafe_set((eOffset21 + (int)-2),val141);
            					}
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( Float,val142,"val") = (k01_2116 * ( (Float)(_hx_array_unsafe_get(a,aOffset3)) ));
HXDLIN( 482)						Float val143 = (val142 + (k00_2016 * ( (Float)(_hx_array_unsafe_get(a,(aOffset3 + (int)1))) )));
HXDLIN( 482)						buffer->__unsafe_set((eOffset21 + (int)-3),val143);
            					}
HXDLIN( 482)					aOffset3 = (aOffset3 + (int)16);
HXDLIN( 482)					HX_VARI_NAME( Float,k00_2018,"k00_20") = ( (Float)(_hx_array_unsafe_get(buffer,(eOffset02 + (int)-4))) );
HXDLIN( 482)					k00_2016 = (k00_2018 - ( (Float)(_hx_array_unsafe_get(buffer,(eOffset21 + (int)-4))) ));
HXDLIN( 482)					HX_VARI_NAME( Float,k01_2118,"k01_21") = ( (Float)(_hx_array_unsafe_get(buffer,(eOffset02 + (int)-5))) );
HXDLIN( 482)					k01_2116 = (k01_2118 - ( (Float)(_hx_array_unsafe_get(buffer,(eOffset21 + (int)-5))) ));
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( int,_g28,"_g") = (eOffset02 + (int)-4);
HXDLIN( 482)						{
HXLINE( 482)							HX_VARI_NAME( Float,val144,"val") = ( (Float)(_hx_array_unsafe_get(buffer,_g28)) );
HXDLIN( 482)							Float val145 = (val144 + ( (Float)(_hx_array_unsafe_get(buffer,(eOffset21 + (int)-4))) ));
HXDLIN( 482)							buffer->__unsafe_set(_g28,val145);
            						}
            					}
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( int,_g29,"_g") = (eOffset02 + (int)-5);
HXDLIN( 482)						{
HXLINE( 482)							HX_VARI_NAME( Float,val146,"val") = ( (Float)(_hx_array_unsafe_get(buffer,_g29)) );
HXDLIN( 482)							Float val147 = (val146 + ( (Float)(_hx_array_unsafe_get(buffer,(eOffset21 + (int)-5))) ));
HXDLIN( 482)							buffer->__unsafe_set(_g29,val147);
            						}
            					}
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( Float,val148,"val") = (k00_2016 * ( (Float)(_hx_array_unsafe_get(a,aOffset3)) ));
HXDLIN( 482)						Float val149 = (val148 - (k01_2116 * ( (Float)(_hx_array_unsafe_get(a,(aOffset3 + (int)1))) )));
HXDLIN( 482)						buffer->__unsafe_set((eOffset21 + (int)-4),val149);
            					}
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( Float,val150,"val") = (k01_2116 * ( (Float)(_hx_array_unsafe_get(a,aOffset3)) ));
HXDLIN( 482)						Float val151 = (val150 + (k00_2016 * ( (Float)(_hx_array_unsafe_get(a,(aOffset3 + (int)1))) )));
HXDLIN( 482)						buffer->__unsafe_set((eOffset21 + (int)-5),val151);
            					}
HXDLIN( 482)					aOffset3 = (aOffset3 + (int)16);
HXDLIN( 482)					HX_VARI_NAME( Float,k00_2019,"k00_20") = ( (Float)(_hx_array_unsafe_get(buffer,(eOffset02 + (int)-6))) );
HXDLIN( 482)					k00_2016 = (k00_2019 - ( (Float)(_hx_array_unsafe_get(buffer,(eOffset21 + (int)-6))) ));
HXDLIN( 482)					HX_VARI_NAME( Float,k01_2119,"k01_21") = ( (Float)(_hx_array_unsafe_get(buffer,(eOffset02 + (int)-7))) );
HXDLIN( 482)					k01_2116 = (k01_2119 - ( (Float)(_hx_array_unsafe_get(buffer,(eOffset21 + (int)-7))) ));
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( int,_g30,"_g") = (eOffset02 + (int)-6);
HXDLIN( 482)						{
HXLINE( 482)							HX_VARI_NAME( Float,val152,"val") = ( (Float)(_hx_array_unsafe_get(buffer,_g30)) );
HXDLIN( 482)							Float val153 = (val152 + ( (Float)(_hx_array_unsafe_get(buffer,(eOffset21 + (int)-6))) ));
HXDLIN( 482)							buffer->__unsafe_set(_g30,val153);
            						}
            					}
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( int,_g31,"_g") = (eOffset02 + (int)-7);
HXDLIN( 482)						{
HXLINE( 482)							HX_VARI_NAME( Float,val154,"val") = ( (Float)(_hx_array_unsafe_get(buffer,_g31)) );
HXDLIN( 482)							Float val155 = (val154 + ( (Float)(_hx_array_unsafe_get(buffer,(eOffset21 + (int)-7))) ));
HXDLIN( 482)							buffer->__unsafe_set(_g31,val155);
            						}
            					}
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( Float,val156,"val") = (k00_2016 * ( (Float)(_hx_array_unsafe_get(a,aOffset3)) ));
HXDLIN( 482)						Float val157 = (val156 - (k01_2116 * ( (Float)(_hx_array_unsafe_get(a,(aOffset3 + (int)1))) )));
HXDLIN( 482)						buffer->__unsafe_set((eOffset21 + (int)-6),val157);
            					}
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( Float,val158,"val") = (k01_2116 * ( (Float)(_hx_array_unsafe_get(a,aOffset3)) ));
HXDLIN( 482)						Float val159 = (val158 + (k00_2016 * ( (Float)(_hx_array_unsafe_get(a,(aOffset3 + (int)1))) )));
HXDLIN( 482)						buffer->__unsafe_set((eOffset21 + (int)-7),val159);
            					}
HXDLIN( 482)					eOffset02 = (eOffset02 - (int)8);
HXDLIN( 482)					eOffset21 = (eOffset21 - (int)8);
HXDLIN( 482)					aOffset3 = (aOffset3 + (int)16);
            				}
            				_hx_goto_37:;
            			}
HXDLIN( 482)			{
HXLINE( 482)				HX_VARI_NAME( int,d02,"d0") = ((n2 - (int)1) - (n8 * (int)2));
HXDLIN( 482)				HX_VARI_NAME( int,aOffset4,"aOffset") = (int)0;
HXDLIN( 482)				HX_VARI_NAME( int,eOffset03,"eOffset0") = d02;
HXDLIN( 482)				HX_VARI_NAME( int,eOffset22,"eOffset2") = (d02 + -(((int)n >> (int)(int)4)));
HXDLIN( 482)				HX_VARI_NAME( int,i4,"i") = (((int)((int)n >> (int)(int)5) >> (int)(int)2) + (int)1);
HXDLIN( 482)				while(true){
HXLINE( 482)					i4 = (i4 - (int)1);
HXDLIN( 482)					if (!((i4 > (int)0))) {
HXLINE( 482)						goto _hx_goto_38;
            					}
HXDLIN( 482)					HX_VARI_NAME( Float,k00_2020,"k00_20") = ( (Float)(_hx_array_unsafe_get(buffer,eOffset03)) );
HXDLIN( 482)					HX_VARI_NAME( Float,k00_2021,"k00_20") = (k00_2020 - ( (Float)(_hx_array_unsafe_get(buffer,eOffset22)) ));
HXDLIN( 482)					HX_VARI_NAME( Float,k01_2120,"k01_21") = ( (Float)(_hx_array_unsafe_get(buffer,(eOffset03 + (int)-1))) );
HXDLIN( 482)					HX_VARI_NAME( Float,k01_2121,"k01_21") = (k01_2120 - ( (Float)(_hx_array_unsafe_get(buffer,(eOffset22 + (int)-1))) ));
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( int,_g32,"_g") = eOffset03;
HXDLIN( 482)						{
HXLINE( 482)							HX_VARI_NAME( Float,val160,"val") = ( (Float)(_hx_array_unsafe_get(buffer,_g32)) );
HXDLIN( 482)							Float val161 = (val160 + ( (Float)(_hx_array_unsafe_get(buffer,eOffset22)) ));
HXDLIN( 482)							buffer->__unsafe_set(_g32,val161);
            						}
            					}
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( int,_g33,"_g") = (eOffset03 + (int)-1);
HXDLIN( 482)						{
HXLINE( 482)							HX_VARI_NAME( Float,val162,"val") = ( (Float)(_hx_array_unsafe_get(buffer,_g33)) );
HXDLIN( 482)							Float val163 = (val162 + ( (Float)(_hx_array_unsafe_get(buffer,(eOffset22 + (int)-1))) ));
HXDLIN( 482)							buffer->__unsafe_set(_g33,val163);
            						}
            					}
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( Float,val164,"val") = (k00_2021 * ( (Float)(_hx_array_unsafe_get(a,aOffset4)) ));
HXDLIN( 482)						Float val165 = (val164 - (k01_2121 * ( (Float)(_hx_array_unsafe_get(a,(aOffset4 + (int)1))) )));
HXDLIN( 482)						buffer->__unsafe_set(eOffset22,val165);
            					}
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( Float,val166,"val") = (k01_2121 * ( (Float)(_hx_array_unsafe_get(a,aOffset4)) ));
HXDLIN( 482)						Float val167 = (val166 + (k00_2021 * ( (Float)(_hx_array_unsafe_get(a,(aOffset4 + (int)1))) )));
HXDLIN( 482)						buffer->__unsafe_set((eOffset22 + (int)-1),val167);
            					}
HXDLIN( 482)					aOffset4 = (aOffset4 + (int)16);
HXDLIN( 482)					HX_VARI_NAME( Float,k00_2022,"k00_20") = ( (Float)(_hx_array_unsafe_get(buffer,(eOffset03 + (int)-2))) );
HXDLIN( 482)					k00_2021 = (k00_2022 - ( (Float)(_hx_array_unsafe_get(buffer,(eOffset22 + (int)-2))) ));
HXDLIN( 482)					HX_VARI_NAME( Float,k01_2122,"k01_21") = ( (Float)(_hx_array_unsafe_get(buffer,(eOffset03 + (int)-3))) );
HXDLIN( 482)					k01_2121 = (k01_2122 - ( (Float)(_hx_array_unsafe_get(buffer,(eOffset22 + (int)-3))) ));
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( int,_g34,"_g") = (eOffset03 + (int)-2);
HXDLIN( 482)						{
HXLINE( 482)							HX_VARI_NAME( Float,val168,"val") = ( (Float)(_hx_array_unsafe_get(buffer,_g34)) );
HXDLIN( 482)							Float val169 = (val168 + ( (Float)(_hx_array_unsafe_get(buffer,(eOffset22 + (int)-2))) ));
HXDLIN( 482)							buffer->__unsafe_set(_g34,val169);
            						}
            					}
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( int,_g35,"_g") = (eOffset03 + (int)-3);
HXDLIN( 482)						{
HXLINE( 482)							HX_VARI_NAME( Float,val170,"val") = ( (Float)(_hx_array_unsafe_get(buffer,_g35)) );
HXDLIN( 482)							Float val171 = (val170 + ( (Float)(_hx_array_unsafe_get(buffer,(eOffset22 + (int)-3))) ));
HXDLIN( 482)							buffer->__unsafe_set(_g35,val171);
            						}
            					}
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( Float,val172,"val") = (k00_2021 * ( (Float)(_hx_array_unsafe_get(a,aOffset4)) ));
HXDLIN( 482)						Float val173 = (val172 - (k01_2121 * ( (Float)(_hx_array_unsafe_get(a,(aOffset4 + (int)1))) )));
HXDLIN( 482)						buffer->__unsafe_set((eOffset22 + (int)-2),val173);
            					}
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( Float,val174,"val") = (k01_2121 * ( (Float)(_hx_array_unsafe_get(a,aOffset4)) ));
HXDLIN( 482)						Float val175 = (val174 + (k00_2021 * ( (Float)(_hx_array_unsafe_get(a,(aOffset4 + (int)1))) )));
HXDLIN( 482)						buffer->__unsafe_set((eOffset22 + (int)-3),val175);
            					}
HXDLIN( 482)					aOffset4 = (aOffset4 + (int)16);
HXDLIN( 482)					HX_VARI_NAME( Float,k00_2023,"k00_20") = ( (Float)(_hx_array_unsafe_get(buffer,(eOffset03 + (int)-4))) );
HXDLIN( 482)					k00_2021 = (k00_2023 - ( (Float)(_hx_array_unsafe_get(buffer,(eOffset22 + (int)-4))) ));
HXDLIN( 482)					HX_VARI_NAME( Float,k01_2123,"k01_21") = ( (Float)(_hx_array_unsafe_get(buffer,(eOffset03 + (int)-5))) );
HXDLIN( 482)					k01_2121 = (k01_2123 - ( (Float)(_hx_array_unsafe_get(buffer,(eOffset22 + (int)-5))) ));
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( int,_g36,"_g") = (eOffset03 + (int)-4);
HXDLIN( 482)						{
HXLINE( 482)							HX_VARI_NAME( Float,val176,"val") = ( (Float)(_hx_array_unsafe_get(buffer,_g36)) );
HXDLIN( 482)							Float val177 = (val176 + ( (Float)(_hx_array_unsafe_get(buffer,(eOffset22 + (int)-4))) ));
HXDLIN( 482)							buffer->__unsafe_set(_g36,val177);
            						}
            					}
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( int,_g37,"_g") = (eOffset03 + (int)-5);
HXDLIN( 482)						{
HXLINE( 482)							HX_VARI_NAME( Float,val178,"val") = ( (Float)(_hx_array_unsafe_get(buffer,_g37)) );
HXDLIN( 482)							Float val179 = (val178 + ( (Float)(_hx_array_unsafe_get(buffer,(eOffset22 + (int)-5))) ));
HXDLIN( 482)							buffer->__unsafe_set(_g37,val179);
            						}
            					}
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( Float,val180,"val") = (k00_2021 * ( (Float)(_hx_array_unsafe_get(a,aOffset4)) ));
HXDLIN( 482)						Float val181 = (val180 - (k01_2121 * ( (Float)(_hx_array_unsafe_get(a,(aOffset4 + (int)1))) )));
HXDLIN( 482)						buffer->__unsafe_set((eOffset22 + (int)-4),val181);
            					}
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( Float,val182,"val") = (k01_2121 * ( (Float)(_hx_array_unsafe_get(a,aOffset4)) ));
HXDLIN( 482)						Float val183 = (val182 + (k00_2021 * ( (Float)(_hx_array_unsafe_get(a,(aOffset4 + (int)1))) )));
HXDLIN( 482)						buffer->__unsafe_set((eOffset22 + (int)-5),val183);
            					}
HXDLIN( 482)					aOffset4 = (aOffset4 + (int)16);
HXDLIN( 482)					HX_VARI_NAME( Float,k00_2024,"k00_20") = ( (Float)(_hx_array_unsafe_get(buffer,(eOffset03 + (int)-6))) );
HXDLIN( 482)					k00_2021 = (k00_2024 - ( (Float)(_hx_array_unsafe_get(buffer,(eOffset22 + (int)-6))) ));
HXDLIN( 482)					HX_VARI_NAME( Float,k01_2124,"k01_21") = ( (Float)(_hx_array_unsafe_get(buffer,(eOffset03 + (int)-7))) );
HXDLIN( 482)					k01_2121 = (k01_2124 - ( (Float)(_hx_array_unsafe_get(buffer,(eOffset22 + (int)-7))) ));
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( int,_g38,"_g") = (eOffset03 + (int)-6);
HXDLIN( 482)						{
HXLINE( 482)							HX_VARI_NAME( Float,val184,"val") = ( (Float)(_hx_array_unsafe_get(buffer,_g38)) );
HXDLIN( 482)							Float val185 = (val184 + ( (Float)(_hx_array_unsafe_get(buffer,(eOffset22 + (int)-6))) ));
HXDLIN( 482)							buffer->__unsafe_set(_g38,val185);
            						}
            					}
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( int,_g39,"_g") = (eOffset03 + (int)-7);
HXDLIN( 482)						{
HXLINE( 482)							HX_VARI_NAME( Float,val186,"val") = ( (Float)(_hx_array_unsafe_get(buffer,_g39)) );
HXDLIN( 482)							Float val187 = (val186 + ( (Float)(_hx_array_unsafe_get(buffer,(eOffset22 + (int)-7))) ));
HXDLIN( 482)							buffer->__unsafe_set(_g39,val187);
            						}
            					}
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( Float,val188,"val") = (k00_2021 * ( (Float)(_hx_array_unsafe_get(a,aOffset4)) ));
HXDLIN( 482)						Float val189 = (val188 - (k01_2121 * ( (Float)(_hx_array_unsafe_get(a,(aOffset4 + (int)1))) )));
HXDLIN( 482)						buffer->__unsafe_set((eOffset22 + (int)-6),val189);
            					}
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( Float,val190,"val") = (k01_2121 * ( (Float)(_hx_array_unsafe_get(a,aOffset4)) ));
HXDLIN( 482)						Float val191 = (val190 + (k00_2021 * ( (Float)(_hx_array_unsafe_get(a,(aOffset4 + (int)1))) )));
HXDLIN( 482)						buffer->__unsafe_set((eOffset22 + (int)-7),val191);
            					}
HXDLIN( 482)					eOffset03 = (eOffset03 - (int)8);
HXDLIN( 482)					eOffset22 = (eOffset22 - (int)8);
HXDLIN( 482)					aOffset4 = (aOffset4 + (int)16);
            				}
            				_hx_goto_38:;
            			}
HXDLIN( 482)			{
HXLINE( 482)				HX_VARI_NAME( int,d03,"d0") = ((n2 - (int)1) - (n8 * (int)3));
HXDLIN( 482)				HX_VARI_NAME( int,aOffset5,"aOffset") = (int)0;
HXDLIN( 482)				HX_VARI_NAME( int,eOffset04,"eOffset0") = d03;
HXDLIN( 482)				HX_VARI_NAME( int,eOffset23,"eOffset2") = (d03 + -(((int)n >> (int)(int)4)));
HXDLIN( 482)				HX_VARI_NAME( int,i5,"i") = (((int)((int)n >> (int)(int)5) >> (int)(int)2) + (int)1);
HXDLIN( 482)				while(true){
HXLINE( 482)					i5 = (i5 - (int)1);
HXDLIN( 482)					if (!((i5 > (int)0))) {
HXLINE( 482)						goto _hx_goto_39;
            					}
HXDLIN( 482)					HX_VARI_NAME( Float,k00_2025,"k00_20") = ( (Float)(_hx_array_unsafe_get(buffer,eOffset04)) );
HXDLIN( 482)					HX_VARI_NAME( Float,k00_2026,"k00_20") = (k00_2025 - ( (Float)(_hx_array_unsafe_get(buffer,eOffset23)) ));
HXDLIN( 482)					HX_VARI_NAME( Float,k01_2125,"k01_21") = ( (Float)(_hx_array_unsafe_get(buffer,(eOffset04 + (int)-1))) );
HXDLIN( 482)					HX_VARI_NAME( Float,k01_2126,"k01_21") = (k01_2125 - ( (Float)(_hx_array_unsafe_get(buffer,(eOffset23 + (int)-1))) ));
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( int,_g40,"_g") = eOffset04;
HXDLIN( 482)						{
HXLINE( 482)							HX_VARI_NAME( Float,val192,"val") = ( (Float)(_hx_array_unsafe_get(buffer,_g40)) );
HXDLIN( 482)							Float val193 = (val192 + ( (Float)(_hx_array_unsafe_get(buffer,eOffset23)) ));
HXDLIN( 482)							buffer->__unsafe_set(_g40,val193);
            						}
            					}
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( int,_g41,"_g") = (eOffset04 + (int)-1);
HXDLIN( 482)						{
HXLINE( 482)							HX_VARI_NAME( Float,val194,"val") = ( (Float)(_hx_array_unsafe_get(buffer,_g41)) );
HXDLIN( 482)							Float val195 = (val194 + ( (Float)(_hx_array_unsafe_get(buffer,(eOffset23 + (int)-1))) ));
HXDLIN( 482)							buffer->__unsafe_set(_g41,val195);
            						}
            					}
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( Float,val196,"val") = (k00_2026 * ( (Float)(_hx_array_unsafe_get(a,aOffset5)) ));
HXDLIN( 482)						Float val197 = (val196 - (k01_2126 * ( (Float)(_hx_array_unsafe_get(a,(aOffset5 + (int)1))) )));
HXDLIN( 482)						buffer->__unsafe_set(eOffset23,val197);
            					}
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( Float,val198,"val") = (k01_2126 * ( (Float)(_hx_array_unsafe_get(a,aOffset5)) ));
HXDLIN( 482)						Float val199 = (val198 + (k00_2026 * ( (Float)(_hx_array_unsafe_get(a,(aOffset5 + (int)1))) )));
HXDLIN( 482)						buffer->__unsafe_set((eOffset23 + (int)-1),val199);
            					}
HXDLIN( 482)					aOffset5 = (aOffset5 + (int)16);
HXDLIN( 482)					HX_VARI_NAME( Float,k00_2027,"k00_20") = ( (Float)(_hx_array_unsafe_get(buffer,(eOffset04 + (int)-2))) );
HXDLIN( 482)					k00_2026 = (k00_2027 - ( (Float)(_hx_array_unsafe_get(buffer,(eOffset23 + (int)-2))) ));
HXDLIN( 482)					HX_VARI_NAME( Float,k01_2127,"k01_21") = ( (Float)(_hx_array_unsafe_get(buffer,(eOffset04 + (int)-3))) );
HXDLIN( 482)					k01_2126 = (k01_2127 - ( (Float)(_hx_array_unsafe_get(buffer,(eOffset23 + (int)-3))) ));
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( int,_g42,"_g") = (eOffset04 + (int)-2);
HXDLIN( 482)						{
HXLINE( 482)							HX_VARI_NAME( Float,val200,"val") = ( (Float)(_hx_array_unsafe_get(buffer,_g42)) );
HXDLIN( 482)							Float val201 = (val200 + ( (Float)(_hx_array_unsafe_get(buffer,(eOffset23 + (int)-2))) ));
HXDLIN( 482)							buffer->__unsafe_set(_g42,val201);
            						}
            					}
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( int,_g43,"_g") = (eOffset04 + (int)-3);
HXDLIN( 482)						{
HXLINE( 482)							HX_VARI_NAME( Float,val202,"val") = ( (Float)(_hx_array_unsafe_get(buffer,_g43)) );
HXDLIN( 482)							Float val203 = (val202 + ( (Float)(_hx_array_unsafe_get(buffer,(eOffset23 + (int)-3))) ));
HXDLIN( 482)							buffer->__unsafe_set(_g43,val203);
            						}
            					}
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( Float,val204,"val") = (k00_2026 * ( (Float)(_hx_array_unsafe_get(a,aOffset5)) ));
HXDLIN( 482)						Float val205 = (val204 - (k01_2126 * ( (Float)(_hx_array_unsafe_get(a,(aOffset5 + (int)1))) )));
HXDLIN( 482)						buffer->__unsafe_set((eOffset23 + (int)-2),val205);
            					}
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( Float,val206,"val") = (k01_2126 * ( (Float)(_hx_array_unsafe_get(a,aOffset5)) ));
HXDLIN( 482)						Float val207 = (val206 + (k00_2026 * ( (Float)(_hx_array_unsafe_get(a,(aOffset5 + (int)1))) )));
HXDLIN( 482)						buffer->__unsafe_set((eOffset23 + (int)-3),val207);
            					}
HXDLIN( 482)					aOffset5 = (aOffset5 + (int)16);
HXDLIN( 482)					HX_VARI_NAME( Float,k00_2028,"k00_20") = ( (Float)(_hx_array_unsafe_get(buffer,(eOffset04 + (int)-4))) );
HXDLIN( 482)					k00_2026 = (k00_2028 - ( (Float)(_hx_array_unsafe_get(buffer,(eOffset23 + (int)-4))) ));
HXDLIN( 482)					HX_VARI_NAME( Float,k01_2128,"k01_21") = ( (Float)(_hx_array_unsafe_get(buffer,(eOffset04 + (int)-5))) );
HXDLIN( 482)					k01_2126 = (k01_2128 - ( (Float)(_hx_array_unsafe_get(buffer,(eOffset23 + (int)-5))) ));
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( int,_g44,"_g") = (eOffset04 + (int)-4);
HXDLIN( 482)						{
HXLINE( 482)							HX_VARI_NAME( Float,val208,"val") = ( (Float)(_hx_array_unsafe_get(buffer,_g44)) );
HXDLIN( 482)							Float val209 = (val208 + ( (Float)(_hx_array_unsafe_get(buffer,(eOffset23 + (int)-4))) ));
HXDLIN( 482)							buffer->__unsafe_set(_g44,val209);
            						}
            					}
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( int,_g45,"_g") = (eOffset04 + (int)-5);
HXDLIN( 482)						{
HXLINE( 482)							HX_VARI_NAME( Float,val210,"val") = ( (Float)(_hx_array_unsafe_get(buffer,_g45)) );
HXDLIN( 482)							Float val211 = (val210 + ( (Float)(_hx_array_unsafe_get(buffer,(eOffset23 + (int)-5))) ));
HXDLIN( 482)							buffer->__unsafe_set(_g45,val211);
            						}
            					}
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( Float,val212,"val") = (k00_2026 * ( (Float)(_hx_array_unsafe_get(a,aOffset5)) ));
HXDLIN( 482)						Float val213 = (val212 - (k01_2126 * ( (Float)(_hx_array_unsafe_get(a,(aOffset5 + (int)1))) )));
HXDLIN( 482)						buffer->__unsafe_set((eOffset23 + (int)-4),val213);
            					}
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( Float,val214,"val") = (k01_2126 * ( (Float)(_hx_array_unsafe_get(a,aOffset5)) ));
HXDLIN( 482)						Float val215 = (val214 + (k00_2026 * ( (Float)(_hx_array_unsafe_get(a,(aOffset5 + (int)1))) )));
HXDLIN( 482)						buffer->__unsafe_set((eOffset23 + (int)-5),val215);
            					}
HXDLIN( 482)					aOffset5 = (aOffset5 + (int)16);
HXDLIN( 482)					HX_VARI_NAME( Float,k00_2029,"k00_20") = ( (Float)(_hx_array_unsafe_get(buffer,(eOffset04 + (int)-6))) );
HXDLIN( 482)					k00_2026 = (k00_2029 - ( (Float)(_hx_array_unsafe_get(buffer,(eOffset23 + (int)-6))) ));
HXDLIN( 482)					HX_VARI_NAME( Float,k01_2129,"k01_21") = ( (Float)(_hx_array_unsafe_get(buffer,(eOffset04 + (int)-7))) );
HXDLIN( 482)					k01_2126 = (k01_2129 - ( (Float)(_hx_array_unsafe_get(buffer,(eOffset23 + (int)-7))) ));
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( int,_g46,"_g") = (eOffset04 + (int)-6);
HXDLIN( 482)						{
HXLINE( 482)							HX_VARI_NAME( Float,val216,"val") = ( (Float)(_hx_array_unsafe_get(buffer,_g46)) );
HXDLIN( 482)							Float val217 = (val216 + ( (Float)(_hx_array_unsafe_get(buffer,(eOffset23 + (int)-6))) ));
HXDLIN( 482)							buffer->__unsafe_set(_g46,val217);
            						}
            					}
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( int,_g47,"_g") = (eOffset04 + (int)-7);
HXDLIN( 482)						{
HXLINE( 482)							HX_VARI_NAME( Float,val218,"val") = ( (Float)(_hx_array_unsafe_get(buffer,_g47)) );
HXDLIN( 482)							Float val219 = (val218 + ( (Float)(_hx_array_unsafe_get(buffer,(eOffset23 + (int)-7))) ));
HXDLIN( 482)							buffer->__unsafe_set(_g47,val219);
            						}
            					}
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( Float,val220,"val") = (k00_2026 * ( (Float)(_hx_array_unsafe_get(a,aOffset5)) ));
HXDLIN( 482)						Float val221 = (val220 - (k01_2126 * ( (Float)(_hx_array_unsafe_get(a,(aOffset5 + (int)1))) )));
HXDLIN( 482)						buffer->__unsafe_set((eOffset23 + (int)-6),val221);
            					}
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( Float,val222,"val") = (k01_2126 * ( (Float)(_hx_array_unsafe_get(a,aOffset5)) ));
HXDLIN( 482)						Float val223 = (val222 + (k00_2026 * ( (Float)(_hx_array_unsafe_get(a,(aOffset5 + (int)1))) )));
HXDLIN( 482)						buffer->__unsafe_set((eOffset23 + (int)-7),val223);
            					}
HXDLIN( 482)					eOffset04 = (eOffset04 - (int)8);
HXDLIN( 482)					eOffset23 = (eOffset23 - (int)8);
HXDLIN( 482)					aOffset5 = (aOffset5 + (int)16);
            				}
            				_hx_goto_39:;
            			}
HXDLIN( 482)			{
HXLINE( 482)				HX_VARI_NAME( int,_g110,"_g1") = (int)2;
HXDLIN( 482)				HX_VARI_NAME( int,_g48,"_g") = ((int)(ld1 - (int)3) >> (int)(int)1);
HXDLIN( 482)				while((_g110 < _g48)){
HXLINE( 482)					_g110 = (_g110 + (int)1);
HXDLIN( 482)					HX_VARI( int,l) = (_g110 - (int)1);
HXDLIN( 482)					HX_VARI( int,k0) = ((int)n >> (int)(l + (int)2));
HXDLIN( 482)					HX_VARI( int,k0_2) = ((int)k0 >> (int)(int)1);
HXDLIN( 482)					HX_VARI( int,lim) = ((int)(int)1 << (int)(l + (int)1));
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( int,_g310,"_g3") = (int)0;
HXDLIN( 482)						while((_g310 < lim)){
HXLINE( 482)							_g310 = (_g310 + (int)1);
HXDLIN( 482)							{
HXLINE( 482)								HX_VARI_NAME( int,d04,"d0") = ((n2 - (int)1) - (k0 * (_g310 - (int)1)));
HXDLIN( 482)								HX_VARI( int,k1) = ((int)(int)1 << (int)(l + (int)3));
HXDLIN( 482)								HX_VARI_NAME( int,aOffset6,"aOffset") = (int)0;
HXDLIN( 482)								HX_VARI_NAME( int,eOffset05,"eOffset0") = d04;
HXDLIN( 482)								HX_VARI_NAME( int,eOffset24,"eOffset2") = (d04 + -(k0_2));
HXDLIN( 482)								HX_VARI_NAME( int,i6,"i") = (((int)((int)n >> (int)(l + (int)4)) >> (int)(int)2) + (int)1);
HXDLIN( 482)								while(true){
HXLINE( 482)									i6 = (i6 - (int)1);
HXDLIN( 482)									if (!((i6 > (int)0))) {
HXLINE( 482)										goto _hx_goto_42;
            									}
HXDLIN( 482)									HX_VARI_NAME( Float,k00_2030,"k00_20") = ( (Float)(_hx_array_unsafe_get(buffer,eOffset05)) );
HXDLIN( 482)									HX_VARI_NAME( Float,k00_2031,"k00_20") = (k00_2030 - ( (Float)(_hx_array_unsafe_get(buffer,eOffset24)) ));
HXDLIN( 482)									HX_VARI_NAME( Float,k01_2130,"k01_21") = ( (Float)(_hx_array_unsafe_get(buffer,(eOffset05 + (int)-1))) );
HXDLIN( 482)									HX_VARI_NAME( Float,k01_2131,"k01_21") = (k01_2130 - ( (Float)(_hx_array_unsafe_get(buffer,(eOffset24 + (int)-1))) ));
HXDLIN( 482)									{
HXLINE( 482)										HX_VARI_NAME( int,_g49,"_g") = eOffset05;
HXDLIN( 482)										{
HXLINE( 482)											HX_VARI_NAME( Float,val224,"val") = ( (Float)(_hx_array_unsafe_get(buffer,_g49)) );
HXDLIN( 482)											Float val225 = (val224 + ( (Float)(_hx_array_unsafe_get(buffer,eOffset24)) ));
HXDLIN( 482)											buffer->__unsafe_set(_g49,val225);
            										}
            									}
HXDLIN( 482)									{
HXLINE( 482)										HX_VARI_NAME( int,_g50,"_g") = (eOffset05 + (int)-1);
HXDLIN( 482)										{
HXLINE( 482)											HX_VARI_NAME( Float,val226,"val") = ( (Float)(_hx_array_unsafe_get(buffer,_g50)) );
HXDLIN( 482)											Float val227 = (val226 + ( (Float)(_hx_array_unsafe_get(buffer,(eOffset24 + (int)-1))) ));
HXDLIN( 482)											buffer->__unsafe_set(_g50,val227);
            										}
            									}
HXDLIN( 482)									{
HXLINE( 482)										HX_VARI_NAME( Float,val228,"val") = (k00_2031 * ( (Float)(_hx_array_unsafe_get(a,aOffset6)) ));
HXDLIN( 482)										Float val229 = (val228 - (k01_2131 * ( (Float)(_hx_array_unsafe_get(a,(aOffset6 + (int)1))) )));
HXDLIN( 482)										buffer->__unsafe_set(eOffset24,val229);
            									}
HXDLIN( 482)									{
HXLINE( 482)										HX_VARI_NAME( Float,val230,"val") = (k01_2131 * ( (Float)(_hx_array_unsafe_get(a,aOffset6)) ));
HXDLIN( 482)										Float val231 = (val230 + (k00_2031 * ( (Float)(_hx_array_unsafe_get(a,(aOffset6 + (int)1))) )));
HXDLIN( 482)										buffer->__unsafe_set((eOffset24 + (int)-1),val231);
            									}
HXDLIN( 482)									aOffset6 = (aOffset6 + k1);
HXDLIN( 482)									HX_VARI_NAME( Float,k00_2032,"k00_20") = ( (Float)(_hx_array_unsafe_get(buffer,(eOffset05 + (int)-2))) );
HXDLIN( 482)									k00_2031 = (k00_2032 - ( (Float)(_hx_array_unsafe_get(buffer,(eOffset24 + (int)-2))) ));
HXDLIN( 482)									HX_VARI_NAME( Float,k01_2132,"k01_21") = ( (Float)(_hx_array_unsafe_get(buffer,(eOffset05 + (int)-3))) );
HXDLIN( 482)									k01_2131 = (k01_2132 - ( (Float)(_hx_array_unsafe_get(buffer,(eOffset24 + (int)-3))) ));
HXDLIN( 482)									{
HXLINE( 482)										HX_VARI_NAME( int,_g51,"_g") = (eOffset05 + (int)-2);
HXDLIN( 482)										{
HXLINE( 482)											HX_VARI_NAME( Float,val232,"val") = ( (Float)(_hx_array_unsafe_get(buffer,_g51)) );
HXDLIN( 482)											Float val233 = (val232 + ( (Float)(_hx_array_unsafe_get(buffer,(eOffset24 + (int)-2))) ));
HXDLIN( 482)											buffer->__unsafe_set(_g51,val233);
            										}
            									}
HXDLIN( 482)									{
HXLINE( 482)										HX_VARI_NAME( int,_g52,"_g") = (eOffset05 + (int)-3);
HXDLIN( 482)										{
HXLINE( 482)											HX_VARI_NAME( Float,val234,"val") = ( (Float)(_hx_array_unsafe_get(buffer,_g52)) );
HXDLIN( 482)											Float val235 = (val234 + ( (Float)(_hx_array_unsafe_get(buffer,(eOffset24 + (int)-3))) ));
HXDLIN( 482)											buffer->__unsafe_set(_g52,val235);
            										}
            									}
HXDLIN( 482)									{
HXLINE( 482)										HX_VARI_NAME( Float,val236,"val") = (k00_2031 * ( (Float)(_hx_array_unsafe_get(a,aOffset6)) ));
HXDLIN( 482)										Float val237 = (val236 - (k01_2131 * ( (Float)(_hx_array_unsafe_get(a,(aOffset6 + (int)1))) )));
HXDLIN( 482)										buffer->__unsafe_set((eOffset24 + (int)-2),val237);
            									}
HXDLIN( 482)									{
HXLINE( 482)										HX_VARI_NAME( Float,val238,"val") = (k01_2131 * ( (Float)(_hx_array_unsafe_get(a,aOffset6)) ));
HXDLIN( 482)										Float val239 = (val238 + (k00_2031 * ( (Float)(_hx_array_unsafe_get(a,(aOffset6 + (int)1))) )));
HXDLIN( 482)										buffer->__unsafe_set((eOffset24 + (int)-3),val239);
            									}
HXDLIN( 482)									aOffset6 = (aOffset6 + k1);
HXDLIN( 482)									HX_VARI_NAME( Float,k00_2033,"k00_20") = ( (Float)(_hx_array_unsafe_get(buffer,(eOffset05 + (int)-4))) );
HXDLIN( 482)									k00_2031 = (k00_2033 - ( (Float)(_hx_array_unsafe_get(buffer,(eOffset24 + (int)-4))) ));
HXDLIN( 482)									HX_VARI_NAME( Float,k01_2133,"k01_21") = ( (Float)(_hx_array_unsafe_get(buffer,(eOffset05 + (int)-5))) );
HXDLIN( 482)									k01_2131 = (k01_2133 - ( (Float)(_hx_array_unsafe_get(buffer,(eOffset24 + (int)-5))) ));
HXDLIN( 482)									{
HXLINE( 482)										HX_VARI_NAME( int,_g53,"_g") = (eOffset05 + (int)-4);
HXDLIN( 482)										{
HXLINE( 482)											HX_VARI_NAME( Float,val240,"val") = ( (Float)(_hx_array_unsafe_get(buffer,_g53)) );
HXDLIN( 482)											Float val241 = (val240 + ( (Float)(_hx_array_unsafe_get(buffer,(eOffset24 + (int)-4))) ));
HXDLIN( 482)											buffer->__unsafe_set(_g53,val241);
            										}
            									}
HXDLIN( 482)									{
HXLINE( 482)										HX_VARI_NAME( int,_g54,"_g") = (eOffset05 + (int)-5);
HXDLIN( 482)										{
HXLINE( 482)											HX_VARI_NAME( Float,val242,"val") = ( (Float)(_hx_array_unsafe_get(buffer,_g54)) );
HXDLIN( 482)											Float val243 = (val242 + ( (Float)(_hx_array_unsafe_get(buffer,(eOffset24 + (int)-5))) ));
HXDLIN( 482)											buffer->__unsafe_set(_g54,val243);
            										}
            									}
HXDLIN( 482)									{
HXLINE( 482)										HX_VARI_NAME( Float,val244,"val") = (k00_2031 * ( (Float)(_hx_array_unsafe_get(a,aOffset6)) ));
HXDLIN( 482)										Float val245 = (val244 - (k01_2131 * ( (Float)(_hx_array_unsafe_get(a,(aOffset6 + (int)1))) )));
HXDLIN( 482)										buffer->__unsafe_set((eOffset24 + (int)-4),val245);
            									}
HXDLIN( 482)									{
HXLINE( 482)										HX_VARI_NAME( Float,val246,"val") = (k01_2131 * ( (Float)(_hx_array_unsafe_get(a,aOffset6)) ));
HXDLIN( 482)										Float val247 = (val246 + (k00_2031 * ( (Float)(_hx_array_unsafe_get(a,(aOffset6 + (int)1))) )));
HXDLIN( 482)										buffer->__unsafe_set((eOffset24 + (int)-5),val247);
            									}
HXDLIN( 482)									aOffset6 = (aOffset6 + k1);
HXDLIN( 482)									HX_VARI_NAME( Float,k00_2034,"k00_20") = ( (Float)(_hx_array_unsafe_get(buffer,(eOffset05 + (int)-6))) );
HXDLIN( 482)									k00_2031 = (k00_2034 - ( (Float)(_hx_array_unsafe_get(buffer,(eOffset24 + (int)-6))) ));
HXDLIN( 482)									HX_VARI_NAME( Float,k01_2134,"k01_21") = ( (Float)(_hx_array_unsafe_get(buffer,(eOffset05 + (int)-7))) );
HXDLIN( 482)									k01_2131 = (k01_2134 - ( (Float)(_hx_array_unsafe_get(buffer,(eOffset24 + (int)-7))) ));
HXDLIN( 482)									{
HXLINE( 482)										HX_VARI_NAME( int,_g55,"_g") = (eOffset05 + (int)-6);
HXDLIN( 482)										{
HXLINE( 482)											HX_VARI_NAME( Float,val248,"val") = ( (Float)(_hx_array_unsafe_get(buffer,_g55)) );
HXDLIN( 482)											Float val249 = (val248 + ( (Float)(_hx_array_unsafe_get(buffer,(eOffset24 + (int)-6))) ));
HXDLIN( 482)											buffer->__unsafe_set(_g55,val249);
            										}
            									}
HXDLIN( 482)									{
HXLINE( 482)										HX_VARI_NAME( int,_g56,"_g") = (eOffset05 + (int)-7);
HXDLIN( 482)										{
HXLINE( 482)											HX_VARI_NAME( Float,val250,"val") = ( (Float)(_hx_array_unsafe_get(buffer,_g56)) );
HXDLIN( 482)											Float val251 = (val250 + ( (Float)(_hx_array_unsafe_get(buffer,(eOffset24 + (int)-7))) ));
HXDLIN( 482)											buffer->__unsafe_set(_g56,val251);
            										}
            									}
HXDLIN( 482)									{
HXLINE( 482)										HX_VARI_NAME( Float,val252,"val") = (k00_2031 * ( (Float)(_hx_array_unsafe_get(a,aOffset6)) ));
HXDLIN( 482)										Float val253 = (val252 - (k01_2131 * ( (Float)(_hx_array_unsafe_get(a,(aOffset6 + (int)1))) )));
HXDLIN( 482)										buffer->__unsafe_set((eOffset24 + (int)-6),val253);
            									}
HXDLIN( 482)									{
HXLINE( 482)										HX_VARI_NAME( Float,val254,"val") = (k01_2131 * ( (Float)(_hx_array_unsafe_get(a,aOffset6)) ));
HXDLIN( 482)										Float val255 = (val254 + (k00_2031 * ( (Float)(_hx_array_unsafe_get(a,(aOffset6 + (int)1))) )));
HXDLIN( 482)										buffer->__unsafe_set((eOffset24 + (int)-7),val255);
            									}
HXDLIN( 482)									eOffset05 = (eOffset05 - (int)8);
HXDLIN( 482)									eOffset24 = (eOffset24 - (int)8);
HXDLIN( 482)									aOffset6 = (aOffset6 + k1);
            								}
            								_hx_goto_42:;
            							}
            						}
            					}
            				}
            			}
HXDLIN( 482)			{
HXLINE( 482)				HX_VARI_NAME( int,_g111,"_g1") = ((int)(ld1 - (int)3) >> (int)(int)1);
HXDLIN( 482)				HX_VARI_NAME( int,_g57,"_g") = (ld1 - (int)6);
HXDLIN( 482)				while((_g111 < _g57)){
HXLINE( 482)					_g111 = (_g111 + (int)1);
HXDLIN( 482)					HX_VARI_NAME( int,l1,"l") = (_g111 - (int)1);
HXDLIN( 482)					HX_VARI_NAME( int,k01,"k0") = ((int)n >> (int)(l1 + (int)2));
HXDLIN( 482)					HX_VARI_NAME( int,k11,"k1") = ((int)(int)1 << (int)(l1 + (int)3));
HXDLIN( 482)					HX_VARI_NAME( int,k0_21,"k0_2") = ((int)k01 >> (int)(int)1);
HXDLIN( 482)					HX_VARI_NAME( int,lim1,"lim") = ((int)(int)1 << (int)(l1 + (int)1));
HXDLIN( 482)					HX_VARI_NAME( int,aOffset7,"aOffset") = (int)0;
HXDLIN( 482)					HX_VARI_NAME( int,i_off2,"i_off") = (n2 - (int)1);
HXDLIN( 482)					HX_VARI( int,r) = (((int)n >> (int)(l1 + (int)6)) + (int)1);
HXDLIN( 482)					while(true){
HXLINE( 482)						r = (r - (int)1);
HXDLIN( 482)						if (!((r > (int)0))) {
HXLINE( 482)							goto _hx_goto_44;
            						}
HXDLIN( 482)						{
HXLINE( 482)							HX_VARI( Float,A0) = ( (Float)(_hx_array_unsafe_get(a,aOffset7)) );
HXDLIN( 482)							HX_VARI( Float,A1) = ( (Float)(_hx_array_unsafe_get(a,(aOffset7 + (int)1))) );
HXDLIN( 482)							HX_VARI( Float,A2) = ( (Float)(_hx_array_unsafe_get(a,(aOffset7 + k11))) );
HXDLIN( 482)							HX_VARI( Float,A3) = ( (Float)(_hx_array_unsafe_get(a,((aOffset7 + k11) + (int)1))) );
HXDLIN( 482)							HX_VARI( Float,A4) = ( (Float)(_hx_array_unsafe_get(a,(aOffset7 + (k11 * (int)2)))) );
HXDLIN( 482)							HX_VARI( Float,A5) = ( (Float)(_hx_array_unsafe_get(a,((aOffset7 + (k11 * (int)2)) + (int)1))) );
HXDLIN( 482)							HX_VARI( Float,A6) = ( (Float)(_hx_array_unsafe_get(a,(aOffset7 + (k11 * (int)3)))) );
HXDLIN( 482)							HX_VARI( Float,A7) = ( (Float)(_hx_array_unsafe_get(a,((aOffset7 + (k11 * (int)3)) + (int)1))) );
HXDLIN( 482)							HX_VARI_NAME( int,eeOffset02,"eeOffset0") = i_off2;
HXDLIN( 482)							HX_VARI_NAME( int,eeOffset22,"eeOffset2") = (i_off2 + -(k0_21));
HXDLIN( 482)							HX_VARI_NAME( int,i7,"i") = (lim1 + (int)1);
HXDLIN( 482)							while(true){
HXLINE( 482)								i7 = (i7 - (int)1);
HXDLIN( 482)								if (!((i7 > (int)0))) {
HXLINE( 482)									goto _hx_goto_45;
            								}
HXDLIN( 482)								HX_VARI( Float,k00) = ( (Float)(_hx_array_unsafe_get(buffer,eeOffset02)) );
HXDLIN( 482)								HX_VARI_NAME( Float,k001,"k00") = (k00 - ( (Float)(_hx_array_unsafe_get(buffer,eeOffset22)) ));
HXDLIN( 482)								HX_VARI_NAME( Float,k111,"k11") = ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset02 + (int)-1))) );
HXDLIN( 482)								HX_VARI_NAME( Float,k112,"k11") = (k111 - ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset22 + (int)-1))) ));
HXDLIN( 482)								{
HXLINE( 482)									HX_VARI_NAME( Float,val256,"val") = ( (Float)(_hx_array_unsafe_get(buffer,eeOffset02)) );
HXDLIN( 482)									Float val257 = (val256 + ( (Float)(_hx_array_unsafe_get(buffer,eeOffset22)) ));
HXDLIN( 482)									buffer->__unsafe_set(eeOffset02,val257);
            								}
HXDLIN( 482)								{
HXLINE( 482)									HX_VARI_NAME( Float,val258,"val") = ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset02 + (int)-1))) );
HXDLIN( 482)									Float val259 = (val258 + ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset22 + (int)-1))) ));
HXDLIN( 482)									buffer->__unsafe_set((eeOffset02 + (int)-1),val259);
            								}
HXDLIN( 482)								buffer->__unsafe_set(eeOffset22,((k001 * A0) - (k112 * A1)));
HXDLIN( 482)								buffer->__unsafe_set((eeOffset22 + (int)-1),((k112 * A0) + (k001 * A1)));
HXDLIN( 482)								HX_VARI_NAME( Float,k002,"k00") = ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset02 + (int)-2))) );
HXDLIN( 482)								k001 = (k002 - ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset22 + (int)-2))) ));
HXDLIN( 482)								HX_VARI_NAME( Float,k113,"k11") = ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset02 + (int)-3))) );
HXDLIN( 482)								k112 = (k113 - ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset22 + (int)-3))) ));
HXDLIN( 482)								{
HXLINE( 482)									HX_VARI_NAME( Float,val260,"val") = ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset02 + (int)-2))) );
HXDLIN( 482)									Float val261 = (val260 + ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset22 + (int)-2))) ));
HXDLIN( 482)									buffer->__unsafe_set((eeOffset02 + (int)-2),val261);
            								}
HXDLIN( 482)								{
HXLINE( 482)									HX_VARI_NAME( Float,val262,"val") = ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset02 + (int)-3))) );
HXDLIN( 482)									Float val263 = (val262 + ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset22 + (int)-3))) ));
HXDLIN( 482)									buffer->__unsafe_set((eeOffset02 + (int)-3),val263);
            								}
HXDLIN( 482)								buffer->__unsafe_set((eeOffset22 + (int)-2),((k001 * A2) - (k112 * A3)));
HXDLIN( 482)								buffer->__unsafe_set((eeOffset22 + (int)-3),((k112 * A2) + (k001 * A3)));
HXDLIN( 482)								HX_VARI_NAME( Float,k003,"k00") = ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset02 + (int)-4))) );
HXDLIN( 482)								k001 = (k003 - ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset22 + (int)-4))) ));
HXDLIN( 482)								HX_VARI_NAME( Float,k114,"k11") = ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset02 + (int)-5))) );
HXDLIN( 482)								k112 = (k114 - ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset22 + (int)-5))) ));
HXDLIN( 482)								{
HXLINE( 482)									HX_VARI_NAME( Float,val264,"val") = ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset02 + (int)-4))) );
HXDLIN( 482)									Float val265 = (val264 + ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset22 + (int)-4))) ));
HXDLIN( 482)									buffer->__unsafe_set((eeOffset02 + (int)-4),val265);
            								}
HXDLIN( 482)								{
HXLINE( 482)									HX_VARI_NAME( Float,val266,"val") = ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset02 + (int)-5))) );
HXDLIN( 482)									Float val267 = (val266 + ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset22 + (int)-5))) ));
HXDLIN( 482)									buffer->__unsafe_set((eeOffset02 + (int)-5),val267);
            								}
HXDLIN( 482)								buffer->__unsafe_set((eeOffset22 + (int)-4),((k001 * A4) - (k112 * A5)));
HXDLIN( 482)								buffer->__unsafe_set((eeOffset22 + (int)-5),((k112 * A4) + (k001 * A5)));
HXDLIN( 482)								HX_VARI_NAME( Float,k004,"k00") = ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset02 + (int)-6))) );
HXDLIN( 482)								k001 = (k004 - ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset22 + (int)-6))) ));
HXDLIN( 482)								HX_VARI_NAME( Float,k115,"k11") = ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset02 + (int)-7))) );
HXDLIN( 482)								k112 = (k115 - ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset22 + (int)-7))) ));
HXDLIN( 482)								{
HXLINE( 482)									HX_VARI_NAME( Float,val268,"val") = ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset02 + (int)-6))) );
HXDLIN( 482)									Float val269 = (val268 + ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset22 + (int)-6))) ));
HXDLIN( 482)									buffer->__unsafe_set((eeOffset02 + (int)-6),val269);
            								}
HXDLIN( 482)								{
HXLINE( 482)									HX_VARI_NAME( Float,val270,"val") = ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset02 + (int)-7))) );
HXDLIN( 482)									Float val271 = (val270 + ( (Float)(_hx_array_unsafe_get(buffer,(eeOffset22 + (int)-7))) ));
HXDLIN( 482)									buffer->__unsafe_set((eeOffset02 + (int)-7),val271);
            								}
HXDLIN( 482)								buffer->__unsafe_set((eeOffset22 + (int)-6),((k001 * A6) - (k112 * A7)));
HXDLIN( 482)								buffer->__unsafe_set((eeOffset22 + (int)-7),((k112 * A6) + (k001 * A7)));
HXDLIN( 482)								eeOffset02 = (eeOffset02 - k01);
HXDLIN( 482)								eeOffset22 = (eeOffset22 - k01);
            							}
            							_hx_goto_45:;
            						}
HXDLIN( 482)						aOffset7 = (aOffset7 + (k11 * (int)4));
HXDLIN( 482)						i_off2 = (i_off2 - (int)8);
            					}
            					_hx_goto_44:;
            				}
            			}
HXDLIN( 482)			{
HXLINE( 482)				HX_VARI_NAME( int,i_off3,"i_off") = (n2 - (int)1);
HXDLIN( 482)				HX_VARI_NAME( Float,A21,"A2") = ( (Float)(_hx_array_unsafe_get(a,((int)n >> (int)(int)3))) );
HXDLIN( 482)				HX_VARI( int,zOffset) = i_off3;
HXDLIN( 482)				HX_VARI( int,baseOffset) = (i_off3 - ((int)16 * ((int)n >> (int)(int)5)));
HXDLIN( 482)				while((zOffset > baseOffset)){
HXLINE( 482)					HX_VARI( Float,t0) = ( (Float)(_hx_array_unsafe_get(buffer,zOffset)) );
HXDLIN( 482)					HX_VARI( Float,t1) = ( (Float)(_hx_array_unsafe_get(buffer,(zOffset + (int)-8))) );
HXDLIN( 482)					buffer->__unsafe_set((zOffset + (int)-8),(t0 - t1));
HXDLIN( 482)					buffer->__unsafe_set(zOffset,(t0 + t1));
HXDLIN( 482)					t0 = ( (Float)(_hx_array_unsafe_get(buffer,(zOffset + (int)-1))) );
HXDLIN( 482)					t1 = ( (Float)(_hx_array_unsafe_get(buffer,(zOffset + (int)-9))) );
HXDLIN( 482)					buffer->__unsafe_set((zOffset + (int)-9),(t0 - t1));
HXDLIN( 482)					buffer->__unsafe_set((zOffset + (int)-1),(t0 + t1));
HXDLIN( 482)					t0 = ( (Float)(_hx_array_unsafe_get(buffer,(zOffset + (int)-2))) );
HXDLIN( 482)					t1 = ( (Float)(_hx_array_unsafe_get(buffer,(zOffset + (int)-10))) );
HXDLIN( 482)					HX_VARI_NAME( Float,k005,"k00") = (t0 - t1);
HXDLIN( 482)					buffer->__unsafe_set((zOffset + (int)-2),(t0 + t1));
HXDLIN( 482)					t0 = ( (Float)(_hx_array_unsafe_get(buffer,(zOffset + (int)-3))) );
HXDLIN( 482)					t1 = ( (Float)(_hx_array_unsafe_get(buffer,(zOffset + (int)-11))) );
HXDLIN( 482)					HX_VARI_NAME( Float,k116,"k11") = (t0 - t1);
HXDLIN( 482)					buffer->__unsafe_set((zOffset + (int)-3),(t0 + t1));
HXDLIN( 482)					buffer->__unsafe_set((zOffset + (int)-10),((k005 + k116) * A21));
HXDLIN( 482)					buffer->__unsafe_set((zOffset + (int)-11),((k116 - k005) * A21));
HXDLIN( 482)					t0 = ( (Float)(_hx_array_unsafe_get(buffer,(zOffset + (int)-4))) );
HXDLIN( 482)					t1 = ( (Float)(_hx_array_unsafe_get(buffer,(zOffset + (int)-12))) );
HXDLIN( 482)					k005 = (t1 - t0);
HXDLIN( 482)					buffer->__unsafe_set((zOffset + (int)-4),(t0 + t1));
HXDLIN( 482)					t0 = ( (Float)(_hx_array_unsafe_get(buffer,(zOffset + (int)-5))) );
HXDLIN( 482)					t1 = ( (Float)(_hx_array_unsafe_get(buffer,(zOffset + (int)-13))) );
HXDLIN( 482)					k116 = (t0 - t1);
HXDLIN( 482)					buffer->__unsafe_set((zOffset + (int)-5),(t0 + t1));
HXDLIN( 482)					buffer->__unsafe_set((zOffset + (int)-12),k116);
HXDLIN( 482)					buffer->__unsafe_set((zOffset + (int)-13),k005);
HXDLIN( 482)					t0 = ( (Float)(_hx_array_unsafe_get(buffer,(zOffset + (int)-6))) );
HXDLIN( 482)					t1 = ( (Float)(_hx_array_unsafe_get(buffer,(zOffset + (int)-14))) );
HXDLIN( 482)					k005 = (t1 - t0);
HXDLIN( 482)					buffer->__unsafe_set((zOffset + (int)-6),(t0 + t1));
HXDLIN( 482)					t0 = ( (Float)(_hx_array_unsafe_get(buffer,(zOffset + (int)-7))) );
HXDLIN( 482)					t1 = ( (Float)(_hx_array_unsafe_get(buffer,(zOffset + (int)-15))) );
HXDLIN( 482)					k116 = (t0 - t1);
HXDLIN( 482)					buffer->__unsafe_set((zOffset + (int)-7),(t0 + t1));
HXDLIN( 482)					buffer->__unsafe_set((zOffset + (int)-14),((k005 + k116) * A21));
HXDLIN( 482)					buffer->__unsafe_set((zOffset + (int)-15),((k005 - k116) * A21));
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( Float,t01,"t0") = ( (Float)(_hx_array_unsafe_get(buffer,zOffset)) );
HXDLIN( 482)						HX_VARI_NAME( Float,t11,"t1") = ( (Float)(_hx_array_unsafe_get(buffer,(zOffset + (int)-4))) );
HXDLIN( 482)						HX_VARI_NAME( Float,k006,"k00") = (t01 - t11);
HXDLIN( 482)						HX_VARI( Float,y0) = (t01 + t11);
HXDLIN( 482)						t01 = ( (Float)(_hx_array_unsafe_get(buffer,(zOffset + (int)-2))) );
HXDLIN( 482)						t11 = ( (Float)(_hx_array_unsafe_get(buffer,(zOffset + (int)-6))) );
HXDLIN( 482)						HX_VARI( Float,y2) = (t01 + t11);
HXDLIN( 482)						HX_VARI( Float,k22) = (t01 - t11);
HXDLIN( 482)						buffer->__unsafe_set(zOffset,(y0 + y2));
HXDLIN( 482)						buffer->__unsafe_set((zOffset + (int)-2),(y0 - y2));
HXDLIN( 482)						HX_VARI( Float,k33) = ( (Float)(_hx_array_unsafe_get(buffer,(zOffset + (int)-3))) );
HXDLIN( 482)						HX_VARI_NAME( Float,k331,"k33") = (k33 - ( (Float)(_hx_array_unsafe_get(buffer,(zOffset + (int)-7))) ));
HXDLIN( 482)						buffer->__unsafe_set((zOffset + (int)-4),(k006 + k331));
HXDLIN( 482)						buffer->__unsafe_set((zOffset + (int)-6),(k006 - k331));
HXDLIN( 482)						t01 = ( (Float)(_hx_array_unsafe_get(buffer,(zOffset + (int)-1))) );
HXDLIN( 482)						t11 = ( (Float)(_hx_array_unsafe_get(buffer,(zOffset + (int)-5))) );
HXDLIN( 482)						HX_VARI_NAME( Float,k117,"k11") = (t01 - t11);
HXDLIN( 482)						HX_VARI( Float,y1) = (t01 + t11);
HXDLIN( 482)						HX_VARI( Float,y3) = ( (Float)(_hx_array_unsafe_get(buffer,(zOffset + (int)-3))) );
HXDLIN( 482)						HX_VARI_NAME( Float,y31,"y3") = (y3 + ( (Float)(_hx_array_unsafe_get(buffer,(zOffset + (int)-7))) ));
HXDLIN( 482)						buffer->__unsafe_set((zOffset + (int)-1),(y1 + y31));
HXDLIN( 482)						buffer->__unsafe_set((zOffset + (int)-3),(y1 - y31));
HXDLIN( 482)						buffer->__unsafe_set((zOffset + (int)-5),(k117 - k22));
HXDLIN( 482)						buffer->__unsafe_set((zOffset + (int)-7),(k117 + k22));
            					}
HXDLIN( 482)					{
HXLINE( 482)						HX_VARI_NAME( int,zOffset1,"zOffset") = (zOffset - (int)8);
HXDLIN( 482)						HX_VARI_NAME( Float,t02,"t0") = ( (Float)(_hx_array_unsafe_get(buffer,zOffset1)) );
HXDLIN( 482)						HX_VARI_NAME( Float,t12,"t1") = ( (Float)(_hx_array_unsafe_get(buffer,(zOffset1 + (int)-4))) );
HXDLIN( 482)						HX_VARI_NAME( Float,k007,"k00") = (t02 - t12);
HXDLIN( 482)						HX_VARI_NAME( Float,y01,"y0") = (t02 + t12);
HXDLIN( 482)						t02 = ( (Float)(_hx_array_unsafe_get(buffer,(zOffset1 + (int)-2))) );
HXDLIN( 482)						t12 = ( (Float)(_hx_array_unsafe_get(buffer,(zOffset1 + (int)-6))) );
HXDLIN( 482)						HX_VARI_NAME( Float,y21,"y2") = (t02 + t12);
HXDLIN( 482)						HX_VARI_NAME( Float,k221,"k22") = (t02 - t12);
HXDLIN( 482)						buffer->__unsafe_set(zOffset1,(y01 + y21));
HXDLIN( 482)						buffer->__unsafe_set((zOffset1 + (int)-2),(y01 - y21));
HXDLIN( 482)						HX_VARI_NAME( Float,k332,"k33") = ( (Float)(_hx_array_unsafe_get(buffer,(zOffset1 + (int)-3))) );
HXDLIN( 482)						HX_VARI_NAME( Float,k333,"k33") = (k332 - ( (Float)(_hx_array_unsafe_get(buffer,(zOffset1 + (int)-7))) ));
HXDLIN( 482)						buffer->__unsafe_set((zOffset1 + (int)-4),(k007 + k333));
HXDLIN( 482)						buffer->__unsafe_set((zOffset1 + (int)-6),(k007 - k333));
HXDLIN( 482)						t02 = ( (Float)(_hx_array_unsafe_get(buffer,(zOffset1 + (int)-1))) );
HXDLIN( 482)						t12 = ( (Float)(_hx_array_unsafe_get(buffer,(zOffset1 + (int)-5))) );
HXDLIN( 482)						HX_VARI_NAME( Float,k118,"k11") = (t02 - t12);
HXDLIN( 482)						HX_VARI_NAME( Float,y11,"y1") = (t02 + t12);
HXDLIN( 482)						HX_VARI_NAME( Float,y32,"y3") = ( (Float)(_hx_array_unsafe_get(buffer,(zOffset1 + (int)-3))) );
HXDLIN( 482)						HX_VARI_NAME( Float,y33,"y3") = (y32 + ( (Float)(_hx_array_unsafe_get(buffer,(zOffset1 + (int)-7))) ));
HXDLIN( 482)						buffer->__unsafe_set((zOffset1 + (int)-1),(y11 + y33));
HXDLIN( 482)						buffer->__unsafe_set((zOffset1 + (int)-3),(y11 - y33));
HXDLIN( 482)						buffer->__unsafe_set((zOffset1 + (int)-5),(k118 - k221));
HXDLIN( 482)						buffer->__unsafe_set((zOffset1 + (int)-7),(k118 + k221));
            					}
HXDLIN( 482)					zOffset = (zOffset - (int)16);
            				}
            			}
HXDLIN( 482)			{
HXLINE( 482)				HX_VARI( int,brOffset) = (int)0;
HXDLIN( 482)				HX_VARI_NAME( int,dOffset01,"dOffset0") = (n4 - (int)4);
HXDLIN( 482)				HX_VARI_NAME( int,dOffset11,"dOffset1") = (n2 - (int)4);
HXDLIN( 482)				while((dOffset01 >= (int)0)){
HXLINE( 482)					HX_VARI( int,k4) = ( (int)(_hx_array_unsafe_get(bitReverse,brOffset)) );
HXDLIN( 482)					{
HXLINE( 482)						Float val272 = ( (Float)(_hx_array_unsafe_get(buffer,k4)) );
HXDLIN( 482)						buf2->__unsafe_set((dOffset11 + (int)3),val272);
            					}
HXDLIN( 482)					{
HXLINE( 482)						Float val273 = ( (Float)(_hx_array_unsafe_get(buffer,(k4 + (int)1))) );
HXDLIN( 482)						buf2->__unsafe_set((dOffset11 + (int)2),val273);
            					}
HXDLIN( 482)					{
HXLINE( 482)						Float val274 = ( (Float)(_hx_array_unsafe_get(buffer,(k4 + (int)2))) );
HXDLIN( 482)						buf2->__unsafe_set((dOffset01 + (int)3),val274);
            					}
HXDLIN( 482)					{
HXLINE( 482)						Float val275 = ( (Float)(_hx_array_unsafe_get(buffer,(k4 + (int)3))) );
HXDLIN( 482)						buf2->__unsafe_set((dOffset01 + (int)2),val275);
            					}
HXDLIN( 482)					k4 = ( (int)(_hx_array_unsafe_get(bitReverse,(brOffset + (int)1))) );
HXDLIN( 482)					{
HXLINE( 482)						Float val276 = ( (Float)(_hx_array_unsafe_get(buffer,k4)) );
HXDLIN( 482)						buf2->__unsafe_set((dOffset11 + (int)1),val276);
            					}
HXDLIN( 482)					{
HXLINE( 482)						Float val277 = ( (Float)(_hx_array_unsafe_get(buffer,(k4 + (int)1))) );
HXDLIN( 482)						buf2->__unsafe_set(dOffset11,val277);
            					}
HXDLIN( 482)					{
HXLINE( 482)						Float val278 = ( (Float)(_hx_array_unsafe_get(buffer,(k4 + (int)2))) );
HXDLIN( 482)						buf2->__unsafe_set((dOffset01 + (int)1),val278);
            					}
HXDLIN( 482)					{
HXLINE( 482)						Float val279 = ( (Float)(_hx_array_unsafe_get(buffer,(k4 + (int)3))) );
HXDLIN( 482)						buf2->__unsafe_set(dOffset01,val279);
            					}
HXDLIN( 482)					dOffset01 = (dOffset01 - (int)4);
HXDLIN( 482)					dOffset11 = (dOffset11 - (int)4);
HXDLIN( 482)					brOffset = (brOffset + (int)2);
            				}
            			}
HXDLIN( 482)			{
HXLINE( 482)				HX_VARI( int,cOffset) = (int)0;
HXDLIN( 482)				HX_VARI_NAME( int,dOffset2,"dOffset") = (int)0;
HXDLIN( 482)				HX_VARI_NAME( int,eOffset3,"eOffset") = (n2 - (int)4);
HXDLIN( 482)				while((dOffset2 < eOffset3)){
HXLINE( 482)					HX_VARI( Float,a02) = ( (Float)(_hx_array_unsafe_get(buf2,dOffset2)) );
HXDLIN( 482)					HX_VARI_NAME( Float,a021,"a02") = (a02 - ( (Float)(_hx_array_unsafe_get(buf2,(eOffset3 + (int)2))) ));
HXDLIN( 482)					HX_VARI( Float,a11) = ( (Float)(_hx_array_unsafe_get(buf2,(dOffset2 + (int)1))) );
HXDLIN( 482)					HX_VARI_NAME( Float,a111,"a11") = (a11 + ( (Float)(_hx_array_unsafe_get(buf2,(eOffset3 + (int)3))) ));
HXDLIN( 482)					HX_VARI( Float,b0) = (( (Float)(_hx_array_unsafe_get(c,(cOffset + (int)1))) ) * a021);
HXDLIN( 482)					HX_VARI_NAME( Float,b01,"b0") = (b0 + (( (Float)(_hx_array_unsafe_get(c,cOffset)) ) * a111));
HXDLIN( 482)					HX_VARI( Float,b1) = (( (Float)(_hx_array_unsafe_get(c,(cOffset + (int)1))) ) * a111);
HXDLIN( 482)					HX_VARI_NAME( Float,b11,"b1") = (b1 - (( (Float)(_hx_array_unsafe_get(c,cOffset)) ) * a021));
HXDLIN( 482)					HX_VARI( Float,b2) = ( (Float)(_hx_array_unsafe_get(buf2,dOffset2)) );
HXDLIN( 482)					HX_VARI_NAME( Float,b21,"b2") = (b2 + ( (Float)(_hx_array_unsafe_get(buf2,(eOffset3 + (int)2))) ));
HXDLIN( 482)					HX_VARI( Float,b3) = ( (Float)(_hx_array_unsafe_get(buf2,(dOffset2 + (int)1))) );
HXDLIN( 482)					HX_VARI_NAME( Float,b31,"b3") = (b3 - ( (Float)(_hx_array_unsafe_get(buf2,(eOffset3 + (int)3))) ));
HXDLIN( 482)					buf2->__unsafe_set(dOffset2,(b21 + b01));
HXDLIN( 482)					buf2->__unsafe_set((dOffset2 + (int)1),(b31 + b11));
HXDLIN( 482)					buf2->__unsafe_set((eOffset3 + (int)2),(b21 - b01));
HXDLIN( 482)					buf2->__unsafe_set((eOffset3 + (int)3),(b11 - b31));
HXDLIN( 482)					HX_VARI_NAME( Float,a022,"a02") = ( (Float)(_hx_array_unsafe_get(buf2,(dOffset2 + (int)2))) );
HXDLIN( 482)					a021 = (a022 - ( (Float)(_hx_array_unsafe_get(buf2,eOffset3)) ));
HXDLIN( 482)					HX_VARI_NAME( Float,a112,"a11") = ( (Float)(_hx_array_unsafe_get(buf2,(dOffset2 + (int)3))) );
HXDLIN( 482)					a111 = (a112 + ( (Float)(_hx_array_unsafe_get(buf2,(eOffset3 + (int)1))) ));
HXDLIN( 482)					HX_VARI_NAME( Float,b02,"b0") = (( (Float)(_hx_array_unsafe_get(c,(cOffset + (int)3))) ) * a021);
HXDLIN( 482)					b01 = (b02 + (( (Float)(_hx_array_unsafe_get(c,(cOffset + (int)2))) ) * a111));
HXDLIN( 482)					HX_VARI_NAME( Float,b12,"b1") = (( (Float)(_hx_array_unsafe_get(c,(cOffset + (int)3))) ) * a111);
HXDLIN( 482)					b11 = (b12 - (( (Float)(_hx_array_unsafe_get(c,(cOffset + (int)2))) ) * a021));
HXDLIN( 482)					HX_VARI_NAME( Float,b22,"b2") = ( (Float)(_hx_array_unsafe_get(buf2,(dOffset2 + (int)2))) );
HXDLIN( 482)					b21 = (b22 + ( (Float)(_hx_array_unsafe_get(buf2,eOffset3)) ));
HXDLIN( 482)					HX_VARI_NAME( Float,b32,"b3") = ( (Float)(_hx_array_unsafe_get(buf2,(dOffset2 + (int)3))) );
HXDLIN( 482)					b31 = (b32 - ( (Float)(_hx_array_unsafe_get(buf2,(eOffset3 + (int)1))) ));
HXDLIN( 482)					buf2->__unsafe_set((dOffset2 + (int)2),(b21 + b01));
HXDLIN( 482)					buf2->__unsafe_set((dOffset2 + (int)3),(b31 + b11));
HXDLIN( 482)					buf2->__unsafe_set(eOffset3,(b21 - b01));
HXDLIN( 482)					buf2->__unsafe_set((eOffset3 + (int)1),(b11 - b31));
HXDLIN( 482)					cOffset = (cOffset + (int)4);
HXDLIN( 482)					dOffset2 = (dOffset2 + (int)4);
HXDLIN( 482)					eOffset3 = (eOffset3 - (int)4);
            				}
            			}
HXDLIN( 482)			{
HXLINE( 482)				HX_VARI( int,bOffset) = (n2 - (int)8);
HXDLIN( 482)				HX_VARI_NAME( int,eOffset4,"eOffset") = (n2 - (int)8);
HXDLIN( 482)				HX_VARI_NAME( int,dOffset02,"dOffset0") = (int)0;
HXDLIN( 482)				HX_VARI_NAME( int,dOffset12,"dOffset1") = (n2 - (int)4);
HXDLIN( 482)				HX_VARI_NAME( int,dOffset21,"dOffset2") = n2;
HXDLIN( 482)				HX_VARI( int,dOffset3) = (n - (int)4);
HXDLIN( 482)				while((eOffset4 >= (int)0)){
HXLINE( 482)					HX_VARI( Float,p3) = ( (Float)(_hx_array_unsafe_get(buf2,(eOffset4 + (int)6))) );
HXDLIN( 482)					HX_VARI_NAME( Float,p31,"p3") = (p3 * ( (Float)(_hx_array_unsafe_get(b,(bOffset + (int)7))) ));
HXDLIN( 482)					HX_VARI_NAME( Float,p32,"p3") = ( (Float)(_hx_array_unsafe_get(buf2,(eOffset4 + (int)7))) );
HXDLIN( 482)					HX_VARI_NAME( Float,p33,"p3") = (p31 - (p32 * ( (Float)(_hx_array_unsafe_get(b,(bOffset + (int)6))) )));
HXDLIN( 482)					HX_VARI( Float,p2) = -(( (Float)(_hx_array_unsafe_get(buf2,(eOffset4 + (int)6))) ));
HXDLIN( 482)					HX_VARI_NAME( Float,p21,"p2") = (p2 * ( (Float)(_hx_array_unsafe_get(b,(bOffset + (int)6))) ));
HXDLIN( 482)					HX_VARI_NAME( Float,p22,"p2") = ( (Float)(_hx_array_unsafe_get(buf2,(eOffset4 + (int)7))) );
HXDLIN( 482)					HX_VARI_NAME( Float,p23,"p2") = (p21 - (p22 * ( (Float)(_hx_array_unsafe_get(b,(bOffset + (int)7))) )));
HXDLIN( 482)					buffer->__unsafe_set(dOffset02,p33);
HXDLIN( 482)					buffer->__unsafe_set((dOffset12 + (int)3),-(p33));
HXDLIN( 482)					buffer->__unsafe_set(dOffset21,p23);
HXDLIN( 482)					buffer->__unsafe_set((dOffset3 + (int)3),p23);
HXDLIN( 482)					HX_VARI( Float,p1) = ( (Float)(_hx_array_unsafe_get(buf2,(eOffset4 + (int)4))) );
HXDLIN( 482)					HX_VARI_NAME( Float,p11,"p1") = (p1 * ( (Float)(_hx_array_unsafe_get(b,(bOffset + (int)5))) ));
HXDLIN( 482)					HX_VARI_NAME( Float,p12,"p1") = ( (Float)(_hx_array_unsafe_get(buf2,(eOffset4 + (int)5))) );
HXDLIN( 482)					HX_VARI_NAME( Float,p13,"p1") = (p11 - (p12 * ( (Float)(_hx_array_unsafe_get(b,(bOffset + (int)4))) )));
HXDLIN( 482)					HX_VARI( Float,p0) = -(( (Float)(_hx_array_unsafe_get(buf2,(eOffset4 + (int)4))) ));
HXDLIN( 482)					HX_VARI_NAME( Float,p01,"p0") = (p0 * ( (Float)(_hx_array_unsafe_get(b,(bOffset + (int)4))) ));
HXDLIN( 482)					HX_VARI_NAME( Float,p02,"p0") = ( (Float)(_hx_array_unsafe_get(buf2,(eOffset4 + (int)5))) );
HXDLIN( 482)					HX_VARI_NAME( Float,p03,"p0") = (p01 - (p02 * ( (Float)(_hx_array_unsafe_get(b,(bOffset + (int)5))) )));
HXDLIN( 482)					buffer->__unsafe_set((dOffset02 + (int)1),p13);
HXDLIN( 482)					buffer->__unsafe_set((dOffset12 + (int)2),-(p13));
HXDLIN( 482)					buffer->__unsafe_set((dOffset21 + (int)1),p03);
HXDLIN( 482)					buffer->__unsafe_set((dOffset3 + (int)2),p03);
HXDLIN( 482)					HX_VARI_NAME( Float,p34,"p3") = ( (Float)(_hx_array_unsafe_get(buf2,(eOffset4 + (int)2))) );
HXDLIN( 482)					HX_VARI_NAME( Float,p35,"p3") = (p34 * ( (Float)(_hx_array_unsafe_get(b,(bOffset + (int)3))) ));
HXDLIN( 482)					HX_VARI_NAME( Float,p36,"p3") = ( (Float)(_hx_array_unsafe_get(buf2,(eOffset4 + (int)3))) );
HXDLIN( 482)					p33 = (p35 - (p36 * ( (Float)(_hx_array_unsafe_get(b,(bOffset + (int)2))) )));
HXDLIN( 482)					HX_VARI_NAME( Float,p24,"p2") = -(( (Float)(_hx_array_unsafe_get(buf2,(eOffset4 + (int)2))) ));
HXDLIN( 482)					HX_VARI_NAME( Float,p25,"p2") = (p24 * ( (Float)(_hx_array_unsafe_get(b,(bOffset + (int)2))) ));
HXDLIN( 482)					HX_VARI_NAME( Float,p26,"p2") = ( (Float)(_hx_array_unsafe_get(buf2,(eOffset4 + (int)3))) );
HXDLIN( 482)					p23 = (p25 - (p26 * ( (Float)(_hx_array_unsafe_get(b,(bOffset + (int)3))) )));
HXDLIN( 482)					buffer->__unsafe_set((dOffset02 + (int)2),p33);
HXDLIN( 482)					buffer->__unsafe_set((dOffset12 + (int)1),-(p33));
HXDLIN( 482)					buffer->__unsafe_set((dOffset21 + (int)2),p23);
HXDLIN( 482)					buffer->__unsafe_set((dOffset3 + (int)1),p23);
HXDLIN( 482)					HX_VARI_NAME( Float,p14,"p1") = ( (Float)(_hx_array_unsafe_get(buf2,eOffset4)) );
HXDLIN( 482)					HX_VARI_NAME( Float,p15,"p1") = (p14 * ( (Float)(_hx_array_unsafe_get(b,(bOffset + (int)1))) ));
HXDLIN( 482)					HX_VARI_NAME( Float,p16,"p1") = ( (Float)(_hx_array_unsafe_get(buf2,(eOffset4 + (int)1))) );
HXDLIN( 482)					p13 = (p15 - (p16 * ( (Float)(_hx_array_unsafe_get(b,bOffset)) )));
HXDLIN( 482)					HX_VARI_NAME( Float,p04,"p0") = -(( (Float)(_hx_array_unsafe_get(buf2,eOffset4)) ));
HXDLIN( 482)					HX_VARI_NAME( Float,p05,"p0") = (p04 * ( (Float)(_hx_array_unsafe_get(b,bOffset)) ));
HXDLIN( 482)					HX_VARI_NAME( Float,p06,"p0") = ( (Float)(_hx_array_unsafe_get(buf2,(eOffset4 + (int)1))) );
HXDLIN( 482)					p03 = (p05 - (p06 * ( (Float)(_hx_array_unsafe_get(b,(bOffset + (int)1))) )));
HXDLIN( 482)					buffer->__unsafe_set((dOffset02 + (int)3),p13);
HXDLIN( 482)					buffer->__unsafe_set(dOffset12,-(p13));
HXDLIN( 482)					buffer->__unsafe_set((dOffset21 + (int)3),p03);
HXDLIN( 482)					buffer->__unsafe_set(dOffset3,p03);
HXDLIN( 482)					bOffset = (bOffset - (int)8);
HXDLIN( 482)					eOffset4 = (eOffset4 - (int)8);
HXDLIN( 482)					dOffset02 = (dOffset02 + (int)4);
HXDLIN( 482)					dOffset21 = (dOffset21 + (int)4);
HXDLIN( 482)					dOffset12 = (dOffset12 - (int)4);
HXDLIN( 482)					dOffset3 = (dOffset3 - (int)4);
            				}
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC3(VorbisDecoder_obj,inverseMdct,(void))

 ::Dynamic VorbisDecoder_obj::decodePacket(){
            	HX_STACKFRAME(&_hx_pos_79a4005a31909e64_486_decodePacket)
            	HX_STACK_THIS(this)
HXLINE( 487)		HX_VARI(  ::Dynamic,result) = this->decodeInitial();
HXLINE( 488)		if (hx::IsNull( result )) {
HXLINE( 489)			return null();
            		}
HXLINE( 492)		return this->decodePacketRest(result);
            	}


HX_DEFINE_DYNAMIC_FUNC0(VorbisDecoder_obj,decodePacket,return )

 ::Dynamic VorbisDecoder_obj::decodeInitial(){
            	HX_GC_STACKFRAME(&_hx_pos_79a4005a31909e64_496_decodeInitial)
            	HX_STACK_THIS(this)
HXLINE( 497)		this->channelBufferStart = (this->channelBufferEnd = (int)0);
HXLINE( 499)		while(true){
HXLINE( 500)			if (!(this->decodeState->maybeStartPacket())) {
HXLINE( 501)				return null();
            			}
HXLINE( 505)			HX_VARI(  ::stb::format::vorbis::VorbisDecodeState,_this) = this->decodeState;
HXDLIN( 505)			int _hx_tmp;
HXDLIN( 505)			if ((_this->validBits < (int)0)) {
HXLINE( 505)				_hx_tmp = (int)0;
            			}
            			else {
HXLINE( 505)				if ((_this->validBits < (int)1)) {
HXLINE( 505)					if ((_this->validBits == (int)0)) {
HXLINE( 505)						_this->acc = (int)0;
            					}
HXDLIN( 505)					while(true){
HXLINE( 505)						bool _hx_tmp1;
HXDLIN( 505)						if ((_this->bytesInSeg == (int)0)) {
HXLINE( 505)							if (!(_this->lastSeg)) {
HXLINE( 505)								_hx_tmp1 = (_this->next() == (int)0);
            							}
            							else {
HXLINE( 505)								_hx_tmp1 = true;
            							}
            						}
            						else {
HXLINE( 505)							_hx_tmp1 = false;
            						}
HXDLIN( 505)						if (_hx_tmp1) {
HXLINE( 505)							_this->validBits = (int)-1;
HXDLIN( 505)							goto _hx_goto_54;
            						}
            						else {
HXLINE( 505)							_this->bytesInSeg--;
HXDLIN( 505)							int a = _this->acc;
HXDLIN( 505)							_this->inputPosition = (_this->inputPosition + (int)1);
HXDLIN( 505)							int b = _this->input->readByte();
HXDLIN( 505)							_this->acc = (a + ((int)b << (int)_this->validBits));
HXDLIN( 505)							_this->validBits = (_this->validBits + (int)8);
            						}
HXDLIN( 505)						if (!((_this->validBits < (int)1))) {
HXLINE( 505)							goto _hx_goto_54;
            						}
            					}
            					_hx_goto_54:;
HXDLIN( 505)					if ((_this->validBits < (int)0)) {
HXLINE( 505)						_hx_tmp = (int)0;
            					}
            					else {
HXLINE( 505)						HX_VARI( int,z) = ((int)_this->acc & (int)(int)1);
HXDLIN( 505)						_this->acc = hx::UShr(_this->acc,(int)1);
HXDLIN( 505)						_this->validBits = (_this->validBits - (int)1);
HXDLIN( 505)						_hx_tmp = z;
            					}
            				}
            				else {
HXLINE( 505)					HX_VARI_NAME( int,z1,"z") = ((int)_this->acc & (int)(int)1);
HXDLIN( 505)					_this->acc = hx::UShr(_this->acc,(int)1);
HXDLIN( 505)					_this->validBits = (_this->validBits - (int)1);
HXDLIN( 505)					_hx_tmp = z1;
            				}
            			}
HXDLIN( 505)			if ((_hx_tmp != (int)0)) {
HXLINE( 506)				while(true){
HXLINE( 506)					HX_VARI_NAME(  ::stb::format::vorbis::VorbisDecodeState,_this1,"_this") = this->decodeState;
HXDLIN( 506)					HX_VAR( int,x);
HXDLIN( 506)					bool x1;
HXDLIN( 506)					if ((_this1->bytesInSeg == (int)0)) {
HXLINE( 506)						if (!(_this1->lastSeg)) {
HXLINE( 506)							x1 = (_this1->next() == (int)0);
            						}
            						else {
HXLINE( 506)							x1 = true;
            						}
            					}
            					else {
HXLINE( 506)						x1 = false;
            					}
HXDLIN( 506)					if (x1) {
HXLINE( 506)						x = (int)-1;
            					}
            					else {
HXLINE( 506)						_this1->bytesInSeg--;
HXDLIN( 506)						_this1->inputPosition = (_this1->inputPosition + (int)1);
HXDLIN( 506)						x = _this1->input->readByte();
            					}
HXDLIN( 506)					_this1->validBits = (int)0;
HXDLIN( 506)					if (!(((int)-1 != x))) {
HXLINE( 506)						goto _hx_goto_55;
            					}
            				}
            				_hx_goto_55:;
HXLINE( 507)				continue;
            			}
HXLINE( 509)			goto _hx_goto_53;
            		}
            		_hx_goto_53:;
HXLINE( 512)		HX_VARI_NAME(  ::stb::format::vorbis::VorbisDecodeState,_this2,"_this") = this->decodeState;
HXDLIN( 512)		HX_VARI( int,n) = (this->header->modes->length - (int)1);
HXDLIN( 512)		HX_VARI( ::Array< int >,log2_4) = ::Array_obj< int >::fromData( _hx_array_data_42df9f40_60,16);
HXDLIN( 512)		HX_VAR_NAME( int,n1,"n");
HXDLIN( 512)		if ((n < (int)16384)) {
HXLINE( 512)			if ((n < (int)16)) {
HXLINE( 512)				n1 = log2_4->__get(n);
            			}
            			else {
HXLINE( 512)				if ((n < (int)512)) {
HXLINE( 512)					n1 = ((int)5 + log2_4->__get(((int)n >> (int)(int)5)));
            				}
            				else {
HXLINE( 512)					n1 = ((int)10 + log2_4->__get(((int)n >> (int)(int)10)));
            				}
            			}
            		}
            		else {
HXLINE( 512)			if ((n < (int)16777216)) {
HXLINE( 512)				if ((n < (int)524288)) {
HXLINE( 512)					n1 = ((int)15 + log2_4->__get(((int)n >> (int)(int)15)));
            				}
            				else {
HXLINE( 512)					n1 = ((int)20 + log2_4->__get(((int)n >> (int)(int)20)));
            				}
            			}
            			else {
HXLINE( 512)				if ((n < (int)536870912)) {
HXLINE( 512)					n1 = ((int)25 + log2_4->__get(((int)n >> (int)(int)25)));
            				}
            				else {
HXLINE( 512)					if ((n < (int)-2147483648)) {
HXLINE( 512)						n1 = ((int)30 + log2_4->__get(((int)n >> (int)(int)30)));
            					}
            					else {
HXLINE( 512)						n1 = (int)0;
            					}
            				}
            			}
            		}
HXDLIN( 512)		HX_VAR( int,i);
HXDLIN( 512)		if ((_this2->validBits < (int)0)) {
HXLINE( 512)			i = (int)0;
            		}
            		else {
HXLINE( 512)			if ((_this2->validBits < n1)) {
HXLINE( 512)				if ((n1 > (int)24)) {
HXLINE( 512)					HX_VARI_NAME( int,i1,"i") = _this2->readBits((int)24);
HXDLIN( 512)					i = (i1 + ((int)_this2->readBits((n1 - (int)24)) << (int)(int)24));
            				}
            				else {
HXLINE( 512)					if ((_this2->validBits == (int)0)) {
HXLINE( 512)						_this2->acc = (int)0;
            					}
HXDLIN( 512)					while(true){
HXLINE( 512)						bool i2;
HXDLIN( 512)						if ((_this2->bytesInSeg == (int)0)) {
HXLINE( 512)							if (!(_this2->lastSeg)) {
HXLINE( 512)								i2 = (_this2->next() == (int)0);
            							}
            							else {
HXLINE( 512)								i2 = true;
            							}
            						}
            						else {
HXLINE( 512)							i2 = false;
            						}
HXDLIN( 512)						if (i2) {
HXLINE( 512)							_this2->validBits = (int)-1;
HXDLIN( 512)							goto _hx_goto_56;
            						}
            						else {
HXLINE( 512)							_this2->bytesInSeg--;
HXDLIN( 512)							int a1 = _this2->acc;
HXDLIN( 512)							_this2->inputPosition = (_this2->inputPosition + (int)1);
HXDLIN( 512)							int b1 = _this2->input->readByte();
HXDLIN( 512)							_this2->acc = (a1 + ((int)b1 << (int)_this2->validBits));
HXDLIN( 512)							_this2->validBits = (_this2->validBits + (int)8);
            						}
HXDLIN( 512)						if (!((_this2->validBits < n1))) {
HXLINE( 512)							goto _hx_goto_56;
            						}
            					}
            					_hx_goto_56:;
HXDLIN( 512)					if ((_this2->validBits < (int)0)) {
HXLINE( 512)						i = (int)0;
            					}
            					else {
HXLINE( 512)						HX_VARI_NAME( int,z2,"z") = ((int)_this2->acc & (int)(((int)(int)1 << (int)n1) - (int)1));
HXDLIN( 512)						_this2->acc = hx::UShr(_this2->acc,n1);
HXDLIN( 512)						_this2->validBits = (_this2->validBits - n1);
HXDLIN( 512)						i = z2;
            					}
            				}
            			}
            			else {
HXLINE( 512)				HX_VARI_NAME( int,z3,"z") = ((int)_this2->acc & (int)(((int)(int)1 << (int)n1) - (int)1));
HXDLIN( 512)				_this2->acc = hx::UShr(_this2->acc,n1);
HXDLIN( 512)				_this2->validBits = (_this2->validBits - n1);
HXDLIN( 512)				i = z3;
            			}
            		}
HXLINE( 513)		bool _hx_tmp2;
HXDLIN( 513)		if ((i != (int)-1)) {
HXLINE( 513)			_hx_tmp2 = (i >= this->header->modes->length);
            		}
            		else {
HXLINE( 513)			_hx_tmp2 = true;
            		}
HXDLIN( 513)		if (_hx_tmp2) {
HXLINE( 514)			HX_STACK_DO_THROW( ::stb::format::vorbis::data::ReaderError_obj::__alloc( HX_CTX ,::stb::format::vorbis::data::ReaderErrorType_obj::SEEK_FAILED_dyn(),null(),hx::SourceInfo(HX_("VorbisDecoder.hx",0d,8b,92,a5),514,HX_("stb.format.vorbis.VorbisDecoder",40,9f,df,42),HX_("decodeInitial",f6,fc,28,f6))));
            		}
HXLINE( 517)		HX_VARI(  ::stb::format::vorbis::data::Mode,m) = ( ( ::stb::format::vorbis::data::Mode)(_hx_array_unsafe_get(this->header->modes,i)) );
HXLINE( 518)		HX_VAR_NAME( int,n2,"n");
HXDLIN( 518)		HX_VAR( int,prev);
HXDLIN( 518)		HX_VAR( int,next);
HXLINE( 520)		if (m->blockflag) {
HXLINE( 521)			n2 = this->header->blocksize1;
HXLINE( 522)			HX_VARI_NAME(  ::stb::format::vorbis::VorbisDecodeState,_this3,"_this") = this->decodeState;
HXDLIN( 522)			if ((_this3->validBits < (int)0)) {
HXLINE( 522)				prev = (int)0;
            			}
            			else {
HXLINE( 522)				if ((_this3->validBits < (int)1)) {
HXLINE( 522)					if ((_this3->validBits == (int)0)) {
HXLINE( 522)						_this3->acc = (int)0;
            					}
HXDLIN( 522)					while(true){
HXLINE( 522)						bool prev1;
HXDLIN( 522)						if ((_this3->bytesInSeg == (int)0)) {
HXLINE( 522)							if (!(_this3->lastSeg)) {
HXLINE( 522)								prev1 = (_this3->next() == (int)0);
            							}
            							else {
HXLINE( 522)								prev1 = true;
            							}
            						}
            						else {
HXLINE( 522)							prev1 = false;
            						}
HXDLIN( 522)						if (prev1) {
HXLINE( 522)							_this3->validBits = (int)-1;
HXDLIN( 522)							goto _hx_goto_57;
            						}
            						else {
HXLINE( 522)							_this3->bytesInSeg--;
HXDLIN( 522)							int a2 = _this3->acc;
HXDLIN( 522)							_this3->inputPosition = (_this3->inputPosition + (int)1);
HXDLIN( 522)							int b2 = _this3->input->readByte();
HXDLIN( 522)							_this3->acc = (a2 + ((int)b2 << (int)_this3->validBits));
HXDLIN( 522)							_this3->validBits = (_this3->validBits + (int)8);
            						}
HXDLIN( 522)						if (!((_this3->validBits < (int)1))) {
HXLINE( 522)							goto _hx_goto_57;
            						}
            					}
            					_hx_goto_57:;
HXDLIN( 522)					if ((_this3->validBits < (int)0)) {
HXLINE( 522)						prev = (int)0;
            					}
            					else {
HXLINE( 522)						HX_VARI_NAME( int,z4,"z") = ((int)_this3->acc & (int)(int)1);
HXDLIN( 522)						_this3->acc = hx::UShr(_this3->acc,(int)1);
HXDLIN( 522)						_this3->validBits = (_this3->validBits - (int)1);
HXDLIN( 522)						prev = z4;
            					}
            				}
            				else {
HXLINE( 522)					HX_VARI_NAME( int,z5,"z") = ((int)_this3->acc & (int)(int)1);
HXDLIN( 522)					_this3->acc = hx::UShr(_this3->acc,(int)1);
HXDLIN( 522)					_this3->validBits = (_this3->validBits - (int)1);
HXDLIN( 522)					prev = z5;
            				}
            			}
HXLINE( 523)			HX_VARI_NAME(  ::stb::format::vorbis::VorbisDecodeState,_this4,"_this") = this->decodeState;
HXDLIN( 523)			if ((_this4->validBits < (int)0)) {
HXLINE( 523)				next = (int)0;
            			}
            			else {
HXLINE( 523)				if ((_this4->validBits < (int)1)) {
HXLINE( 523)					if ((_this4->validBits == (int)0)) {
HXLINE( 523)						_this4->acc = (int)0;
            					}
HXDLIN( 523)					while(true){
HXLINE( 523)						bool next1;
HXDLIN( 523)						if ((_this4->bytesInSeg == (int)0)) {
HXLINE( 523)							if (!(_this4->lastSeg)) {
HXLINE( 523)								next1 = (_this4->next() == (int)0);
            							}
            							else {
HXLINE( 523)								next1 = true;
            							}
            						}
            						else {
HXLINE( 523)							next1 = false;
            						}
HXDLIN( 523)						if (next1) {
HXLINE( 523)							_this4->validBits = (int)-1;
HXDLIN( 523)							goto _hx_goto_58;
            						}
            						else {
HXLINE( 523)							_this4->bytesInSeg--;
HXDLIN( 523)							int a3 = _this4->acc;
HXDLIN( 523)							_this4->inputPosition = (_this4->inputPosition + (int)1);
HXDLIN( 523)							int b3 = _this4->input->readByte();
HXDLIN( 523)							_this4->acc = (a3 + ((int)b3 << (int)_this4->validBits));
HXDLIN( 523)							_this4->validBits = (_this4->validBits + (int)8);
            						}
HXDLIN( 523)						if (!((_this4->validBits < (int)1))) {
HXLINE( 523)							goto _hx_goto_58;
            						}
            					}
            					_hx_goto_58:;
HXDLIN( 523)					if ((_this4->validBits < (int)0)) {
HXLINE( 523)						next = (int)0;
            					}
            					else {
HXLINE( 523)						HX_VARI_NAME( int,z6,"z") = ((int)_this4->acc & (int)(int)1);
HXDLIN( 523)						_this4->acc = hx::UShr(_this4->acc,(int)1);
HXDLIN( 523)						_this4->validBits = (_this4->validBits - (int)1);
HXDLIN( 523)						next = z6;
            					}
            				}
            				else {
HXLINE( 523)					HX_VARI_NAME( int,z7,"z") = ((int)_this4->acc & (int)(int)1);
HXDLIN( 523)					_this4->acc = hx::UShr(_this4->acc,(int)1);
HXDLIN( 523)					_this4->validBits = (_this4->validBits - (int)1);
HXDLIN( 523)					next = z7;
            				}
            			}
            		}
            		else {
HXLINE( 525)			next = (int)0;
HXDLIN( 525)			prev = (int)0;
HXLINE( 526)			n2 = this->header->blocksize0;
            		}
HXLINE( 530)		HX_VARI( int,windowCenter) = ((int)n2 >> (int)(int)1);
HXLINE( 534)		 ::Dynamic _hx_tmp3;
HXDLIN( 534)		bool _hx_tmp4;
HXDLIN( 534)		if (m->blockflag) {
HXLINE( 534)			_hx_tmp4 = (prev == (int)0);
            		}
            		else {
HXLINE( 534)			_hx_tmp4 = false;
            		}
HXDLIN( 534)		if (_hx_tmp4) {
HXLINE( 534)			_hx_tmp3 =  ::Dynamic(hx::Anon_obj::Create(2)
            				->setFixed(0,HX_("start",62,74,0b,84),((int)(n2 - this->header->blocksize0) >> (int)(int)2))
            				->setFixed(1,HX_("end",db,03,4d,00),((int)(n2 + this->header->blocksize0) >> (int)(int)2)));
            		}
            		else {
HXLINE( 534)			_hx_tmp3 =  ::Dynamic(hx::Anon_obj::Create(2)
            				->setFixed(0,HX_("start",62,74,0b,84),(int)0)
            				->setFixed(1,HX_("end",db,03,4d,00),windowCenter));
            		}
HXLINE( 541)		 ::Dynamic _hx_tmp5;
HXDLIN( 541)		bool _hx_tmp6;
HXDLIN( 541)		if (m->blockflag) {
HXLINE( 541)			_hx_tmp6 = (next == (int)0);
            		}
            		else {
HXLINE( 541)			_hx_tmp6 = false;
            		}
HXDLIN( 541)		if (_hx_tmp6) {
HXLINE( 541)			_hx_tmp5 =  ::Dynamic(hx::Anon_obj::Create(2)
            				->setFixed(0,HX_("start",62,74,0b,84),((int)((n2 * (int)3) - this->header->blocksize0) >> (int)(int)2))
            				->setFixed(1,HX_("end",db,03,4d,00),((int)((n2 * (int)3) + this->header->blocksize0) >> (int)(int)2)));
            		}
            		else {
HXLINE( 541)			_hx_tmp5 =  ::Dynamic(hx::Anon_obj::Create(2)
            				->setFixed(0,HX_("start",62,74,0b,84),windowCenter)
            				->setFixed(1,HX_("end",db,03,4d,00),n2));
            		}
HXLINE( 532)		return  ::Dynamic(hx::Anon_obj::Create(3)
            			->setFixed(0,HX_("right",dc,0b,64,e9),_hx_tmp5)
            			->setFixed(1,HX_("left",07,08,b0,47),_hx_tmp3)
            			->setFixed(2,HX_("mode",63,d3,60,48),i));
            	}


HX_DEFINE_DYNAMIC_FUNC0(VorbisDecoder_obj,decodeInitial,return )

 ::Dynamic VorbisDecoder_obj::decodePacketRest( ::Dynamic r){
            	HX_GC_STACKFRAME(&_hx_pos_79a4005a31909e64_553_decodePacketRest)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(r,"r")
HXLINE( 555)		HX_VARI(  ::stb::format::vorbis::data::Mode,m) = ( ( ::stb::format::vorbis::data::Mode)(_hx_array_unsafe_get(this->header->modes,( (int)(r->__Field(HX_("mode",63,d3,60,48),hx::paccDynamic)) ))) );
HXLINE( 557)		HX_VARI( ::Array< bool >,zeroChannel) = ::Array_obj< bool >::__new((int)256);
HXLINE( 558)		HX_VARI( ::Array< bool >,reallyZeroChannel) = ::Array_obj< bool >::__new((int)256);
HXLINE( 562)		HX_VAR( int,n);
HXDLIN( 562)		if (m->blockflag) {
HXLINE( 562)			n = this->header->blocksize1;
            		}
            		else {
HXLINE( 562)			n = this->header->blocksize0;
            		}
HXLINE( 563)		HX_VARI(  ::stb::format::vorbis::data::Mapping,map) = ( ( ::stb::format::vorbis::data::Mapping)(_hx_array_unsafe_get(this->header->mapping,m->mapping)) );
HXLINE( 566)		HX_VARI( int,n2) = ((int)n >> (int)(int)1);
HXLINE( 568)		HX_VARI( ::Array< int >,rangeList) = ::Array_obj< int >::fromData( _hx_array_data_42df9f40_80,4);
HXLINE( 569)		HX_VARI( ::Array< ::Dynamic>,codebooks) = this->header->codebooks;
HXLINE( 571)		{
HXLINE( 571)			HX_VARI( int,_g1) = (int)0;
HXDLIN( 571)			HX_VARI( int,_g) = this->header->channel;
HXDLIN( 571)			while((_g1 < _g)){
HXLINE( 571)				_g1 = (_g1 + (int)1);
HXDLIN( 571)				HX_VARI( int,i) = (_g1 - (int)1);
HXLINE( 572)				HX_VARI( int,s) = ( ( ::stb::format::vorbis::data::MappingChannel)(_hx_array_unsafe_get(map->chan,i)) )->mux;
HXLINE( 573)				zeroChannel->__unsafe_set(i,false);
HXLINE( 574)				::Array< ::Dynamic> this1 = this->header->floorConfig;
HXDLIN( 574)				HX_VARI(  ::stb::format::vorbis::data::Floor,floor) = ( ( ::stb::format::vorbis::data::Floor)(_hx_array_unsafe_get(this1,( (int)(_hx_array_unsafe_get(map->submapFloor,s)) ))) );
HXLINE( 575)				if ((floor->type == (int)0)) {
HXLINE( 576)					HX_STACK_DO_THROW( ::stb::format::vorbis::data::ReaderError_obj::__alloc( HX_CTX ,::stb::format::vorbis::data::ReaderErrorType_obj::INVALID_STREAM_dyn(),null(),hx::SourceInfo(HX_("VorbisDecoder.hx",0d,8b,92,a5),576,HX_("stb.format.vorbis.VorbisDecoder",40,9f,df,42),HX_("decodePacketRest",8a,29,db,8b))));
            				}
            				else {
HXLINE( 578)					HX_VARI(  ::stb::format::vorbis::data::Floor1,g) = floor->floor1;
HXLINE( 579)					HX_VARI(  ::stb::format::vorbis::VorbisDecodeState,_this) = this->decodeState;
HXDLIN( 579)					int _hx_tmp;
HXDLIN( 579)					if ((_this->validBits < (int)0)) {
HXLINE( 579)						_hx_tmp = (int)0;
            					}
            					else {
HXLINE( 579)						if ((_this->validBits < (int)1)) {
HXLINE( 579)							if ((_this->validBits == (int)0)) {
HXLINE( 579)								_this->acc = (int)0;
            							}
HXDLIN( 579)							while(true){
HXLINE( 579)								bool _hx_tmp1;
HXDLIN( 579)								if ((_this->bytesInSeg == (int)0)) {
HXLINE( 579)									if (!(_this->lastSeg)) {
HXLINE( 579)										_hx_tmp1 = (_this->next() == (int)0);
            									}
            									else {
HXLINE( 579)										_hx_tmp1 = true;
            									}
            								}
            								else {
HXLINE( 579)									_hx_tmp1 = false;
            								}
HXDLIN( 579)								if (_hx_tmp1) {
HXLINE( 579)									_this->validBits = (int)-1;
HXDLIN( 579)									goto _hx_goto_62;
            								}
            								else {
HXLINE( 579)									_this->bytesInSeg--;
HXDLIN( 579)									int a = _this->acc;
HXDLIN( 579)									_this->inputPosition = (_this->inputPosition + (int)1);
HXDLIN( 579)									int b = _this->input->readByte();
HXDLIN( 579)									_this->acc = (a + ((int)b << (int)_this->validBits));
HXDLIN( 579)									_this->validBits = (_this->validBits + (int)8);
            								}
HXDLIN( 579)								if (!((_this->validBits < (int)1))) {
HXLINE( 579)									goto _hx_goto_62;
            								}
            							}
            							_hx_goto_62:;
HXDLIN( 579)							if ((_this->validBits < (int)0)) {
HXLINE( 579)								_hx_tmp = (int)0;
            							}
            							else {
HXLINE( 579)								HX_VARI( int,z) = ((int)_this->acc & (int)(int)1);
HXDLIN( 579)								_this->acc = hx::UShr(_this->acc,(int)1);
HXDLIN( 579)								_this->validBits = (_this->validBits - (int)1);
HXDLIN( 579)								_hx_tmp = z;
            							}
            						}
            						else {
HXLINE( 579)							HX_VARI_NAME( int,z1,"z") = ((int)_this->acc & (int)(int)1);
HXDLIN( 579)							_this->acc = hx::UShr(_this->acc,(int)1);
HXDLIN( 579)							_this->validBits = (_this->validBits - (int)1);
HXDLIN( 579)							_hx_tmp = z1;
            						}
            					}
HXDLIN( 579)					if ((_hx_tmp != (int)0)) {
HXLINE( 580)						HX_VARI( ::Array< int >,fy) = ::Array_obj< int >::__new();
HXLINE( 581)						HX_VARI( ::Array< bool >,step2Flag) = ::Array_obj< bool >::__new((int)256);
HXLINE( 582)						HX_VARI( int,range) = rangeList->__get((g->floor1Multiplier - (int)1));
HXLINE( 583)						HX_VARI( int,offset) = (int)2;
HXLINE( 584)						fy = ( (::Array< int >)(_hx_array_unsafe_get(this->finalY,i)) );
HXLINE( 585)						HX_VARI_NAME(  ::stb::format::vorbis::VorbisDecodeState,_this1,"_this") = this->decodeState;
HXDLIN( 585)						HX_VARI( ::Array< int >,log2_4) = ::Array_obj< int >::fromData( _hx_array_data_42df9f40_81,16);
HXDLIN( 585)						int n1;
HXDLIN( 585)						if ((range < (int)16384)) {
HXLINE( 585)							if ((range < (int)16)) {
HXLINE( 585)								n1 = log2_4->__get(range);
            							}
            							else {
HXLINE( 585)								if ((range < (int)512)) {
HXLINE( 585)									n1 = ((int)5 + log2_4->__get(((int)range >> (int)(int)5)));
            								}
            								else {
HXLINE( 585)									n1 = ((int)10 + log2_4->__get(((int)range >> (int)(int)10)));
            								}
            							}
            						}
            						else {
HXLINE( 585)							if ((range < (int)16777216)) {
HXLINE( 585)								if ((range < (int)524288)) {
HXLINE( 585)									n1 = ((int)15 + log2_4->__get(((int)range >> (int)(int)15)));
            								}
            								else {
HXLINE( 585)									n1 = ((int)20 + log2_4->__get(((int)range >> (int)(int)20)));
            								}
            							}
            							else {
HXLINE( 585)								if ((range < (int)536870912)) {
HXLINE( 585)									n1 = ((int)25 + log2_4->__get(((int)range >> (int)(int)25)));
            								}
            								else {
HXLINE( 585)									if ((range < (int)-2147483648)) {
HXLINE( 585)										n1 = ((int)30 + log2_4->__get(((int)range >> (int)(int)30)));
            									}
            									else {
HXLINE( 585)										n1 = (int)0;
            									}
            								}
            							}
            						}
HXDLIN( 585)						HX_VARI_NAME( int,n3,"n") = (n1 - (int)1);
HXDLIN( 585)						int _hx_tmp2;
HXDLIN( 585)						if ((_this1->validBits < (int)0)) {
HXLINE( 585)							_hx_tmp2 = (int)0;
            						}
            						else {
HXLINE( 585)							if ((_this1->validBits < n3)) {
HXLINE( 585)								if ((n3 > (int)24)) {
HXLINE( 585)									int _hx_tmp3 = _this1->readBits((int)24);
HXDLIN( 585)									_hx_tmp2 = (_hx_tmp3 + ((int)_this1->readBits((n3 - (int)24)) << (int)(int)24));
            								}
            								else {
HXLINE( 585)									if ((_this1->validBits == (int)0)) {
HXLINE( 585)										_this1->acc = (int)0;
            									}
HXDLIN( 585)									while(true){
HXLINE( 585)										bool _hx_tmp4;
HXDLIN( 585)										if ((_this1->bytesInSeg == (int)0)) {
HXLINE( 585)											if (!(_this1->lastSeg)) {
HXLINE( 585)												_hx_tmp4 = (_this1->next() == (int)0);
            											}
            											else {
HXLINE( 585)												_hx_tmp4 = true;
            											}
            										}
            										else {
HXLINE( 585)											_hx_tmp4 = false;
            										}
HXDLIN( 585)										if (_hx_tmp4) {
HXLINE( 585)											_this1->validBits = (int)-1;
HXDLIN( 585)											goto _hx_goto_63;
            										}
            										else {
HXLINE( 585)											_this1->bytesInSeg--;
HXDLIN( 585)											int a1 = _this1->acc;
HXDLIN( 585)											_this1->inputPosition = (_this1->inputPosition + (int)1);
HXDLIN( 585)											int b1 = _this1->input->readByte();
HXDLIN( 585)											_this1->acc = (a1 + ((int)b1 << (int)_this1->validBits));
HXDLIN( 585)											_this1->validBits = (_this1->validBits + (int)8);
            										}
HXDLIN( 585)										if (!((_this1->validBits < n3))) {
HXLINE( 585)											goto _hx_goto_63;
            										}
            									}
            									_hx_goto_63:;
HXDLIN( 585)									if ((_this1->validBits < (int)0)) {
HXLINE( 585)										_hx_tmp2 = (int)0;
            									}
            									else {
HXLINE( 585)										HX_VARI_NAME( int,z2,"z") = ((int)_this1->acc & (int)(((int)(int)1 << (int)n3) - (int)1));
HXDLIN( 585)										_this1->acc = hx::UShr(_this1->acc,n3);
HXDLIN( 585)										_this1->validBits = (_this1->validBits - n3);
HXDLIN( 585)										_hx_tmp2 = z2;
            									}
            								}
            							}
            							else {
HXLINE( 585)								HX_VARI_NAME( int,z3,"z") = ((int)_this1->acc & (int)(((int)(int)1 << (int)n3) - (int)1));
HXDLIN( 585)								_this1->acc = hx::UShr(_this1->acc,n3);
HXDLIN( 585)								_this1->validBits = (_this1->validBits - n3);
HXDLIN( 585)								_hx_tmp2 = z3;
            							}
            						}
HXDLIN( 585)						fy[(int)0] = _hx_tmp2;
HXLINE( 586)						HX_VARI_NAME(  ::stb::format::vorbis::VorbisDecodeState,_this2,"_this") = this->decodeState;
HXDLIN( 586)						HX_VARI_NAME( ::Array< int >,log2_41,"log2_4") = ::Array_obj< int >::fromData( _hx_array_data_42df9f40_82,16);
HXDLIN( 586)						int n4;
HXDLIN( 586)						if ((range < (int)16384)) {
HXLINE( 586)							if ((range < (int)16)) {
HXLINE( 586)								n4 = log2_41->__get(range);
            							}
            							else {
HXLINE( 586)								if ((range < (int)512)) {
HXLINE( 586)									n4 = ((int)5 + log2_41->__get(((int)range >> (int)(int)5)));
            								}
            								else {
HXLINE( 586)									n4 = ((int)10 + log2_41->__get(((int)range >> (int)(int)10)));
            								}
            							}
            						}
            						else {
HXLINE( 586)							if ((range < (int)16777216)) {
HXLINE( 586)								if ((range < (int)524288)) {
HXLINE( 586)									n4 = ((int)15 + log2_41->__get(((int)range >> (int)(int)15)));
            								}
            								else {
HXLINE( 586)									n4 = ((int)20 + log2_41->__get(((int)range >> (int)(int)20)));
            								}
            							}
            							else {
HXLINE( 586)								if ((range < (int)536870912)) {
HXLINE( 586)									n4 = ((int)25 + log2_41->__get(((int)range >> (int)(int)25)));
            								}
            								else {
HXLINE( 586)									if ((range < (int)-2147483648)) {
HXLINE( 586)										n4 = ((int)30 + log2_41->__get(((int)range >> (int)(int)30)));
            									}
            									else {
HXLINE( 586)										n4 = (int)0;
            									}
            								}
            							}
            						}
HXDLIN( 586)						HX_VARI_NAME( int,n5,"n") = (n4 - (int)1);
HXDLIN( 586)						int _hx_tmp5;
HXDLIN( 586)						if ((_this2->validBits < (int)0)) {
HXLINE( 586)							_hx_tmp5 = (int)0;
            						}
            						else {
HXLINE( 586)							if ((_this2->validBits < n5)) {
HXLINE( 586)								if ((n5 > (int)24)) {
HXLINE( 586)									int _hx_tmp6 = _this2->readBits((int)24);
HXDLIN( 586)									_hx_tmp5 = (_hx_tmp6 + ((int)_this2->readBits((n5 - (int)24)) << (int)(int)24));
            								}
            								else {
HXLINE( 586)									if ((_this2->validBits == (int)0)) {
HXLINE( 586)										_this2->acc = (int)0;
            									}
HXDLIN( 586)									while(true){
HXLINE( 586)										bool _hx_tmp7;
HXDLIN( 586)										if ((_this2->bytesInSeg == (int)0)) {
HXLINE( 586)											if (!(_this2->lastSeg)) {
HXLINE( 586)												_hx_tmp7 = (_this2->next() == (int)0);
            											}
            											else {
HXLINE( 586)												_hx_tmp7 = true;
            											}
            										}
            										else {
HXLINE( 586)											_hx_tmp7 = false;
            										}
HXDLIN( 586)										if (_hx_tmp7) {
HXLINE( 586)											_this2->validBits = (int)-1;
HXDLIN( 586)											goto _hx_goto_64;
            										}
            										else {
HXLINE( 586)											_this2->bytesInSeg--;
HXDLIN( 586)											int a2 = _this2->acc;
HXDLIN( 586)											_this2->inputPosition = (_this2->inputPosition + (int)1);
HXDLIN( 586)											int b2 = _this2->input->readByte();
HXDLIN( 586)											_this2->acc = (a2 + ((int)b2 << (int)_this2->validBits));
HXDLIN( 586)											_this2->validBits = (_this2->validBits + (int)8);
            										}
HXDLIN( 586)										if (!((_this2->validBits < n5))) {
HXLINE( 586)											goto _hx_goto_64;
            										}
            									}
            									_hx_goto_64:;
HXDLIN( 586)									if ((_this2->validBits < (int)0)) {
HXLINE( 586)										_hx_tmp5 = (int)0;
            									}
            									else {
HXLINE( 586)										HX_VARI_NAME( int,z4,"z") = ((int)_this2->acc & (int)(((int)(int)1 << (int)n5) - (int)1));
HXDLIN( 586)										_this2->acc = hx::UShr(_this2->acc,n5);
HXDLIN( 586)										_this2->validBits = (_this2->validBits - n5);
HXDLIN( 586)										_hx_tmp5 = z4;
            									}
            								}
            							}
            							else {
HXLINE( 586)								HX_VARI_NAME( int,z5,"z") = ((int)_this2->acc & (int)(((int)(int)1 << (int)n5) - (int)1));
HXDLIN( 586)								_this2->acc = hx::UShr(_this2->acc,n5);
HXDLIN( 586)								_this2->validBits = (_this2->validBits - n5);
HXDLIN( 586)								_hx_tmp5 = z5;
            							}
            						}
HXDLIN( 586)						fy[(int)1] = _hx_tmp5;
HXLINE( 587)						{
HXLINE( 587)							HX_VARI( int,_g3) = (int)0;
HXDLIN( 587)							HX_VARI( int,_g2) = g->partitions;
HXDLIN( 587)							while((_g3 < _g2)){
HXLINE( 587)								_g3 = (_g3 + (int)1);
HXLINE( 588)								HX_VARI( int,pclass) = ( (int)(_hx_array_unsafe_get(g->partitionClassList,(_g3 - (int)1))) );
HXLINE( 589)								HX_VARI( int,cdim) = ( (int)(_hx_array_unsafe_get(g->classDimensions,pclass)) );
HXLINE( 590)								HX_VARI( int,cbits) = ( (int)(_hx_array_unsafe_get(g->classSubclasses,pclass)) );
HXLINE( 591)								HX_VARI( int,csub) = (((int)(int)1 << (int)cbits) - (int)1);
HXLINE( 592)								HX_VARI( int,cval) = (int)0;
HXLINE( 593)								if ((cbits != (int)0)) {
HXLINE( 594)									HX_VARI(  ::stb::format::vorbis::data::Codebook,c) = ( ( ::stb::format::vorbis::data::Codebook)(_hx_array_unsafe_get(codebooks,( (int)(_hx_array_unsafe_get(g->classMasterbooks,pclass)) ))) );
HXLINE( 595)									HX_VARI_NAME(  ::stb::format::vorbis::VorbisDecodeState,_this3,"_this") = this->decodeState;
HXDLIN( 595)									if ((_this3->validBits < (int)10)) {
HXLINE( 595)										_this3->prepHuffman();
            									}
HXDLIN( 595)									HX_VARI_NAME( int,i1,"i") = ( (int)(_hx_array_unsafe_get(c->fastHuffman,((int)_this3->acc & (int)(int)1023))) );
HXDLIN( 595)									HX_VAR( int,val);
HXDLIN( 595)									if ((i1 >= (int)0)) {
HXLINE( 595)										HX_VARI( int,l) = ( (int)(_hx_array_unsafe_get(c->codewordLengths,i1)) );
HXDLIN( 595)										_this3->acc = hx::UShr(_this3->acc,l);
HXDLIN( 595)										_this3->validBits = (_this3->validBits - l);
HXDLIN( 595)										if ((_this3->validBits < (int)0)) {
HXLINE( 595)											_this3->validBits = (int)0;
HXDLIN( 595)											val = (int)-1;
            										}
            										else {
HXLINE( 595)											val = i1;
            										}
            									}
            									else {
HXLINE( 595)										val = _this3->decodeScalarRaw(c);
            									}
HXDLIN( 595)									if (c->sparse) {
HXLINE( 595)										val = ( (int)(_hx_array_unsafe_get(c->sortedValues,val)) );
            									}
HXDLIN( 595)									cval = val;
            								}
HXLINE( 598)								HX_VARI( ::Array< int >,books) = ( (::Array< int >)(_hx_array_unsafe_get(g->subclassBooks,pclass)) );
HXLINE( 599)								{
HXLINE( 599)									HX_VARI( int,_g5) = (int)0;
HXDLIN( 599)									while((_g5 < cdim)){
HXLINE( 599)										_g5 = (_g5 + (int)1);
HXLINE( 600)										HX_VARI( int,book) = ( (int)(_hx_array_unsafe_get(books,((int)cval & (int)csub))) );
HXLINE( 601)										cval = ((int)cval >> (int)cbits);
HXLINE( 602)										offset = (offset + (int)1);
HXDLIN( 602)										int _hx_tmp8;
HXDLIN( 602)										if ((book >= (int)0)) {
HXLINE( 603)											HX_VARI_NAME(  ::stb::format::vorbis::VorbisDecodeState,_this4,"_this") = this->decodeState;
HXDLIN( 603)											HX_VARI_NAME(  ::stb::format::vorbis::data::Codebook,c1,"c") = ( ( ::stb::format::vorbis::data::Codebook)(_hx_array_unsafe_get(codebooks,book)) );
HXDLIN( 603)											if ((_this4->validBits < (int)10)) {
HXLINE( 603)												_this4->prepHuffman();
            											}
HXDLIN( 603)											HX_VARI_NAME( int,i2,"i") = ( (int)(_hx_array_unsafe_get(c1->fastHuffman,((int)_this4->acc & (int)(int)1023))) );
HXDLIN( 603)											HX_VAR_NAME( int,val1,"val");
HXDLIN( 603)											if ((i2 >= (int)0)) {
HXLINE( 603)												HX_VARI_NAME( int,l1,"l") = ( (int)(_hx_array_unsafe_get(c1->codewordLengths,i2)) );
HXDLIN( 603)												_this4->acc = hx::UShr(_this4->acc,l1);
HXDLIN( 603)												_this4->validBits = (_this4->validBits - l1);
HXDLIN( 603)												if ((_this4->validBits < (int)0)) {
HXLINE( 603)													_this4->validBits = (int)0;
HXDLIN( 603)													val1 = (int)-1;
            												}
            												else {
HXLINE( 603)													val1 = i2;
            												}
            											}
            											else {
HXLINE( 603)												val1 = _this4->decodeScalarRaw(c1);
            											}
HXDLIN( 603)											if (c1->sparse) {
HXLINE( 603)												val1 = ( (int)(_hx_array_unsafe_get(c1->sortedValues,val1)) );
            											}
HXLINE( 602)											_hx_tmp8 = val1;
            										}
            										else {
HXLINE( 602)											_hx_tmp8 = (int)0;
            										}
HXDLIN( 602)										fy[(offset - (int)1)] = _hx_tmp8;
            									}
            								}
            							}
            						}
HXLINE( 610)						if ((this->decodeState->validBits == (int)-1)) {
HXLINE( 611)							zeroChannel->__unsafe_set(i,true);
HXLINE( 612)							continue;
            						}
HXLINE( 615)						{
HXLINE( 615)							bool val2 = ( (bool)(step2Flag->__unsafe_set((int)1,true)) );
HXDLIN( 615)							step2Flag->__unsafe_set((int)0,val2);
            						}
HXLINE( 616)						HX_VARI( ::Array< ::Dynamic>,naighbors) = g->neighbors;
HXLINE( 617)						HX_VARI( ::Array< int >,xlist) = g->xlist;
HXLINE( 618)						{
HXLINE( 618)							HX_VARI_NAME( int,_g31,"_g3") = (int)2;
HXDLIN( 618)							HX_VARI_NAME( int,_g21,"_g2") = g->values;
HXDLIN( 618)							while((_g31 < _g21)){
HXLINE( 618)								_g31 = (_g31 + (int)1);
HXDLIN( 618)								HX_VARI( int,j) = (_g31 - (int)1);
HXLINE( 619)								HX_VARI( int,low) = ( (int)(_hx_array_unsafe_get(( (::Array< int >)(_hx_array_unsafe_get(naighbors,j)) ),(int)0)) );
HXLINE( 620)								HX_VARI( int,high) = ( (int)(_hx_array_unsafe_get(( (::Array< int >)(_hx_array_unsafe_get(naighbors,j)) ),(int)1)) );
HXLINE( 621)								int x = ( (int)(_hx_array_unsafe_get(xlist,j)) );
HXDLIN( 621)								HX_VARI( int,x0) = ( (int)(_hx_array_unsafe_get(xlist,low)) );
HXDLIN( 621)								int x1 = ( (int)(_hx_array_unsafe_get(xlist,high)) );
HXDLIN( 621)								HX_VARI( int,y0) = fy->__get(low);
HXDLIN( 621)								HX_VARI( int,dy) = (fy->__get(high) - y0);
HXDLIN( 621)								HX_VARI( int,off) = ::Std_obj::_hx_int(((Float)(::Math_obj::abs(dy) * (x - x0)) / (Float)(x1 - x0)));
HXDLIN( 621)								HX_VAR( int,lowroom);
HXDLIN( 621)								if ((dy < (int)0)) {
HXLINE( 621)									lowroom = (y0 - off);
            								}
            								else {
HXLINE( 621)									lowroom = (y0 + off);
            								}
HXLINE( 622)								HX_VARI_NAME( int,val3,"val") = fy->__get(j);
HXLINE( 623)								HX_VARI( int,highroom) = (range - lowroom);
HXLINE( 624)								HX_VAR( int,room);
HXDLIN( 624)								if ((highroom < lowroom)) {
HXLINE( 624)									room = (highroom * (int)2);
            								}
            								else {
HXLINE( 624)									room = (lowroom * (int)2);
            								}
HXLINE( 629)								if ((val3 != (int)0)) {
HXLINE( 630)									{
HXLINE( 630)										bool val4 = ( (bool)(step2Flag->__unsafe_set(high,true)) );
HXDLIN( 630)										step2Flag->__unsafe_set(low,val4);
            									}
HXLINE( 631)									step2Flag->__unsafe_set(j,true);
HXLINE( 632)									if ((val3 >= room)) {
HXLINE( 633)										if ((highroom > lowroom)) {
HXLINE( 634)											fy[j] = ((val3 - lowroom) + lowroom);
            										}
            										else {
HXLINE( 636)											fy[j] = (((lowroom - val3) + highroom) - (int)1);
            										}
            									}
            									else {
HXLINE( 639)										if ((((int)val3 & (int)(int)1) != (int)0)) {
HXLINE( 640)											fy[j] = (lowroom - ((int)(val3 + (int)1) >> (int)(int)1));
            										}
            										else {
HXLINE( 642)											fy[j] = (lowroom + ((int)val3 >> (int)(int)1));
            										}
            									}
            								}
            								else {
HXLINE( 646)									step2Flag->__unsafe_set(j,false);
HXLINE( 647)									fy[j] = lowroom;
            								}
            							}
            						}
HXLINE( 652)						{
HXLINE( 652)							HX_VARI_NAME( int,_g32,"_g3") = (int)0;
HXDLIN( 652)							HX_VARI_NAME( int,_g22,"_g2") = g->values;
HXDLIN( 652)							while((_g32 < _g22)){
HXLINE( 652)								_g32 = (_g32 + (int)1);
HXDLIN( 652)								HX_VARI_NAME( int,j1,"j") = (_g32 - (int)1);
HXLINE( 653)								if (!(( (bool)(_hx_array_unsafe_get(step2Flag,j1)) ))) {
HXLINE( 654)									fy[j1] = (int)-1;
            								}
            							}
            						}
            					}
            					else {
HXLINE( 659)						zeroChannel->__unsafe_set(i,true);
            					}
            				}
            			}
            		}
HXLINE( 673)		{
HXLINE( 673)			HX_VARI_NAME( int,_g11,"_g1") = (int)0;
HXDLIN( 673)			HX_VARI_NAME( int,_g4,"_g") = this->header->channel;
HXDLIN( 673)			while((_g11 < _g4)){
HXLINE( 673)				_g11 = (_g11 + (int)1);
HXDLIN( 673)				HX_VARI_NAME( int,i3,"i") = (_g11 - (int)1);
HXLINE( 674)				{
HXLINE( 674)					bool val5 = ( (bool)(_hx_array_unsafe_get(zeroChannel,i3)) );
HXDLIN( 674)					reallyZeroChannel->__unsafe_set(i3,val5);
            				}
            			}
            		}
HXLINE( 676)		{
HXLINE( 676)			HX_VARI_NAME( int,_g12,"_g1") = (int)0;
HXDLIN( 676)			HX_VARI_NAME( int,_g6,"_g") = map->couplingSteps;
HXDLIN( 676)			while((_g12 < _g6)){
HXLINE( 676)				_g12 = (_g12 + (int)1);
HXDLIN( 676)				HX_VARI_NAME( int,i4,"i") = (_g12 - (int)1);
HXLINE( 677)				bool _hx_tmp9;
HXDLIN( 677)				if (!(!(( (bool)(_hx_array_unsafe_get(zeroChannel,( ( ::stb::format::vorbis::data::MappingChannel)(_hx_array_unsafe_get(map->chan,i4)) )->magnitude)) )))) {
HXLINE( 677)					_hx_tmp9 = !(( (bool)(_hx_array_unsafe_get(zeroChannel,( ( ::stb::format::vorbis::data::MappingChannel)(_hx_array_unsafe_get(map->chan,i4)) )->angle)) ));
            				}
            				else {
HXLINE( 677)					_hx_tmp9 = true;
            				}
HXDLIN( 677)				if (_hx_tmp9) {
HXLINE( 678)					int index = ( ( ::stb::format::vorbis::data::MappingChannel)(_hx_array_unsafe_get(map->chan,i4)) )->magnitude;
HXDLIN( 678)					int index1 = ( ( ::stb::format::vorbis::data::MappingChannel)(_hx_array_unsafe_get(map->chan,i4)) )->angle;
HXDLIN( 678)					bool val6 = ( (bool)(zeroChannel->__unsafe_set(index1,false)) );
HXDLIN( 678)					zeroChannel->__unsafe_set(index,val6);
            				}
            			}
            		}
HXLINE( 682)		{
HXLINE( 682)			HX_VARI_NAME( int,_g13,"_g1") = (int)0;
HXDLIN( 682)			HX_VARI_NAME( int,_g7,"_g") = map->submaps;
HXDLIN( 682)			while((_g13 < _g7)){
HXLINE( 682)				_g13 = (_g13 + (int)1);
HXDLIN( 682)				HX_VARI_NAME( int,i5,"i") = (_g13 - (int)1);
HXLINE( 683)				HX_VARI( ::Array< ::Dynamic>,residueBuffers) = ::Array_obj< ::Dynamic>::__new(this->header->channel);
HXLINE( 684)				HX_VARI( ::Array< bool >,doNotDecode) = ::Array_obj< bool >::__new((int)256);
HXLINE( 685)				HX_VARI( int,ch) = (int)0;
HXLINE( 686)				{
HXLINE( 686)					HX_VARI_NAME( int,_g33,"_g3") = (int)0;
HXDLIN( 686)					HX_VARI_NAME( int,_g23,"_g2") = this->header->channel;
HXDLIN( 686)					while((_g33 < _g23)){
HXLINE( 686)						_g33 = (_g33 + (int)1);
HXDLIN( 686)						HX_VARI_NAME( int,j2,"j") = (_g33 - (int)1);
HXLINE( 688)						if ((( ( ::stb::format::vorbis::data::MappingChannel)(_hx_array_unsafe_get(map->chan,j2)) )->mux == i5)) {
HXLINE( 689)							if (( (bool)(_hx_array_unsafe_get(zeroChannel,j2)) )) {
HXLINE( 690)								doNotDecode->__unsafe_set(ch,true);
HXLINE( 691)								residueBuffers->__unsafe_set(ch,null());
            							}
            							else {
HXLINE( 693)								doNotDecode->__unsafe_set(ch,false);
HXLINE( 694)								{
HXLINE( 694)									::Array< Float > val7 = ( (::Array< Float >)(_hx_array_unsafe_get(this->channelBuffers,j2)) );
HXDLIN( 694)									residueBuffers->__unsafe_set(ch,val7);
            								}
            							}
HXLINE( 696)							ch = (ch + (int)1);
            						}
            					}
            				}
HXLINE( 700)				HX_VARI_NAME( int,r1,"r") = ( (int)(_hx_array_unsafe_get(map->submapResidue,i5)) );
HXLINE( 701)				HX_VARI(  ::stb::format::vorbis::data::Residue,residue) = ( ( ::stb::format::vorbis::data::Residue)(_hx_array_unsafe_get(this->header->residueConfig,r1)) );
HXLINE( 702)				residue->decode(this->decodeState,this->header,residueBuffers,ch,n2,doNotDecode,this->channelBuffers);
            			}
            		}
HXLINE( 708)		HX_VARI_NAME( int,i6,"i") = map->couplingSteps;
HXLINE( 709)		HX_VARI_NAME( int,n21,"n2") = ((int)n >> (int)(int)1);
HXLINE( 710)		while(true){
HXLINE( 710)			i6 = (i6 - (int)1);
HXDLIN( 710)			if (!((i6 >= (int)0))) {
HXLINE( 710)				goto _hx_goto_73;
            			}
HXLINE( 711)			::Array< ::Dynamic> this2 = this->channelBuffers;
HXDLIN( 711)			HX_VARI_NAME( ::Array< Float >,m1,"m") = ( (::Array< Float >)(_hx_array_unsafe_get(this2,( ( ::stb::format::vorbis::data::MappingChannel)(_hx_array_unsafe_get(map->chan,i6)) )->magnitude)) );
HXLINE( 712)			::Array< ::Dynamic> this3 = this->channelBuffers;
HXDLIN( 712)			HX_VARI_NAME( ::Array< Float >,a3,"a") = ( (::Array< Float >)(_hx_array_unsafe_get(this3,( ( ::stb::format::vorbis::data::MappingChannel)(_hx_array_unsafe_get(map->chan,i6)) )->angle)) );
HXLINE( 713)			{
HXLINE( 713)				HX_VARI_NAME( int,_g14,"_g1") = (int)0;
HXDLIN( 713)				while((_g14 < n21)){
HXLINE( 713)					_g14 = (_g14 + (int)1);
HXDLIN( 713)					HX_VARI_NAME( int,j3,"j") = (_g14 - (int)1);
HXLINE( 714)					HX_VAR_NAME( Float,a21,"a2");
HXDLIN( 714)					HX_VAR( Float,m2);
HXLINE( 715)					if ((( (Float)(_hx_array_unsafe_get(m1,j3)) ) > (int)0)) {
HXLINE( 716)						if ((( (Float)(_hx_array_unsafe_get(a3,j3)) ) > (int)0)) {
HXLINE( 717)							m2 = ( (Float)(_hx_array_unsafe_get(m1,j3)) );
HXLINE( 718)							HX_VARI_NAME( Float,a22,"a2") = ( (Float)(_hx_array_unsafe_get(m1,j3)) );
HXDLIN( 718)							a21 = (a22 - ( (Float)(_hx_array_unsafe_get(a3,j3)) ));
            						}
            						else {
HXLINE( 720)							a21 = ( (Float)(_hx_array_unsafe_get(m1,j3)) );
HXLINE( 721)							HX_VARI_NAME( Float,m21,"m2") = ( (Float)(_hx_array_unsafe_get(m1,j3)) );
HXDLIN( 721)							m2 = (m21 + ( (Float)(_hx_array_unsafe_get(a3,j3)) ));
            						}
            					}
            					else {
HXLINE( 724)						if ((( (Float)(_hx_array_unsafe_get(a3,j3)) ) > (int)0)) {
HXLINE( 725)							m2 = ( (Float)(_hx_array_unsafe_get(m1,j3)) );
HXLINE( 726)							HX_VARI_NAME( Float,a23,"a2") = ( (Float)(_hx_array_unsafe_get(m1,j3)) );
HXDLIN( 726)							a21 = (a23 + ( (Float)(_hx_array_unsafe_get(a3,j3)) ));
            						}
            						else {
HXLINE( 728)							a21 = ( (Float)(_hx_array_unsafe_get(m1,j3)) );
HXLINE( 729)							HX_VARI_NAME( Float,m22,"m2") = ( (Float)(_hx_array_unsafe_get(m1,j3)) );
HXDLIN( 729)							m2 = (m22 - ( (Float)(_hx_array_unsafe_get(a3,j3)) ));
            						}
            					}
HXLINE( 732)					m1->__unsafe_set(j3,m2);
HXLINE( 733)					a3->__unsafe_set(j3,a21);
            				}
            			}
            		}
            		_hx_goto_73:;
HXLINE( 739)		{
HXLINE( 739)			HX_VARI_NAME( int,_g15,"_g1") = (int)0;
HXDLIN( 739)			HX_VARI_NAME( int,_g8,"_g") = this->header->channel;
HXDLIN( 739)			while((_g15 < _g8)){
HXLINE( 739)				_g15 = (_g15 + (int)1);
HXDLIN( 739)				HX_VARI_NAME( int,i7,"i") = (_g15 - (int)1);
HXLINE( 740)				if (( (bool)(_hx_array_unsafe_get(reallyZeroChannel,i7)) )) {
HXLINE( 741)					HX_VARI_NAME( int,_g34,"_g3") = (int)0;
HXDLIN( 741)					while((_g34 < n21)){
HXLINE( 741)						_g34 = (_g34 + (int)1);
HXLINE( 742)						( (::Array< Float >)(_hx_array_unsafe_get(this->channelBuffers,i7)) )->__unsafe_set((_g34 - (int)1),(int)0);
            					}
            				}
            				else {
HXLINE( 745)					::Array< ::Dynamic> _hx_tmp10 = this->header->floorConfig;
HXDLIN( 745)					::Array< Float > _hx_tmp11 = ( (::Array< Float >)(_hx_array_unsafe_get(this->channelBuffers,i7)) );
HXDLIN( 745)					map->doFloor(_hx_tmp10,i7,n,_hx_tmp11,( (::Array< int >)(_hx_array_unsafe_get(this->finalY,i7)) ),null());
            				}
            			}
            		}
HXLINE( 751)		{
HXLINE( 751)			HX_VARI_NAME( int,_g16,"_g1") = (int)0;
HXDLIN( 751)			HX_VARI_NAME( int,_g9,"_g") = this->header->channel;
HXDLIN( 751)			while((_g16 < _g9)){
HXLINE( 751)				_g16 = (_g16 + (int)1);
HXLINE( 752)				::Array< Float > _hx_tmp12 = ( (::Array< Float >)(_hx_array_unsafe_get(this->channelBuffers,(_g16 - (int)1))) );
HXDLIN( 752)				this->inverseMdct(_hx_tmp12,n,m->blockflag);
            			}
            		}
HXLINE( 758)		{
HXLINE( 758)			HX_VARI_NAME(  ::stb::format::vorbis::VorbisDecodeState,_this5,"_this") = this->decodeState;
HXDLIN( 758)			while(true){
HXLINE( 758)				bool _hx_tmp13;
HXDLIN( 758)				if ((_this5->bytesInSeg == (int)0)) {
HXLINE( 758)					if (!(_this5->lastSeg)) {
HXLINE( 758)						_hx_tmp13 = (_this5->next() != (int)0);
            					}
            					else {
HXLINE( 758)						_hx_tmp13 = false;
            					}
            				}
            				else {
HXLINE( 758)					_hx_tmp13 = true;
            				}
HXDLIN( 758)				if (!(_hx_tmp13)) {
HXLINE( 758)					goto _hx_goto_78;
            				}
HXDLIN( 758)				_this5->bytesInSeg--;
HXDLIN( 758)				{
HXLINE( 758)					_this5->inputPosition = (_this5->inputPosition + (int)1);
HXDLIN( 758)					_this5->input->readByte();
            				}
            			}
            			_hx_goto_78:;
            		}
HXLINE( 760)		return this->decodeState->finishDecodePacket(this->previousLength,n,r);
            	}


HX_DEFINE_DYNAMIC_FUNC1(VorbisDecoder_obj,decodePacketRest,return )

 ::stb::format::vorbis::VorbisDecoder VorbisDecoder_obj::start( ::haxe::io::Input input){
            	HX_GC_STACKFRAME(&_hx_pos_79a4005a31909e64_72_start)
            	HX_STACK_ARG(input,"input")
HXLINE(  73)		HX_VARI(  ::stb::format::vorbis::VorbisDecodeState,decodeState) =  ::stb::format::vorbis::VorbisDecodeState_obj::__alloc( HX_CTX ,input);
HXLINE(  75)		HX_VARI(  ::stb::format::vorbis::VorbisDecoder,decoder) =  ::stb::format::vorbis::VorbisDecoder_obj::__alloc( HX_CTX ,::stb::format::vorbis::data::Header_obj::read(decodeState),decodeState);
HXLINE(  76)		decodeState->startFirstDecode();
HXLINE(  77)		decoder->pumpFirstFrame();
HXLINE(  79)		return decoder;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(VorbisDecoder_obj,start,return )


hx::ObjectPtr< VorbisDecoder_obj > VorbisDecoder_obj::__new( ::stb::format::vorbis::data::Header header, ::stb::format::vorbis::VorbisDecodeState decodeState) {
	hx::ObjectPtr< VorbisDecoder_obj > __this = new VorbisDecoder_obj();
	__this->__construct(header,decodeState);
	return __this;
}

hx::ObjectPtr< VorbisDecoder_obj > VorbisDecoder_obj::__alloc(hx::Ctx *_hx_ctx, ::stb::format::vorbis::data::Header header, ::stb::format::vorbis::VorbisDecodeState decodeState) {
	VorbisDecoder_obj *__this = (VorbisDecoder_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(VorbisDecoder_obj), true, "stb.format.vorbis.VorbisDecoder"));
	*(void **)__this = VorbisDecoder_obj::_hx_vtable;
	__this->__construct(header,decodeState);
	return __this;
}

VorbisDecoder_obj::VorbisDecoder_obj()
{
}

void VorbisDecoder_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(VorbisDecoder);
	HX_MARK_MEMBER_NAME(previousWindow,"previousWindow");
	HX_MARK_MEMBER_NAME(previousLength,"previousLength");
	HX_MARK_MEMBER_NAME(finalY,"finalY");
	HX_MARK_MEMBER_NAME(a,"a");
	HX_MARK_MEMBER_NAME(b,"b");
	HX_MARK_MEMBER_NAME(c,"c");
	HX_MARK_MEMBER_NAME(window,"window");
	HX_MARK_MEMBER_NAME(bitReverseData,"bitReverseData");
	HX_MARK_MEMBER_NAME(channelBuffers,"channelBuffers");
	HX_MARK_MEMBER_NAME(channelBufferStart,"channelBufferStart");
	HX_MARK_MEMBER_NAME(channelBufferEnd,"channelBufferEnd");
	HX_MARK_MEMBER_NAME(header,"header");
	HX_MARK_MEMBER_NAME(currentSample,"currentSample");
	HX_MARK_MEMBER_NAME(totalSample,"totalSample");
	HX_MARK_MEMBER_NAME(decodeState,"decodeState");
	HX_MARK_END_CLASS();
}

void VorbisDecoder_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(previousWindow,"previousWindow");
	HX_VISIT_MEMBER_NAME(previousLength,"previousLength");
	HX_VISIT_MEMBER_NAME(finalY,"finalY");
	HX_VISIT_MEMBER_NAME(a,"a");
	HX_VISIT_MEMBER_NAME(b,"b");
	HX_VISIT_MEMBER_NAME(c,"c");
	HX_VISIT_MEMBER_NAME(window,"window");
	HX_VISIT_MEMBER_NAME(bitReverseData,"bitReverseData");
	HX_VISIT_MEMBER_NAME(channelBuffers,"channelBuffers");
	HX_VISIT_MEMBER_NAME(channelBufferStart,"channelBufferStart");
	HX_VISIT_MEMBER_NAME(channelBufferEnd,"channelBufferEnd");
	HX_VISIT_MEMBER_NAME(header,"header");
	HX_VISIT_MEMBER_NAME(currentSample,"currentSample");
	HX_VISIT_MEMBER_NAME(totalSample,"totalSample");
	HX_VISIT_MEMBER_NAME(decodeState,"decodeState");
}

hx::Val VorbisDecoder_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"a") ) { return hx::Val( a); }
		if (HX_FIELD_EQ(inName,"b") ) { return hx::Val( b); }
		if (HX_FIELD_EQ(inName,"c") ) { return hx::Val( c); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"read") ) { return hx::Val( read_dyn()); }
		if (HX_FIELD_EQ(inName,"seek") ) { return hx::Val( seek_dyn()); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"clone") ) { return hx::Val( clone_dyn()); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"finalY") ) { return hx::Val( finalY); }
		if (HX_FIELD_EQ(inName,"window") ) { return hx::Val( window); }
		if (HX_FIELD_EQ(inName,"header") ) { return hx::Val( header); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"getWindow") ) { return hx::Val( getWindow_dyn()); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"totalSample") ) { return hx::Val( totalSample); }
		if (HX_FIELD_EQ(inName,"decodeState") ) { return hx::Val( decodeState); }
		if (HX_FIELD_EQ(inName,"skipSamples") ) { return hx::Val( skipSamples_dyn()); }
		if (HX_FIELD_EQ(inName,"finishFrame") ) { return hx::Val( finishFrame_dyn()); }
		if (HX_FIELD_EQ(inName,"inverseMdct") ) { return hx::Val( inverseMdct_dyn()); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"decodePacket") ) { return hx::Val( decodePacket_dyn()); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"currentSample") ) { return hx::Val( currentSample); }
		if (HX_FIELD_EQ(inName,"getFrameFloat") ) { return hx::Val( getFrameFloat_dyn()); }
		if (HX_FIELD_EQ(inName,"initBlocksize") ) { return hx::Val( initBlocksize_dyn()); }
		if (HX_FIELD_EQ(inName,"decodeInitial") ) { return hx::Val( decodeInitial_dyn()); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"previousWindow") ) { return hx::Val( previousWindow); }
		if (HX_FIELD_EQ(inName,"previousLength") ) { return hx::Val( previousLength); }
		if (HX_FIELD_EQ(inName,"bitReverseData") ) { return hx::Val( bitReverseData); }
		if (HX_FIELD_EQ(inName,"channelBuffers") ) { return hx::Val( channelBuffers); }
		if (HX_FIELD_EQ(inName,"ensurePosition") ) { return hx::Val( ensurePosition_dyn()); }
		if (HX_FIELD_EQ(inName,"pumpFirstFrame") ) { return hx::Val( pumpFirstFrame_dyn()); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"channelBufferEnd") ) { return hx::Val( channelBufferEnd); }
		if (HX_FIELD_EQ(inName,"decodePacketRest") ) { return hx::Val( decodePacketRest_dyn()); }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"setupSampleNumber") ) { return hx::Val( setupSampleNumber_dyn()); }
		if (HX_FIELD_EQ(inName,"seekFrameFromPage") ) { return hx::Val( seekFrameFromPage_dyn()); }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"channelBufferStart") ) { return hx::Val( channelBufferStart); }
	}
	return super::__Field(inName,inCallProp);
}

bool VorbisDecoder_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"start") ) { outValue = start_dyn(); return true; }
	}
	return false;
}

hx::Val VorbisDecoder_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"a") ) { a=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		if (HX_FIELD_EQ(inName,"b") ) { b=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		if (HX_FIELD_EQ(inName,"c") ) { c=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"finalY") ) { finalY=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		if (HX_FIELD_EQ(inName,"window") ) { window=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		if (HX_FIELD_EQ(inName,"header") ) { header=inValue.Cast<  ::stb::format::vorbis::data::Header >(); return inValue; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"totalSample") ) { totalSample=inValue.Cast<  ::Dynamic >(); return inValue; }
		if (HX_FIELD_EQ(inName,"decodeState") ) { decodeState=inValue.Cast<  ::stb::format::vorbis::VorbisDecodeState >(); return inValue; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"currentSample") ) { currentSample=inValue.Cast< int >(); return inValue; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"previousWindow") ) { previousWindow=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		if (HX_FIELD_EQ(inName,"previousLength") ) { previousLength=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"bitReverseData") ) { bitReverseData=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		if (HX_FIELD_EQ(inName,"channelBuffers") ) { channelBuffers=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"channelBufferEnd") ) { channelBufferEnd=inValue.Cast< int >(); return inValue; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"channelBufferStart") ) { channelBufferStart=inValue.Cast< int >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void VorbisDecoder_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("previousWindow","\x87","\x47","\x23","\x41"));
	outFields->push(HX_HCSTRING("previousLength","\x7d","\x48","\x9e","\x8d"));
	outFields->push(HX_HCSTRING("finalY","\x23","\x28","\x79","\x86"));
	outFields->push(HX_HCSTRING("a","\x61","\x00","\x00","\x00"));
	outFields->push(HX_HCSTRING("b","\x62","\x00","\x00","\x00"));
	outFields->push(HX_HCSTRING("c","\x63","\x00","\x00","\x00"));
	outFields->push(HX_HCSTRING("window","\xf0","\x93","\x8c","\x52"));
	outFields->push(HX_HCSTRING("bitReverseData","\x9f","\x9c","\x26","\xb2"));
	outFields->push(HX_HCSTRING("channelBuffers","\xf0","\xb8","\xbc","\x61"));
	outFields->push(HX_HCSTRING("channelBufferStart","\x3f","\x1f","\xc8","\xba"));
	outFields->push(HX_HCSTRING("channelBufferEnd","\x78","\x4d","\xee","\xd4"));
	outFields->push(HX_HCSTRING("header","\x8d","\x09","\x00","\xfd"));
	outFields->push(HX_HCSTRING("currentSample","\x43","\xe1","\xa6","\x00"));
	outFields->push(HX_HCSTRING("totalSample","\x0e","\x53","\x80","\xe3"));
	outFields->push(HX_HCSTRING("decodeState","\x03","\x02","\x25","\x4c"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo VorbisDecoder_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*Array< ::Dynamic >*/ ,(int)offsetof(VorbisDecoder_obj,previousWindow),HX_HCSTRING("previousWindow","\x87","\x47","\x23","\x41")},
	{hx::fsInt,(int)offsetof(VorbisDecoder_obj,previousLength),HX_HCSTRING("previousLength","\x7d","\x48","\x9e","\x8d")},
	{hx::fsObject /*Array< ::Dynamic >*/ ,(int)offsetof(VorbisDecoder_obj,finalY),HX_HCSTRING("finalY","\x23","\x28","\x79","\x86")},
	{hx::fsObject /*Array< ::Dynamic >*/ ,(int)offsetof(VorbisDecoder_obj,a),HX_HCSTRING("a","\x61","\x00","\x00","\x00")},
	{hx::fsObject /*Array< ::Dynamic >*/ ,(int)offsetof(VorbisDecoder_obj,b),HX_HCSTRING("b","\x62","\x00","\x00","\x00")},
	{hx::fsObject /*Array< ::Dynamic >*/ ,(int)offsetof(VorbisDecoder_obj,c),HX_HCSTRING("c","\x63","\x00","\x00","\x00")},
	{hx::fsObject /*Array< ::Dynamic >*/ ,(int)offsetof(VorbisDecoder_obj,window),HX_HCSTRING("window","\xf0","\x93","\x8c","\x52")},
	{hx::fsObject /*Array< ::Dynamic >*/ ,(int)offsetof(VorbisDecoder_obj,bitReverseData),HX_HCSTRING("bitReverseData","\x9f","\x9c","\x26","\xb2")},
	{hx::fsObject /*Array< ::Dynamic >*/ ,(int)offsetof(VorbisDecoder_obj,channelBuffers),HX_HCSTRING("channelBuffers","\xf0","\xb8","\xbc","\x61")},
	{hx::fsInt,(int)offsetof(VorbisDecoder_obj,channelBufferStart),HX_HCSTRING("channelBufferStart","\x3f","\x1f","\xc8","\xba")},
	{hx::fsInt,(int)offsetof(VorbisDecoder_obj,channelBufferEnd),HX_HCSTRING("channelBufferEnd","\x78","\x4d","\xee","\xd4")},
	{hx::fsObject /*::stb::format::vorbis::data::Header*/ ,(int)offsetof(VorbisDecoder_obj,header),HX_HCSTRING("header","\x8d","\x09","\x00","\xfd")},
	{hx::fsInt,(int)offsetof(VorbisDecoder_obj,currentSample),HX_HCSTRING("currentSample","\x43","\xe1","\xa6","\x00")},
	{hx::fsObject /*Dynamic*/ ,(int)offsetof(VorbisDecoder_obj,totalSample),HX_HCSTRING("totalSample","\x0e","\x53","\x80","\xe3")},
	{hx::fsObject /*::stb::format::vorbis::VorbisDecodeState*/ ,(int)offsetof(VorbisDecoder_obj,decodeState),HX_HCSTRING("decodeState","\x03","\x02","\x25","\x4c")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *VorbisDecoder_obj_sStaticStorageInfo = 0;
#endif

static ::String VorbisDecoder_obj_sMemberFields[] = {
	HX_HCSTRING("previousWindow","\x87","\x47","\x23","\x41"),
	HX_HCSTRING("previousLength","\x7d","\x48","\x9e","\x8d"),
	HX_HCSTRING("finalY","\x23","\x28","\x79","\x86"),
	HX_HCSTRING("a","\x61","\x00","\x00","\x00"),
	HX_HCSTRING("b","\x62","\x00","\x00","\x00"),
	HX_HCSTRING("c","\x63","\x00","\x00","\x00"),
	HX_HCSTRING("window","\xf0","\x93","\x8c","\x52"),
	HX_HCSTRING("bitReverseData","\x9f","\x9c","\x26","\xb2"),
	HX_HCSTRING("channelBuffers","\xf0","\xb8","\xbc","\x61"),
	HX_HCSTRING("channelBufferStart","\x3f","\x1f","\xc8","\xba"),
	HX_HCSTRING("channelBufferEnd","\x78","\x4d","\xee","\xd4"),
	HX_HCSTRING("header","\x8d","\x09","\x00","\xfd"),
	HX_HCSTRING("currentSample","\x43","\xe1","\xa6","\x00"),
	HX_HCSTRING("totalSample","\x0e","\x53","\x80","\xe3"),
	HX_HCSTRING("decodeState","\x03","\x02","\x25","\x4c"),
	HX_HCSTRING("read","\x56","\x4b","\xa7","\x4b"),
	HX_HCSTRING("skipSamples","\x4a","\x34","\x3b","\x1f"),
	HX_HCSTRING("setupSampleNumber","\xb0","\x18","\xf3","\x16"),
	HX_HCSTRING("seek","\x78","\x85","\x50","\x4c"),
	HX_HCSTRING("seekFrameFromPage","\x8e","\x11","\x2a","\x58"),
	HX_HCSTRING("clone","\x5d","\x13","\x63","\x48"),
	HX_HCSTRING("ensurePosition","\x87","\x40","\xd1","\xb4"),
	HX_HCSTRING("getFrameFloat","\x65","\x56","\x2f","\x42"),
	HX_HCSTRING("pumpFirstFrame","\xa5","\x34","\xb1","\xa7"),
	HX_HCSTRING("finishFrame","\xda","\x9a","\x88","\x2d"),
	HX_HCSTRING("getWindow","\x26","\x1d","\xe3","\xce"),
	HX_HCSTRING("initBlocksize","\x5e","\x03","\x09","\xe2"),
	HX_HCSTRING("inverseMdct","\x98","\x89","\xaa","\x21"),
	HX_HCSTRING("decodePacket","\x56","\x3f","\xd9","\x31"),
	HX_HCSTRING("decodeInitial","\xf6","\xfc","\x28","\xf6"),
	HX_HCSTRING("decodePacketRest","\x8a","\x29","\xdb","\x8b"),
	::String(null()) };

static void VorbisDecoder_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(VorbisDecoder_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void VorbisDecoder_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(VorbisDecoder_obj::__mClass,"__mClass");
};

#endif

hx::Class VorbisDecoder_obj::__mClass;

static ::String VorbisDecoder_obj_sStaticFields[] = {
	HX_HCSTRING("start","\x62","\x74","\x0b","\x84"),
	::String(null())
};

void VorbisDecoder_obj::__register()
{
	hx::Object *dummy = new VorbisDecoder_obj;
	VorbisDecoder_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("stb.format.vorbis.VorbisDecoder","\x40","\x9f","\xdf","\x42");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &VorbisDecoder_obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = VorbisDecoder_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(VorbisDecoder_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(VorbisDecoder_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< VorbisDecoder_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = VorbisDecoder_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = VorbisDecoder_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = VorbisDecoder_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace stb
} // end namespace format
} // end namespace vorbis
