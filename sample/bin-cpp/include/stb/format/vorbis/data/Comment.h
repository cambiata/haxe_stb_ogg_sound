// Generated by Haxe 3.4.0 (git build development @ 75c0f05)
#ifndef INCLUDED_stb_format_vorbis_data_Comment
#define INCLUDED_stb_format_vorbis_data_Comment

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(haxe,IMap)
HX_DECLARE_CLASS2(haxe,ds,StringMap)
HX_DECLARE_CLASS4(stb,format,vorbis,data,Comment)

namespace stb{
namespace format{
namespace vorbis{
namespace data{


class HXCPP_CLASS_ATTRIBUTES Comment_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Comment_obj OBJ_;
		Comment_obj();

	public:
		enum { _hx_ClassId = 0x244a3c36 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="stb.format.vorbis.data.Comment")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"stb.format.vorbis.data.Comment"); }
		static hx::ObjectPtr< Comment_obj > __new();
		static hx::ObjectPtr< Comment_obj > __alloc(hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Comment_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("Comment","\x3f","\xa2","\xc1","\x4e"); }

		 ::haxe::ds::StringMap data;
		::String get_title();
		::Dynamic get_title_dyn();

		 ::Dynamic get_loopStart();
		::Dynamic get_loopStart_dyn();

		 ::Dynamic get_loopLength();
		::Dynamic get_loopLength_dyn();

		::String get_version();
		::Dynamic get_version_dyn();

		::String get_album();
		::Dynamic get_album_dyn();

		::String get_organization();
		::Dynamic get_organization_dyn();

		::String get_tracknumber();
		::Dynamic get_tracknumber_dyn();

		::String get_performer();
		::Dynamic get_performer_dyn();

		::String get_copyright();
		::Dynamic get_copyright_dyn();

		::String get_license();
		::Dynamic get_license_dyn();

		::String get_artist();
		::Dynamic get_artist_dyn();

		::String get_description();
		::Dynamic get_description_dyn();

		::String get_genre();
		::Dynamic get_genre_dyn();

		::String get_date();
		::Dynamic get_date_dyn();

		::String get_location();
		::Dynamic get_location_dyn();

		::String get_contact();
		::Dynamic get_contact_dyn();

		::String get_isrc();
		::Dynamic get_isrc_dyn();

		::Array< ::String > get_artists();
		::Dynamic get_artists_dyn();

		void add(::String key,::String value);
		::Dynamic add_dyn();

		::String getString(::String key);
		::Dynamic getString_dyn();

		::Array< ::String > getArray(::String key);
		::Dynamic getArray_dyn();

};

} // end namespace stb
} // end namespace format
} // end namespace vorbis
} // end namespace data

#endif /* INCLUDED_stb_format_vorbis_data_Comment */ 
